// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OptionsMenu createDebugMenuItems should return array of items 1`] = `
Array [
  <DropdownItem
    eventKey="item"
    href={null}
    onClick={[MockFunction]}
  >
    item
  </DropdownItem>,
  <DropdownDivider
    role="separator"
  />,
  <DropdownItem
    eventKey="item"
    href={null}
    onClick={null}
  >
    item
  </DropdownItem>,
]
`;

exports[`OptionsMenu createDebugMenuItems should return array of remaining items when some items are missing keys or values 1`] = `
Array [
  <DropdownItem
    eventKey="item"
    href={null}
    onClick={[MockFunction]}
  >
    item
  </DropdownItem>,
]
`;

exports[`OptionsMenu createMenuItems should return array of items and filter invalid items 1`] = `
Array [
  <li
    className="mb-1 fs-4 d-grid text-start item1"
  >
    <Button
      active={false}
      className="btn"
      disabled={false}
      onClick={[Function]}
      variant="link"
    >
      item1
    </Button>
  </li>,
  <li
    className="mb-1 fs-4 d-grid text-start"
  >
    <Button
      active={false}
      className="btn"
      disabled={false}
      onClick={[MockFunction]}
      variant="link"
    >
       
    </Button>
  </li>,
  <li
    className="mb-1 fs-4 d-grid text-start my-item"
  >
    <Button
      active={false}
      className="btn"
      disabled={false}
      onClick={[MockFunction]}
      variant="link"
    >
      item3
    </Button>
  </li>,
]
`;

exports[`OptionsMenu render should render with menu items 1`] = `
<Offcanvas
  autoFocus={true}
  backdrop={true}
  enforceFocus={true}
  id="options-menu"
  keyboard={true}
  onHide={[Function]}
  placement="end"
  renderStaticNode={false}
  restoreFocus={true}
  scroll={false}
  show={true}
>
  <OffcanvasHeader
    closeButton={true}
    closeLabel="Close"
    closeVariant="white"
  >
    <OffcanvasTitle
      as="h2"
      className="fw-bold"
    >
      Options
    </OffcanvasTitle>
  </OffcanvasHeader>
  <OffcanvasBody>
    <ul
      className="options-menu-items list-unstyled pb-3 px-4"
    >
      <li
        className="mb-1 fs-4 d-grid text-start"
      >
        <Button
          active={false}
          className="btn logout"
          disabled={false}
          onClick={[Function]}
          variant="link"
        >
          Logout
        </Button>
      </li>
      <hr />
      <li
        className="mb-1 fs-4 d-grid text-start"
      >
        <Button
          active={false}
          className="btn undo-start-game"
          disabled={false}
          onClick={[Function]}
          variant="link"
        >
          Undo Start
          <div
            className="fs-6 fst-italic opacity-75 lh-1"
          >
            Start Time: 
          </div>
        </Button>
      </li>
      <li
        className="mb-1 fs-4 d-grid text-start"
      >
        <Button
          active={false}
          className="btn settings-menu"
          disabled={false}
          onClick={[Function]}
          variant="link"
        >
          Settings
        </Button>
      </li>
      <ForwardRef
        appear={false}
        getDimensionValue={[Function]}
        in={false}
        mountOnEnter={false}
        timeout={300}
        unmountOnExit={false}
      >
        <div
          className="accordion-dark accordion accordion-flush"
          id="settings-menu"
        >
          <div
            className="accordion-body"
          >
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              onClick={[Function]}
              title="Allows subscribers to make additional game requests when enabled."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Enable Sub Requests
              </span>
            </Button>
            <Button
              active={false}
              className="btn settings-menu subsetting"
              disabled={true}
              onClick={[Function]}
              title="Limit subscribers to one additional game requests when enabled."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Limit 1 Sub Request
              </span>
            </Button>
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              onClick={[Function]}
              title="Clears the list of player signups after a game redemption."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Clear Seats After Redeem
              </span>
            </Button>
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              title="Uses a custom character or emote to separate requests listed in the chat."
              variant="link"
            >
              <span>
                Use Custom Delimiter: 
              </span>
              <input
                className="form-control"
                name="custom-delimiter"
                onChange={[Function]}
                type="text"
              />
            </Button>
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              onClick={[Function]}
              title="Allows host to set a room code that can be whispered to players."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Enable Room Code
              </span>
            </Button>
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              onClick={[Function]}
              title="Posts a link in chat to the commands page when '!command' is used; otherwise, lists all available commands in chat when disabled."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Use Link for 
                <tt>
                  !command
                </tt>
              </span>
            </Button>
          </div>
        </div>
      </ForwardRef>
      <li
        className="mb-1 fs-4 d-grid text-start d-none"
      >
        <Button
          active={false}
          className="btn reload-game-list"
          disabled={false}
          variant="link"
        >
          Refresh Game List
        </Button>
      </li>
      <li
        className="mb-1 fs-4 d-grid text-start d-none"
      >
        <Button
          active={false}
          className="btn game-list"
          disabled={false}
          onClick={[Function]}
          variant="link"
        >
          Game List
        </Button>
      </li>
      <ForwardRef
        appear={false}
        getDimensionValue={[Function]}
        in={true}
        mountOnEnter={false}
        timeout={300}
        unmountOnExit={false}
      >
        <div>
          <OptionsGameList
            allowedGames={null}
            validGames={null}
          />
        </div>
      </ForwardRef>
    </ul>
    <div
      className="position-absolute bottom-0 start-0 end-0 pb-3 text-center"
      id="options-debug-menu-items"
    >
      <Dropdown
        align="start"
        autoClose={true}
        drop="up-centered"
        id="dropdown-debug-menu-items"
        navbar={false}
        variant="link"
      >
        <DropdownToggle
          id="dropdown-debug-menu-items-toggle"
          size="sm"
          variant="link"
        >
          version 0.0.0
        </DropdownToggle>
        <DropdownMenu
          flip={true}
          variant="dark"
        >
          <DropdownHeader
            role="heading"
          >
            Debug Options
          </DropdownHeader>
        </DropdownMenu>
      </Dropdown>
    </div>
  </OffcanvasBody>
</Offcanvas>
`;

exports[`OptionsMenu render should render without error 1`] = `
<Offcanvas
  autoFocus={true}
  backdrop={true}
  enforceFocus={true}
  id="options-menu"
  keyboard={true}
  onHide={[Function]}
  placement="end"
  renderStaticNode={false}
  restoreFocus={true}
  scroll={false}
  show={false}
>
  <OffcanvasHeader
    closeButton={true}
    closeLabel="Close"
    closeVariant="white"
  >
    <OffcanvasTitle
      as="h2"
      className="fw-bold"
    >
      Options
    </OffcanvasTitle>
  </OffcanvasHeader>
  <OffcanvasBody>
    <ul
      className="options-menu-items list-unstyled pb-3 px-4"
    >
      <li
        className="mb-1 fs-4 d-grid text-start"
      >
        <Button
          active={false}
          className="btn logout"
          disabled={false}
          onClick={[Function]}
          variant="link"
        >
          Logout
        </Button>
      </li>
      <hr />
      <li
        className="mb-1 fs-4 d-grid text-start"
      >
        <Button
          active={false}
          className="btn settings-menu"
          disabled={false}
          onClick={[Function]}
          variant="link"
        >
          Settings
        </Button>
      </li>
      <ForwardRef
        appear={false}
        getDimensionValue={[Function]}
        in={false}
        mountOnEnter={false}
        timeout={300}
        unmountOnExit={false}
      >
        <div
          className="accordion-dark accordion accordion-flush"
          id="settings-menu"
        >
          <div
            className="accordion-body"
          >
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              onClick={[Function]}
              title="Allows subscribers to make additional game requests when enabled."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Enable Sub Requests
              </span>
            </Button>
            <Button
              active={false}
              className="btn settings-menu subsetting"
              disabled={true}
              onClick={[Function]}
              title="Limit subscribers to one additional game requests when enabled."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Limit 1 Sub Request
              </span>
            </Button>
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              onClick={[Function]}
              title="Clears the list of player signups after a game redemption."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Clear Seats After Redeem
              </span>
            </Button>
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              title="Uses a custom character or emote to separate requests listed in the chat."
              variant="link"
            >
              <span>
                Use Custom Delimiter: 
              </span>
              <input
                className="form-control"
                name="custom-delimiter"
                onChange={[Function]}
                type="text"
              />
            </Button>
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              onClick={[Function]}
              title="Allows host to set a room code that can be whispered to players."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Enable Room Code
              </span>
            </Button>
            <Button
              active={false}
              className="btn settings-menu"
              disabled={false}
              onClick={[Function]}
              title="Posts a link in chat to the commands page when '!command' is used; otherwise, lists all available commands in chat when disabled."
              variant="link"
            >
              <input
                readOnly={true}
                role="switch"
                type="checkbox"
              />
               
              <span>
                Use Link for 
                <tt>
                  !command
                </tt>
              </span>
            </Button>
          </div>
        </div>
      </ForwardRef>
      <li
        className="mb-1 fs-4 d-grid text-start d-none"
      >
        <Button
          active={false}
          className="btn reload-game-list"
          disabled={false}
          variant="link"
        >
          Refresh Game List
        </Button>
      </li>
      <li
        className="mb-1 fs-4 d-grid text-start d-none"
      >
        <Button
          active={false}
          className="btn game-list"
          disabled={false}
          onClick={[Function]}
          variant="link"
        >
          Game List
        </Button>
      </li>
      <ForwardRef
        appear={false}
        getDimensionValue={[Function]}
        in={false}
        mountOnEnter={false}
        timeout={300}
        unmountOnExit={false}
      >
        <div>
          <OptionsGameList
            allowedGames={null}
            validGames={null}
          />
        </div>
      </ForwardRef>
    </ul>
    <div
      className="position-absolute bottom-0 start-0 end-0 pb-3 text-center"
      id="options-debug-menu-items"
    >
      <Dropdown
        align="start"
        autoClose={true}
        drop="up-centered"
        id="dropdown-debug-menu-items"
        navbar={false}
        variant="link"
      >
        <DropdownToggle
          id="dropdown-debug-menu-items-toggle"
          size="sm"
          variant="link"
        >
          version 0.0.0
        </DropdownToggle>
        <DropdownMenu
          flip={true}
          variant="dark"
        >
          <DropdownHeader
            role="heading"
          >
            Debug Options
          </DropdownHeader>
        </DropdownMenu>
      </Dropdown>
    </div>
  </OffcanvasBody>
</Offcanvas>
`;
