{"version":3,"sources":["ChatActivity.js","Commands.yaml","CommandsList.js","images/lock.svg","components/GameRequest.js","JackboxGames.yaml","MessageHandler.js","landing/OptionsGameList.js","landing/OptionsMenu.js","example-states.js","images/dice.svg","images/star.svg","components/PlayerSelect.js","landing/Sidebar.js","WheelComponent.js","landing/MainScreen.js","components/LoadSpinner/index.js","AuthenticatedApp.js","JackboxGameList.js","LoginScreen.js","OptionsList.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","ActivityStatus","ChatActivity","channel","updateLastMessageTime","user","lastMessageTimes","Date","now","minsSinceLastChatMessage","Math","floor","getChatters","then","r","json","res","chatters","moderators","viewers","staff","admins","global_mods","catch","e","this","getStatusPromise","bind","includes","SectionTable","data","i","entries","Table","striped","bordered","hover","variant","responsive","className","width","map","CommandTableRow","command","info","Example","Availability","Description","OnScreenEquivalent","Variants","CommandsList","props","onValidCommands","validCommands","setState","state","Object","section","commands","onSelectTab","eventKey","activeFilter","rawCommandsList","text","YAML","parse","navItems","cmd","Nav","Item","Link","header","hideHeader","id","activeKey","onSelect","length","filter","Component","GameRequest","deleteRequest","onDelete","gameName","getFormattedTimeDiff","timestamp","unit","timeDiff","getTooltipContent","Tooltip","metadata","username","getTooltipActivityStatusClassName","activityStatus","toggleLock","updateStatus","getActivity","time","lockClassName","locked","cardStatus","chosen","OverlayTrigger","placement","overlay","onEnter","name","partyPack","replace","src","lock","alt","onClick","type","tmi","GAME_REQUEST_COMMAND","GAME_SUBREQUEST_COMMAND","easterEggRequests","RequestName","Response","version","MessageHandler","componentDidMount","client","getTwitchClient","on","onMessage","onDisconnected","connect","getGameList","rawJackboxGameList","getCommandList","rawCommandList","componentWillUnmount","disconnect","console","log","yamlCommandsList","warn","yamlGameList","validGames","identity","password","access_token","channels","options","skipUpdatingEmotesets","updateEmotesetsTimer","isModOrBroadcaster","modList","toLowerCase","checkForMiscCommands","message","startsWith","settings","useLinkForCommandList","sendMessage","process","values","flatMap","keys","c","sort","join","requestedGame","trim","gameObj","findGame","pipe","customDelimiter","requests","messages","m","toggleAllowGameRequests","prevSelectedGame","removeSelectedGameFromHistory","changeNextGameIdx","upcomingGames","numGamesAhead","setNextGame","clearSeatsAfterRedeem","clearQueueHandler","requestedPack","packObj","addPack","caniplayHandler","sendConfirmationMsg","redeemingUser","isPrioritySeat","exitingUser","playerExitHandler","openQueueHandler","closeQueueHandler","startGame","undoStart","regEx","requestEntry","partyPackName","partyPackObj","formalGameName","v","longName","checkForGameCommand","checkForSubrequest","subscriber","onConnected","connected","evt","target","tags","msg","self","logUserMessages","cleanedMsg","isSubRequest","enableSubRequests","requestedBy","allowGameRequests","prevRequestedGameName","prevSubRequestedGameName","enableSubRequestLimit","allowedGames","g","game","pack","enabled","addGameRequest","previousGames","lastPlayedGames","reverse","previous","upcoming","packslug","window","say","setAllowedGames","_disconnect","removeAllListeners","_connect","refreshTwitchClient","reloadGameList","gameList","PropTypes","bool","func","OptionsGameList","getAllowedGames","__allowedGames","localStorage","getItem","JSON","assign","concat","packGames","gameId","undefined","setItem","stringify","onCheckHandler","checked","prevState","onGroupCheckHandler","value","renderGameCard","onChange","htmlFor","title","renderPackCheckbox","isChecked","renderPartyPack","gamesEnabled","isIndeterminate","Accordion","key","Header","Body","ref","el","indeterminate","partyPackList","flush","OptionsMenu","createDebugMenuItems","items","idx","label","test","Dropdown","Divider","href","createMenuItems","noop","listItemClassNames","listItemClassName","split","n","btnClassNames","btnClassName","Button","toggleGameList","showGameList","toggleSettingsMenu","showSettingsMenu","debugItems","onSettingsUpdate","optionMenuItems","debugMenuItems","undoStartButton","showUndoAvailable","onUndo","parentState","lastStartTimestamp","Offcanvas","onHide","show","showOptionsMenu","closeButton","closeVariant","Title","as","onLogout","toggleCommandsModal","Collapse","in","role","readOnly","disabled","defaultValue","enableRoomCode","gamesList","drop","Toggle","size","Menu","array","object","stateMainScreen","statePlayerSelect","PlayerSelect","updateColumnSizes","columnWidth","firstColumn","current","offsetWidth","handleNewPlayerRequest","column","isQueueOpen","updateColumnForUser","interested","uObj","playing","joined","handleRoomCodeChange","roomCode","handleRoomCodeFocus","select","userObj","newColumn","removeUser","iObj","pObj","jObj","clearQueue","openQueue","closeQueue","playerCount","streamerSeat","toggleStreamerSeat","canStartGame","onUndoState","undoState","initRandomizePlayersAnimation","min","randInt","setInterval","randomizePlayersAnimation","randCount","randomizePlayers","clearInterval","randIdx","randUsername","numPlayersToAdd","randIdxArray","randUsernameArray","random","push","renderPlayerCard","curColumn","userLookup","btnPlaying","btnInterested","btnSendCode","redemptionIndicator","displaySendCodeBtn","sendCode","star","playerNameStyles","maxWidth","style","renderStreamerSeatToggle","defaultChecked","renderPlayerCount","player","sendWhisper","sendCodeToAll","sendingToMsg","forEach","setTimeout","React","createRef","sentCodeStatus","location","hash","indexOf","fakeStates","addEventListener","removeEventListener","inputRoomCode","startGameClass","autoComplete","onFocus","placeholder","dice","Sidebar","getHistoryList","history","droppableId","provided","droppableProps","innerRef","index","draggableId","draggableProps","dragHandleProps","printGame","getNextGameName","hasNextGame","nextGameIdx","getNextGamePartyPack","handleOnDragEnd","result","destination","_items","Array","from","fill","splice","source","_reorderedItem","newNextGameIdx","findIndex","reorderedItem","changeGameOrder","moveNextGameFwd","moveNextGameBack","buttonPlayerSelect","nextGame","requestMode","togglePlayerSelect","onDragEnd","WheelComponent","segments","segColors","winningSegment","onStart","onSpinProgress","onFinished","primaryColor","contrastColor","buttonText","isOnlyOnce","upDuration","downDuration","fontFamily","wheelHeight","wheelWidth","enableScrollTop","multilineDelimiter","currentSegment","currentSegmentLabel","isStarted","useState","isFinished","setFinished","timerHandle","timerDelay","angleCurrent","angleDelta","canvasContext","maxSpeed","PI","upTime","downTime","spinStart","frames","centerX","round","centerY","useEffect","wheelInit","scrollTo","initCanvas","wheelDraw","canvas","document","getElementById","navigator","appVersion","createElement","setAttribute","appendChild","spin","getContext","event","getTime","max","onTimerTick","draw","duration","progress","finished","sin","clear","drawWheel","drawNeedle","drawSegment","lastAngle","angle","ctx","save","beginPath","moveTo","arc","lineTo","closePath","fillStyle","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","fileStyle","change","clearRect","pointerEvents","position","height","randomColor","MainScreen","onMount","showPlayerSelect","delta","counter","stateCopy","override","slice","addGameToQueue","gameSelected","clearModal","getGamesList","messageHandler","getOptionsDebugMenu","playerSelector","toggleUserMessageLogging","getLastState","toString","isJestEnv","JEST_WORKER_ID","lastState","getOptionsMenu","onWheelSpun","gameLongName","gameRequestObj","requester","removeGame","chatActivity","status","newMessageObj","currGame","h","nextSettings","allow","showCommandsModal","toggleOptionsMenu","toggleOptionsModal","showOptionsModal","routePlayRequest","routeLeaveRequest","routeOpenQueueRequest","routeCloseQueueRequest","routeClearQueueRequest","requestParams","URLSearchParams","from_user_id","to_user_id","requestBody","validateToken","method","body","headers","Authorization","response","errMsg","errJson","error","Promise","resolve","reject","lastStartIdx","lastStartLongName","toLocaleString","setMessageHandlerRef","ps","setPlayerSelectRef","mh","renderCommandsModal","Modal","fullscreen","centered","savedSettings","colors","count","luminosity","hue","prevProps","confettiProps","force","particleCount","floorHeight","outerWidth","outerHeight","floorWidth","gamePackList","packData","gameData","Footer","gameSelectedModal","gameRequestArray","renderOptionsModal","renderGameChosenModal","innerContent","rightColumn","mainClassName","subheading","LoadSpinner","AuthenticatedApp","promisedSetState","newState","user_id","expires_in","expiry_time","refresh_token","failed_login","getAuth","getUsers","logOut","onAuthenticated","refreshToken","_isMounted","removeItem","queryParams","queryString","search","grant_type","code","client_id","client_secret","redirect_uri","Accept","oauth","userInfo","login","modInfo","modObj","user_name","token","reload","validateResp","to","mainContent","withRouter","PartyPackCard","possibleMatches","GameCard","possibleMatch","JackboxGameList","loginUrl","LoginScreen","OptionsList","App","onHashChange","themeMatch","match","theme","classNames","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"ijBAAMA,EAAQC,EAAQ,IAETC,EACD,EADCA,EAEH,EAFGA,EAGK,EAKGC,EAAY,WAC7B,WAAYC,GAAU,IAAD,gCAMrBC,sBAAwB,SAACC,GACrB,EAAKC,iBAAgB,2BACd,EAAKA,kBAAgB,kBACvBD,EAAOE,KAAKC,OAErB,EAAC,KAEDC,yBAA2B,SAACJ,GACxB,OAAOK,KAAKC,OAAOJ,KAAKC,MAAQ,EAAKF,iBAAiBD,IAAS,IACnE,EAAC,KASDO,YAAc,WACV,OAAOb,EAAM,0EAAD,OAA2E,EAAKI,QAAO,cAC9FU,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAM,IAClBF,MAAK,SAAAG,GACF,OAAKA,GAAQA,EAAIC,SACX,GAAN,mBACKD,EAAIC,SAASC,YAAU,YACvBF,EAAIC,SAASE,SAAO,YACpBH,EAAIC,SAASG,OAAK,YAClBJ,EAAIC,SAASI,QAAM,YACnBL,EAAIC,SAASK,cANgB,IAQtC,IAAGC,OAAM,SAACC,GAIN,OAAO,IACX,GACR,EAzCIC,KAAKtB,QAAUA,EACfsB,KAAKnB,iBAAmB,CAAC,EACzBmB,KAAKC,iBAAmBD,KAAKC,iBAAiBC,KAAKF,KACvD,CAwDC,OAxDA,8FAwCD,WAAuBpB,GAAI,8EAEnBA,IAASoB,KAAKtB,QAAO,yCACdF,GAAqB,YAI5BwB,KAAKnB,iBAAiBD,IAASoB,KAAKhB,yBAAyBJ,GAtD3C,IAsDwE,yCACnFJ,GAAqB,gCAGzBwB,KAAKb,cAAcC,MAAK,SAACI,GAAQ,OACnCA,GAAaA,EAASW,SAASvB,GAE1BJ,EADAA,CACmB,KAC5B,gDACJ,mDAxDA,MAwDA,EA7D4B,G,0CCVlB,MAA0B,sC,kCCKnCF,EAAQC,EAAQ,IAGT6B,EAAe,SAAUC,EAAMC,GAExC,IAAKC,EAAWF,EAAXE,QACL,OACI,eAACC,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAOC,WAAW,KAAoCC,UAAU,OAAM,UAExG,gCACI,qBAAIA,UAAU,2BAA0B,UACpC,oBAAIC,MAAM,MAAK,SAAC,YAChB,oBAAIA,MAAM,MAAK,SAAC,gBAChB,oBAAIA,MAAM,MAAK,SAAC,gBAChB,oBAAIA,MAAM,MAAK,SAAC,yBAChB,oBAAIA,MAAM,MAAK,SAAC,aAChB,oBAAIA,MAAM,MAAK,SAAC,iBAGxB,uBAAOD,UAAU,sBAAqB,WAC/BP,GAAWA,EAAQS,IAAIC,OACtB,4BAd2EX,GAkB/F,EACaW,EAAkB,SAAH,EAA8BX,GAAI,IAApBY,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAE3CC,EAKAD,EALAC,QACAC,EAIAF,EAJAE,aACAC,EAGAH,EAHAG,YACAC,EAEAJ,EAFAI,mBACAC,EACAL,EADAK,SAGJ,OACI,qBAAmCV,UAAU,QAAO,UAChD,qBAAIA,UAAU,sDAAqD,UAAC,IAAEI,KACtE,oBAAIJ,UAAU,cAAa,SAAEO,IAC7B,6BAAKC,IACL,6BAAKC,IACL,oBAAIT,UAAsB,QAAXU,EAAmB,KAAO,4BAA4B,SAAEA,IACvE,oBAAIV,UAAU,4BAA2B,SAAEM,MAAa,4BAN9Bd,GAStC,EAEqBmB,EAAY,kDAC7B,WAAYC,GAAQ,IAAD,EAKb,OALa,qBACf,cAAMA,IAgBVC,gBAAkB,SAACC,GACf,OAAO,EAAKC,UAAS,SAACC,GAClB,OAAO,2BACAA,GAAK,IACRF,cAAeG,OAAOxB,QAAQqB,GAAeZ,KACzC,WAAsBV,GAAO,IAAD,mBAA1B0B,EAAO,KAAEC,EAAQ,KACf,MAAO,CACHD,UACAC,WACA1B,QAASwB,OAAOxB,QAAQ0B,GAAUjB,KAAI,WAAkBV,GAAC,uBAAJ,MAAU,CAACY,QAAjB,KAA0BC,KAApB,KAAyB,IAEtF,KAGZ,GACJ,EAAC,EAEDe,YAAc,SAACC,GACX,MACS,iBADDA,EAEO,EAAKN,SAAS,CACjBO,aAAc,OAGX,EAAKP,SAAS,CACjBO,aAAcD,GAG9B,EA3CI,EAAKL,MAAQ,CACTM,aAAc,KACdR,cAAe,IACjB,CACN,CA2FC,OA3FA,8CAED,SAAkBF,GAAQ,IAAD,OACrBpD,EAAM+D,GACDjD,MAAK,SAAAC,GAAC,OAAIA,EAAEiD,MAAM,IAClBlD,MAAK,SAAAkD,GACF,IAAIV,EAAgBW,IAAKC,MAAMF,GAC/B,OAAQ,EAAKX,gBAAgBC,EACjC,GACR,GAAC,oBAgCD,WAAU,IAAD,OACEA,EAAiB5B,KAAK8B,MAAtBF,cAEHa,EAAW,CACX,CAACT,QAAS,iBAAe,mBACtBJ,IACLZ,KAAI,SAAA0B,GACF,IAAOV,EAAWU,EAAXV,QACP,OACI,cAACW,EAAA,EAAIC,KAAI,UACL,cAACD,EAAA,EAAIE,KAAI,CAACV,SAAUH,EAAS,cAAaA,EAAQ,SAC7CA,KAFMA,EAMvB,IAEMc,EAAU9C,KAAK0B,MAAMqB,WAAc,KACrC,oBAAIjC,UAAU,iBAAgB,SAAC,kBAGnC,OACI,sBAAKkC,GAAG,gBAAgBlC,UAAU,YAAW,UACxCgC,EACD,cAACH,EAAA,EAAG,CAAC/B,QAAQ,OAAOqC,UAAWjD,KAAK8B,MAAMM,cAAgB,eAAgBc,SAAUlD,KAAKkC,YAAY,SAIhGN,EAAcuB,OAAS,GAAKV,IAEjC,qBAAK3B,UAAU,0DAAyD,WACjEc,GAAiBA,EAAcZ,KAC9B,SAACX,EAAMC,GACH,IAAK8B,EAAgB,EAAKN,MAArBM,aACL,OAAIA,GAAgBA,IAAiB/B,EAAK2B,QAC/B,KAGP,gCACI,oBAAIlB,UAAU,sBAAqB,SAC9BT,EAAK2B,SAAO,4BAD6C1B,IAG7DF,EAAaC,KAAK,kBAJFC,GAO7B,IACF8C,QAAO,SAAAV,GAAG,OAAIA,CAAG,QAInC,KAAC,EAlG4B,CAASW,a,kBCpD3B,MAA0B,iCCuH1BC,G,OAhHE,kDACb,WAAY5B,GAAQ,IAAD,EAUkC,OAVlC,qBACf,cAAMA,IAYV6B,cAAgB,SAACxD,GACb,EAAK2B,MAAM8B,SAAS,EAAK9B,MAAM+B,SACnC,EAAC,EAEDC,qBAAuB,SAACC,GACpB,IAAIC,EAAO,SACPC,EAAW5E,KAAKC,OAAOJ,KAAKC,MAAQ4E,GAAa,KACrD,OAAiB,IAAbE,EACO,YAEPA,GAAY,KACZD,EAAO,QACPC,EAAW5E,KAAKC,MAAM2E,EAAW,MAEjB,KACZD,EAAO,MACPC,EAAW5E,KAAKC,MAAM2E,EAAW,MAGnC,GAAN,OAAUA,EAAQ,YAAID,GAAI,OAAgB,IAAbC,EAAiB,GAAK,IAAG,QAC1D,EAAE,EAEFC,kBAAoB,SAACpC,GAAK,OACtB,cAACqC,EAAA,EAAO,yBAACf,GAAG,wBAA2BtB,GAAK,aACxC,uBAAMZ,UAAU,cAAa,UAAC,aACf,EAAKgB,MAAM+B,SAAS,OAAK,EAAKnC,MAAMsC,SAASC,SACxD,sBAAMnD,UAAS,iBAAY,EAAKoD,4CAE9B,EACZ,EAEFA,kCAAoC,WAChC,OAAQ,EAAKpC,MAAMqC,gBACf,KAAK3F,EACD,MAAO,SACX,KAAKA,EACD,MAAO,OACX,KAAKA,EACD,MAAO,eACX,QAEI,MAAO,GAEnB,EAAC,EAED4F,WAAa,WACT,OAAO,EAAK1C,MAAM0C,WAAW,EAAK1C,MAAM+B,SAC5C,EAAC,EAEDY,aAAY,gCAAG,uHAIgB,EAAK3C,MAAM4C,YAAY,EAAK5C,MAAMsC,SAASC,UAAU,KAAD,EAA7D,OAAdE,EAAc,yBACP,EAAKtC,SAAS,CACjBgC,SAAU,EAAKH,qBAAqB,EAAKhC,MAAMsC,SAASO,MACxDJ,oBACF,oGApEN,EAAKrC,MAAQ,CACT+B,SAAU,EACVM,eAAgB,MAGpB,EAAKZ,cAAgB,EAAKA,cAAcrD,KAAK,gBAC7C,EAAKwD,qBAAuB,EAAKA,qBAAqBxD,KAAK,gBAC3D,EAAKkE,WAAa,EAAKA,WAAWlE,KAAK,gBACvC,EAAKmE,aAAe,EAAKA,aAAanE,KAAK,gBAAM,CACrD,CAkGC,OAlGA,mCAiED,WACI,IAAMsE,EAAgBxE,KAAK0B,MAAMsC,SAASS,OAAS,cAAgB,gBAC7DC,EAAa1E,KAAK0B,MAAMsC,SAASW,OAAS,SAAW,UAE3D,OACI,cAACC,EAAA,EAAc,CACXC,UAAU,OACVC,QAAS9E,KAAK8D,kBACdiB,QAAS/E,KAAKqE,aAAa,SAC3B,qBAAKvD,UAAU,+BAA8B,SAC5C,qBAAKkC,GAAG,UAAUlC,UAAS,uBAAkB4D,GAAa,SACzD,sBAAK5D,UAAU,oBAAmB,UAC9B,sBAAKA,UAAU,gBAAe,UACpB,4BACKd,KAAK0B,MAAMsC,SAASgB,OAExB,IACD,kCAEUhF,KAAK0B,MAAMsC,SAASiB,WAAS,WAC3BjF,KAAK0B,MAAMsC,SAASiB,UAAUC,QAAQ,aAAc,QAAO,UAIpF,sBAAKpE,UAAU,UAAS,UACvB,qBAAKqE,IAAKC,EAAMC,IAAI,OAAOvE,UAAW0D,EAAec,QAAStF,KAAKoE,aACnE,wBAAQmB,KAAK,SAASzE,UAAU,eAAewE,QAAStF,KAAKuD,cAAc,SAAC,iBAO5F,KAAC,EA9GY,CAASF,c,yBCPX,MAA0B,0C,QCMnC/E,EAAQC,EAAQ,IAChBiH,EAAMjH,EAAQ,KAEdkH,EAAuB,WACvBC,EAA0B,cAE1BC,EAAoB,CACtB,CACIC,YAAa,UACbC,SAAS,mCAAD,OAAqCC,KAC7CtE,SAAU,CACN,UACA,IACA,SAEL,CACCoE,YAAa,YACbC,SAAU,iBAAM,gDAAiD,EACjErE,SAAU,CACN,WACA,QACA,SACA,SACA,MACA,OACA,YACA,uBACA,uBAEL,CACCoE,YAAa,QACbC,SAAU,sCACVrE,SAAU,CACN,QACA,OACA,OACA,OACA,OACA,OACA,OACA,iBAEL,CACCoE,YAAa,SACbC,SAAU,0EACVrE,SAAU,CACN,SACA,kBAEL,CACCoE,YAAa,WACbC,SAAU,8EACVrE,SAAU,CACN,WACA,gBAKSuE,EAAc,kDAa/B,WAAYrE,GAAQ,IAAD,EAiBgD,OAjBhD,qBACf,cAAMA,IAmBVsE,kBAAoB,SAACtE,GACjB,IAAMuE,EAAS,EAAKC,gBAAgB,EAAKxE,OAQzC,OAPA,EAAKuE,OAASA,EAEdA,EAAOE,GAAG,UAAW,EAAKC,WAC1BH,EAAOE,GAAG,eAAgB,EAAKE,gBAC/BJ,EAAOK,UAEP,EAAKC,YAAYC,EAAoBP,GAC9B,EAAKQ,eAAeC,EAAgBT,EAC/C,EAAC,EAEDU,qBAAuB,SAACjF,GACpB,IACQ,EAAKuE,QACL,EAAKA,OAAOW,YAIpB,CAFE,MAAM7G,GACJ8G,QAAQC,IAAI,QAAS/G,EACzB,CACJ,EAAC,EAED0G,eAAc,iDAAG,WAAOM,EAAkBd,GAAM,2FAC/B3H,EAAMyI,GACd3H,MAAK,SAAAC,GAAC,OAAIA,EAAEiD,MAAM,IAClBlD,MAAK,SAAAkD,GACF,OAAO,EAAKT,SAAS,CACjBoE,SACArE,cAAeW,IAAKC,MAAMF,IAElC,IAAGxC,OAAM,SAAAC,GACL8G,QAAQG,KAAKjH,EACjB,IAAG,KAAD,8EACT,qDAXa,GAWb,EAEDwG,YAAW,iDAAG,WAAOU,EAAchB,GAAM,2FACxB3H,EAAM2I,GACd7H,MAAK,SAAAC,GAAC,OAAIA,EAAEiD,MAAM,IAClBlD,MAAK,SAAAkD,GACF,OAAO,EAAKT,SAAS,CACjBoE,SACAiB,WAAY3E,IAAKC,MAAMF,IAE/B,IAAGxC,OAAM,SAAAC,GACL8G,QAAQG,KAAKjH,EACjB,IAAG,KAAD,8EACT,qDAXU,GAWV,EAEDmG,gBAAkB,SAACxE,GACf,OAAO,IAAI8D,EAAIS,OAAO,CAClBkB,SAAU,CACNlD,SAAUvC,EAAMhD,QAChB0I,SAAU1F,EAAM2F,cAEpBC,SAAU,CACN5F,EAAMhD,SAEV6I,QAAS,CACLC,uBAAuB,EACvBC,qBAAsB,IAGlC,EAAC,EAEDC,mBAAqB,SAACzD,GAClB,OAAQ,EAAKvC,MAAMhD,UAAYuF,GAAY,EAAKvC,MAAMiG,QAAQxH,SAAS8D,EAAS2D,cACpF,EAAC,EAGDC,qBAAuB,SAACC,EAAS7D,GAAc,IAAD,IAqEE,EASC,EAmHmH,EAsC/G,EArOjD,GAAI6D,EAAQC,WAAW,cAAgBD,EAAQC,WAAW,kBAAmB,CAAC,IAAD,EACzE,GAAuB,QAAvB,EAAI,EAAKrG,MAAMsG,gBAAQ,OAAnB,EAAqBC,sBACrB,EAAKC,YAAY,QAAD,OAASjE,EAAQ,6CAAqCkE,qDAA2C,kBAC9G,CACH,IAAIlG,EAAWF,OAAOqG,OAAO,EAAKtG,MAAMF,eAAeyG,SACnD,SAACrG,GAAO,OAAKD,OAAOuG,KAAKtG,GAAShB,KAAI,SAAAuH,GAAC,iBAAQA,EAAC,GAAG,IACrDC,OAAOC,KAAK,KACd,EAAKP,YAAY,QAAD,OAASjE,EAAQ,6CAAqChC,GAC1E,CAEA,OAAO,CACX,CAEA,GAAI6F,EAAQC,WAAW,cAAgBD,EAAQC,WAAW,cAEtD,OADA,EAAKG,YAAY,QAAD,OAASjE,EAAQ,sCAA8BkE,qDAA2C,eACnG,EAGX,GAAIL,EAAQC,WAAW,cAAe,CAClC,IAAMW,EAAgBZ,EAAQ5C,QAAQ,aAAc,IAAIyD,OACxD,GAAsB,KAAlBD,EAEA,OADA,EAAKR,YAAY,QAAD,OAASjE,EAAQ,mGAC1B,EAGX,IAAM2E,EAAU,EAAKC,SAASH,EAAezE,GAI7C,OAHI2E,GACA,EAAKV,YAAY,QAAD,OAASjE,EAAQ,aAAK2E,EAAQ5D,KAAI,iBAAS4D,EAAQ3D,UAAS,YAEzE,CACX,CAGA,GAAgB,gBAAZ6C,GAA6BA,EAAQC,WAAW,gBAA8B,kBAAZD,EAA6B,CAAC,IAAD,EAC3FgB,EAA2B,QAAnB,IAAKpH,MAAMsG,gBAAQ,OAAnB,EAAqBe,gBAAe,WACtC,EAAKrH,MAAMsG,SAASe,gBAAe,KACvC,WACFC,EAAWjH,OAAOqG,OAAO,EAAK1G,MAAMuH,UAAUjI,KAAI,SAAAkI,GAAC,OAAIA,EAAElE,IAAI,IAAEwD,OACnE,IACI,EAAKN,YAAY,QAAD,OAASjE,EAAQ,wBAAgB+E,EAASP,KAAKK,GAAK,KAIxE,CAHE,MAAM/I,GACJ,EAAKmI,YAAY,QAAD,OAASjE,EAAQ,uFACjC4C,QAAQC,IAAI/G,EAChB,CAoBA,OAAO,CACX,CAGA,GAAK+H,EAAQC,WAAW,mBACpB,OAAK,EAAKL,mBAAmBzD,IAInB,QAAV,IAAKvC,aAAK,OAAV,EAAYyH,yBAAwB,GACpC,EAAKjB,YAAY,QAAD,OAASjE,EAAQ,8FAC1B,IALH,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,GAMf,GAAK6D,EAAQC,WAAW,oBACpB,OAAK,EAAKL,mBAAmBzD,IAInB,QAAV,IAAKvC,aAAK,OAAV,EAAYyH,yBAAwB,GACpC,EAAKjB,YAAY,QAAD,OAASjE,EAAQ,wCAC1B,IALH,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,GASf,GAAK6D,EAAQC,WAAW,eAAgB,CAAC,IAAD,EACpC,IAAK,EAAKL,mBAAmBzD,GAEzB,OADA,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,EAEX,IAAImF,EAA6B,QAAb,EAAG,EAAK1H,aAAK,aAAV,EAAY2H,gCAMnC,OALyB,IAArBD,EACA,EAAKlB,YAAY,QAAD,OAASjE,EAAQ,wDAEjC,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,4BAAoBmF,EAAiBpE,KAAI,yBAEvE,CACX,CAGA,GAAgB,qBAAZ8C,GAA8C,iBAAZA,GAA0C,qBAAZA,EAChE,OAAK,EAAKJ,mBAAmBzD,IAIzB,EAAKvC,MAAM4H,kBAAkB,GACzB,EAAK5H,MAAM6H,cAAcpG,OAAS,EAElC,EAAK+E,YAAY,QAAD,OAASjE,EAAQ,+CAAuC,EAAKvC,MAAM6H,cAAc,GAAGvE,KAAI,MAExG,EAAKkD,YAAY,QAAD,OAASjE,EAAQ,8CAGrC,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,2DAE9B,IAbH,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,GAgBf,GAAgB,qBAAZ6D,GAA8C,kBAAZA,GAA2C,sBAAZA,EACjE,OAAK,EAAKJ,mBAAmBzD,IAIzB,EAAKvC,MAAM4H,mBAAmB,GAC9B,EAAKpB,YAAY,QAAD,OAASjE,EAAQ,+CAAuC,EAAKvC,MAAM6H,cAAc,GAAGvE,KAAI,MAExG,EAAKkD,YAAY,QAAD,OAASjE,EAAQ,+DAE9B,IARH,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,GAWf,GAAI6D,EAAQC,WAAW,iBAAmBD,EAAQC,WAAW,SAAWD,EAAQC,WAAW,eAAgB,CACvG,IAAK,EAAKL,mBAAmBzD,GAEzB,OADA,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,iDAAyC6D,EAAQC,WAAW,MAAQ,eAAiB,cAAa,eAC5H,EAGX,IAAMW,EAAgBZ,EAAQ5C,QAAQ,eAAgB,IAAIA,QAAQ,OAAQ,IAAIA,QAAQ,cAAe,IAAIyD,OACzG,GAAsB,KAAlBD,EAEA,OADA,EAAKR,YAAY,QAAD,OAASjE,EAAQ,yFAAiF6D,EAAQC,WAAW,MAAQ,eAAiB,cAAa,YACpK,EAGX,IAAMa,EAAU,EAAKC,SAASH,EAAezE,GAC7C,GAAI2E,EAAS,CAAC,IAAD,EAOgD,EANnDY,EAAgB,EAAK9H,MAAM+H,YAAYb,GAM7C,GALsB,IAAlBY,EACA,EAAKtB,YAAY,QAAD,OAASjE,EAAQ,aAAK2E,EAAQ5D,KAAI,sDAElD,EAAKkD,YAAY,QAAD,OAASjE,EAAQ,aAAK2E,EAAQ5D,KAAI,qDAA6CwE,EAAa,qCAA6BA,EAAgB,EAAI,IAAM,GAAE,OAEtH,KAA5B,QAAnB,IAAK9H,MAAMsG,gBAAQ,aAAnB,EAAqB0B,uBACX,QAAV,IAAKhI,aAAK,OAAV,EAAYiI,mBAEpB,CACA,OAAO,CACX,CAGA,GAAI7B,EAAQC,WAAW,aAAeD,EAAQC,WAAW,SAAU,CAC/D,IAAK,EAAKL,mBAAmBzD,GAEzB,OADA,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,iDAAyC6D,EAAQC,WAAW,MAAQ,WAAa,QAAO,eAClH,EAGX,IAAM6B,EAAgB9B,EAAQ5C,QAAQ,WAAY,IAAIA,QAAQ,QAAS,IAAIyD,OAC3E,GAAsB,KAAlBiB,EAEA,OADA,EAAK1B,YAAY,QAAD,OAASjE,EAAQ,yFAAiF6D,EAAQC,WAAW,MAAQ,WAAa,QAAO,QAC1J,EAGX,GAAoC,eAAhC6B,EAAchC,cAEd,OADA,EAAKM,YAAY,QAAD,OAASjE,EAAQ,2EAC1B,EAGX,IAAM4F,EAAU,EAAKC,QAAQF,EAAe3F,GAM5C,OALI4F,EACA,EAAK3B,YAAY,QAAD,OAASjE,EAAQ,aAAK4F,EAAQ7E,KAAI,iDAElD,EAAKkD,YAAY,QAAD,OAASjE,EAAQ,qEAA6D2F,EAAa,OAExG,CACX,CAGA,GAAgB,cAAZ9B,GAA2BA,EAAQC,WAAW,SAAYD,EAAQF,cAAcG,WAAW,SAAkD,gBAA7B,QAAV,IAAKrG,aAAK,OAAS,QAAT,EAAV,EAAYhD,eAAO,WAAT,EAAV,EAAqBkJ,eAI3H,OAHU,QAAV,IAAKlG,aAAK,OAAV,EAAYqI,gBAAgB9F,EAAU,CAClC+F,oBAAiC,cAAZlC,KAElB,EAGX,GAAIA,EAAQC,WAAW,kBAAoBD,EAAQC,WAAW,eAAgB,CAAC,IAAD,EAC1E,IAAK,EAAKL,mBAAmBzD,GAEzB,OADA,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,EAEX,IAAMgG,EAAgBnC,EAAQ5C,QAAQ,gBAAiB,IAAIA,QAAQ,cAAe,IAAIA,QAAQ,IAAK,IAAIyD,OACvG,MAAsB,KAAlBsB,GACA,EAAK/B,YAAY,QAAD,OAASjE,EAAQ,qGAA6F6D,EAAQC,WAAW,MAAQ,gBAAkB,cAAa,iBACjL,IAED,QAAV,IAAKrG,aAAK,OAAV,EAAYqI,gBAAgBE,EAAe,CACvCD,qBAAqB,EACrBE,gBAAgB,KAEb,EACX,CAEA,GAAKpC,EAAQC,WAAW,eAAgB,CAAC,IAAD,EACpC,IAAK,EAAKL,mBAAmBzD,GAEzB,OADA,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,EAEX,IAAMkG,EAAcrC,EAAQ5C,QAAQ,cAAe,IAAIA,QAAQ,IAAK,IAAIyD,OACxE,MAAoB,KAAhBwB,GACA,EAAKjC,YAAY,QAAD,OAASjE,EAAQ,0GAC1B,IAED,QAAV,IAAKvC,aAAK,OAAV,EAAY0I,kBAAkBD,IACvB,EACX,CAEA,GAAgB,WAAZrC,GAAoC,UAAZA,EAExB,OADU,QAAV,IAAKpG,aAAK,OAAV,EAAY0I,kBAAkBnG,IACvB,EAGX,GAAgB,WAAZ6D,EAAsB,CACkB,IAAD,EAAvC,GAAI,EAAKJ,mBAAmBzD,GACd,QAAV,IAAKvC,aAAK,OAAV,EAAYiI,oBAEhB,OAAO,CACX,CAEA,GAAgB,UAAZ7B,EAAqB,CACmB,IAAD,EAAvC,GAAI,EAAKJ,mBAAmBzD,GACd,QAAV,IAAKvC,aAAK,OAAV,EAAY2I,mBAEhB,OAAO,CACX,CAEA,GAAgB,eAAZvC,EAA0B,CACc,IAAD,IAAvC,GAAI,EAAKJ,mBAAmBzD,GACd,QAAV,IAAKvC,aAAK,OAAV,EAAYiI,oBACF,QAAV,IAAKjI,aAAK,OAAV,EAAY2I,mBAEhB,OAAO,CACX,CAEA,GAAgB,WAAZvC,EAAsB,CACkB,IAAD,EAAvC,GAAI,EAAKJ,mBAAmBzD,GACd,QAAV,IAAKvC,aAAK,OAAV,EAAY4I,oBAEhB,OAAO,CACX,CAEA,GAAgB,eAAZxC,EACA,OAAK,EAAKJ,mBAAmBzD,IAIzB,EAAKvC,MAAM6I,YACX,EAAKrC,YAAY,QAAD,OAASjE,EAAQ,iCAEjC,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qCAE9B,IARH,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,GAUf,GAAgB,eAAZ6D,EAA0B,CAC1B,IAAK,EAAKJ,mBAAmBzD,GAEzB,OADA,EAAKiE,YAAY,QAAD,OAASjE,EAAQ,qDAC1B,EAEX,IACI,EAAKvC,MAAM8I,YACX,EAAKtC,YAAY,QAAD,OAASjE,EAAQ,yDAGrC,CAFE,MAAOlE,GACL,EAAKmI,YAAY,QAAD,OAASjE,EAAQ,wDACrC,CACA,OAAO,CACX,CAEA,OAAI6D,EAAQC,WAAW,YACnB,EAAKG,YAAY,QAAD,OAASjE,EAAQ,8FAC1B,QAFX,CAKJ,EAAC,EAED4E,SAAW,SAACH,EAAezE,GAEvB,IAE0C,EAFtCwG,EAAQ,WACZ,cACyB9E,GAAiB,IAA1C,2BAA4C,CAAC,IAAD,IAAnC+E,EAAY,QACjB,GAAgB,OAAZA,QAAY,IAAZA,GAAsB,QAAV,EAAZA,EAAclJ,gBAAQ,OAAtB,EAAwBrB,SAASuI,IAA8B,OAAZgC,QAAY,IAAZA,GAAsB,QAAV,EAAZA,EAAclJ,gBAAQ,OAAtB,EAAwBrB,SAASuI,EAAcxD,QAAQuF,EAAO,KAMjH,MALqC,oBAA1BC,EAAa7E,SACpB,EAAKqC,YAAY,QAAD,OAASjE,EAAQ,YAAIyG,EAAa7E,aAElD,EAAKqC,YAAY,QAAD,OAASjE,EAAQ,YAAIyG,EAAa7E,WAE/C,IAEf,CACA,+BACA,IAAK,IAAI8E,KAAiB,EAAK7I,MAAMoF,WAEjC,IADA,IAAM0D,EAAe,EAAK9I,MAAMoF,WAAWyD,GAC3C,MAAyC5I,OAAOxB,QAAQqK,GAAa,eAAE,CAAlE,0BAAOC,EAAc,KAAE7G,EAAQ,KAChC,GAAa,OAARA,QAAQ,IAARA,KAAUxC,UAA0C,KAAtB,OAARwC,QAAQ,IAARA,OAAQ,EAARA,EAAUxC,SAAS2B,QAI9C,GADea,EAASxC,SAASR,KAAI,SAAA8J,GAAC,OAAIA,EAAE5F,QAAQuF,EAAO,GAAG,IACjDtK,SAASuI,EAAcxD,QAAQuF,EAAO,KAC/C,OAAO,aACHzF,KAAM6F,EACNE,SAAS,GAAD,OAAKF,EAAc,aAAKF,EAAa,KAC7C1F,UAAW0F,GACR3G,EAGf,CAEJ,EAAKkE,YAAY,QAAD,OAASjE,EAAQ,aAAKyE,EAAa,+DAAuDP,qDAA2C,aAEzJ,EAAC,EAED6C,oBAAsB,SAAClD,EAAS7D,GAC5B,GAAK6D,EAAQC,WAAWtC,GAAxB,CAEA,IAAMiD,EAAgBZ,EAAQ5C,QAAQO,EAAsB,IAAIkD,OAEhE,MAAsB,KAAlBD,GACA,EAAKR,YAAY,QAAD,OAASjE,EAAQ,qFAC1B,MAGJ,EAAK4E,SAASH,EAAezE,EATiB,CAUzD,EAAC,EAEDgH,mBAAqB,SAACnD,EAAS7D,EAAUiH,GACrC,GAAKpD,EAAQC,WAAWrC,GAAxB,CACA,IAAmB,IAAfwF,GAAuB,EAAKxJ,MAAMhD,UAAYuF,GAAuC,mBAA3BA,EAAS2D,cAEnE,OADA,EAAKM,YAAY,QAAD,OAASjE,EAAQ,oDAC1B,KAGX,IAAMyE,EAAgBZ,EAAQ5C,QAAQQ,EAAyB,IAAIiD,OAEnE,MAAsB,KAAlBD,GACA,EAAKR,YAAY,QAAD,OAASjE,EAAQ,qFAC1B,MAGJ,EAAK4E,SAASH,EAAezE,EAboB,CAc5D,EAAC,EAEDkH,YAAc,SAAClF,GACX,EAAKpE,SAAS,CACVoE,SACAmF,WAAW,GAEnB,EAAC,EAED/E,eAAiB,SAACgF,GACd,EAAKxJ,SAAS,CACVoE,OAAQ,KACRmF,WAAW,GAEnB,EAAC,EAEDhF,UAAY,SAACkF,EAAQC,EAAMC,EAAKC,GAAU,IAAD,IAIrC,GAHI,EAAK/J,MAAMgK,iBACX7E,QAAQC,IAAI,CAACwE,SAAQC,OAAMC,MAAKC,UAEhCA,EAGJ,GAFA,EAAK/J,MAAM0E,UAAUoF,EAAKD,EAAKtH,SAAUsH,GAEtB,cAAfC,EAAI7C,OAiBR,GAAmB,cAAf6C,EAAI7C,OAAR,CAoBA,IAAMgD,EAAaH,EAAI7C,OAAOf,cAC9B,IAAI,EAAKC,qBAAqB8D,EAAYJ,EAAKtH,UAA/C,CACA,IAAI2E,EAAU,EAAKoC,oBAAoBW,EAAYJ,EAAKtH,UACpD2H,GAAe,EAKnB,IAJKhD,GAA8B,QAAvB,EAAI,EAAKlH,MAAMsG,gBAAQ,OAAnB,EAAqB6D,oBACjCD,GAAe,EACfhD,EAAU,EAAKqC,mBAAmBU,EAAYJ,EAAKtH,SAAUsH,EAAKL,aAEjEtC,EAEL,GAAI,EAAKlH,MAAMuH,SAASL,EAAQmC,UAAhC,CACI,IAAIe,EAAe,EAAKpK,MAAMuH,SAASL,EAAQmC,UAAU9G,WAAasH,EAAKtH,SAAY,kBAAoB,EAAKvC,MAAMuH,SAASL,EAAQmC,UAAU9G,SACjJ,EAAKiE,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,aAAK2E,EAAQ5D,KAAI,0CAAkC8G,EAAW,KAExG,MAEA,IAAqC,IAAjC,EAAKpK,MAAMqK,kBAAf,CAQA,IAFA,IAAIC,EAAwB,KACxBC,EAA2B,KAC/B,MAAuBlK,OAAOqG,OAAO,EAAK1G,MAAMuH,UAAS,eAAE,CAAtD,IAAMjF,EAAQ,KACf,GAAIA,EAASC,WAAasH,EAAKtH,UAAYD,EAAS4H,eAAiBA,EAAc,CAC3EA,EACAK,EAA2BjI,EAAS+G,SAEpCiB,EAAwBhI,EAAS+G,SAErC,KACJ,CACJ,CAEA,IAAImB,EAA2C,QAAtB,EAAG,EAAKxK,MAAMsG,gBAAQ,aAAnB,EAAqBkE,sBACjD,GAAIF,GAAyBC,EACrB,EAAKvK,MAAMhD,UAAY6M,EAAKtH,SAC5B,EAAKiE,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,aAAK2E,EAAQ5D,KAAI,yIAChD4G,KAAkBM,GAA0BA,IAA0BD,GAC7E,EAAK/D,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,aAAK2E,EAAQ5D,KAAI,2DAChDiH,GACP,EAAKvK,MAAM8B,SAASyI,GACpB,EAAK/D,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,sCAA8BgI,EAAwB,mCAA2BrD,EAAQ5D,KAAI,QAEnI,EAAKtD,MAAM8B,SAASwI,GACpB,EAAK9D,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,sCAA8B+H,EAAqB,mCAA2BpD,EAAQ5D,KAAI,WAEjI,IAAiJ,IAA7IjD,OAAOqG,OAAO,EAAKtG,MAAMqK,cAAc/I,QAAO,SAAAgJ,GAAC,OAAIA,EAAEC,OAASzD,EAAQ5D,MAAQoH,EAAEE,OAAS1D,EAAQ3D,YAA2B,IAAdmH,EAAEG,OAAgB,IAAEpJ,OAEzI,YADA,EAAK+E,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,aAAK2E,EAAQ5D,KAAI,8DAGvD,EAAKkD,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,aAAK2E,EAAQ5D,KAAI,yCAC3D,CAEA,EAAKtD,MAAM8K,eAAe5D,EAAS2C,EAAKtH,SAAU2H,EApClD,MAFI,EAAK1D,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,+EAhBsB,CAHhE,MAjBI,GAAI,EAAKvC,MAAM+K,eAAiB,EAAK/K,MAAM+K,cAActJ,OAAS,EAAG,CACjE,IAAIuJ,EAAkB,YAAI,EAAKhL,MAAM+K,eAAeE,UAChDC,EAAWF,EAAgB,GAAG1H,KAClC,GAAI0H,EAAgBvJ,OAAS,EAAG,CAC5ByJ,GAAQ,wBAAqBF,EAAgB,GAAG1H,MAChD,IAAK,IAAI1E,EAAI,EAAGA,EAAIoM,EAAgBvJ,OAAQ7C,IACxCsM,GAAatM,EAAE,IAAMoM,EAAgBvJ,OAAM,gBAC5BuJ,EAAgBpM,GAAG0E,MAAO,YAC9B0H,EAAgBpM,GAAG0E,KAEtC,CACA,EAAKkD,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,sCAA8B2I,EAAQ,KAChF,MACI,EAAK1E,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,wEA9B1C,GAAI,EAAKvC,MAAM6H,eAAiB,EAAK7H,MAAM6H,cAAcpG,OAAS,EAAG,CACjE,IAAI0J,EAAW,EAAKnL,MAAM6H,cAAc,GAAGvE,KAC3C,GAAI,EAAKtD,MAAM6H,cAAcpG,OAAS,EAAG,CACrC0J,GAAQ,wBAAqB,EAAKnL,MAAM6H,cAAc,GAAGvE,MACzD,IAAK,IAAI1E,EAAI,EAAGA,EAAI,EAAKoB,MAAM6H,cAAcpG,OAAQ7C,IACjDuM,GAAQ,gBAAa,EAAKnL,MAAM6H,cAAcjJ,GAAG0E,KAEzD,CACA,EAAKkD,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,iCAAyB4I,EAAQ,KAC3E,MACI,EAAK3E,YAAY,QAAD,OAASqD,EAAKtH,SAAQ,0EAmFlD,EAAC,EAED6F,QAAU,SAACwC,EAAMrI,GACb,IAAK,IAAI0G,KAAiB,EAAK7I,MAAMoF,WAAY,CAC7C,IAAI4F,EAAWnC,EAAchC,OAAOf,cAAc1C,QAAQ,aAAc,IAExE,GADA6H,OAAOlG,QAAQC,IAAI,CAACgG,WAAUR,SAC1BQ,IAAaR,EAAM,CAEnB,IADA,IAAI1B,EAAe,EAAK9I,MAAMoF,WAAWyD,GACzC,MAAyC5I,OAAOxB,QAAQqK,GAAa,eAAE,CAAlE,0BAAOC,EAAc,KAAE7G,EAAQ,KAC/B,EAAKtC,MAAM8K,eAAe,aACvBxH,KAAM6F,EACNE,SAAS,GAAD,OAAKF,EAAc,aAAKF,EAAa,KAC7C1F,UAAW0F,GACR3G,GACJC,GAAU,EACjB,CACA,MAAO,CAACe,KAAM2F,EAClB,CACJ,CAEJ,EAAC,EAEDzC,YAAc,SAACsD,GACX,OAAO,EAAK1J,MAAMmE,OAAO+G,IAAI,EAAKtL,MAAMhD,QAAS8M,EACrD,EAAC,EAEDyB,gBAAkB,SAACd,GACf,EAAKtK,SAAS,CACVsK,gBAER,EAAC,EAEDe,YAAW,gCAAG,qGAEF,EAAKjH,OAAO,CAAD,+BACL,EAAKA,OAAOW,aAAa,KAAD,EAC9B,EAAKX,OAAOkH,qBACZ,EAAK9G,iBAAiB,8BAG0B,OAH1B,yBAG1BQ,QAAQC,IAAI,oCAAoC,EAAD,IAAK,mBAC7C,GAAK,kCAET,GAAI,yDACd,EAEDsG,SAAQ,gCAAG,8FAM4C,OAN5C,SAEGnH,EAAS,EAAKC,gBAAgB,EAAKxE,OACzC,EAAKuE,OAASA,EAEdA,EAAOE,GAAG,UAAW,EAAKC,WAC1BH,EAAOE,GAAG,eAAgB,EAAKE,gBAAgB,SACzCJ,EAAOK,UAAU,KAAD,EACG,OAAzB,EAAK6E,YAAYlF,GAAQ,kBAClBA,GAAM,kCAEbY,QAAQC,IAAI,mCAAmC,EAAD,IAAK,kCAEhD,GAAK,0DACf,EAEDuG,oBAAmB,gCAAG,wGACZ,EAAKH,cAAc,KAAD,kBAClB,EAAKE,WAAW,KAAD,uEAExB,EAEDE,eAAiB,WACb,IAAIC,EAAQ,UAAM/G,EAAkB,YAAI1H,KAAKC,OAC7C,OAAO,EAAKwH,YAAYgH,EAAU,EAAKtH,OAC3C,EA9nBI,EAAKnE,MAAQ,CACTmE,OAAQ,KACRmF,WAAW,EACXe,aAAc,CAAC,EACfvK,cAAe,CAAC,EAChBsF,WAAY,IAEhB,EAAKhB,gBAAkB,EAAKA,gBAAgBhG,KAAK,gBACjD,EAAKwH,mBAAqB,EAAKA,mBAAmBxH,KAAK,gBACvD,EAAK2H,qBAAuB,EAAKA,qBAAqB3H,KAAK,gBAC3D,EAAK2I,SAAW,EAAKA,SAAS3I,KAAK,gBACnC,EAAK8K,oBAAsB,EAAKA,oBAAoB9K,KAAK,gBACzD,EAAKkG,UAAY,EAAKA,UAAUlG,KAAK,gBACrC,EAAKmG,eAAiB,EAAKA,eAAenG,KAAK,gBAC/C,EAAKgI,YAAc,EAAKA,YAAYhI,KAAK,gBACzC,EAAKmN,oBAAsB,EAAKA,oBAAoBnN,KAAK,gBAAM,CACnE,CAnBC,OAmBA,mCAgnBD,WACI,OAAO,IACX,IAAC,sBAhpBD,WACI,MAAO,CACHwL,gBAAiB8B,IAAUC,KAC3BtE,wBAAyBqE,IAAUE,KAE3C,GAAC,wBACD,WACI,MAAO,CACHhC,iBAAiB,EACjBvC,wBAAyB,WAAY,EAE7C,KAAC,EAZ8B,CAAS9F,a,oCC5DtC/E,I,OAAQC,EAAQ,KAmMPoP,GAjMM,kDACjB,WAAYjM,GAAQ,IAAD,EAKb,OALa,qBACf,cAAMA,IAsBVkM,gBAAkB,SAAS1G,GAAa,IAAD,EAC/B2G,EAAiBC,aAAaC,QAAQ,kBACtC5B,EAAgB0B,EAAkBG,KAAKxL,MAAMqL,GAAkB,CAAC,EAwBpE,OAAO9L,OAAOkM,OAAM,MAAblM,OAAM,CAAQ,CAAC,GAAC,oBAChB,MAAGmM,OAAM,oBACLnM,OAAOxB,QAAQ2G,GAAYlG,KAAI,YAAwB,IAAD,mBAArBsL,EAAI,KAAE6B,EAAS,KAE/C,OAAOpM,OAAOkM,OAAM,MAAblM,OAAM,CAAQ,CAAC,GAAC,mBAChBA,OAAOuG,KAAK6F,GAAWnN,KAAI,SAAAqL,GAC1B,IAAI+B,EAAS,UAAG9B,EAAI,YAAID,GAAOnH,QAAQ,OAAQ,KAC/C,OAAIkJ,KAAUjC,QAA4CkC,IAA5BlC,EAAaiC,GAAQpL,GACxC,eACFoL,EAASjC,EAAaiC,IAKxB,eACFA,EAAS,CACNpL,GAAIoL,EACJ/B,OACAC,OACAC,SAAS,GAGrB,MAER,QAGZ,EAAC,EAEDU,gBAAkB,SAAS/F,GACvB,IAAIiF,EAAenM,KAAK4N,gBAAgB1G,GACxClH,KAAK6B,SAAS,CACVsK,eACAjF,eAEJ4G,aAAaQ,QAAQ,iBAAkBN,KAAKO,UAAUpC,GAC1D,EAAC,EAEDqC,eAAiB,YAAe,IAAblD,EAAM,EAANA,OACVtI,EAAesI,EAAftI,GAAIyL,EAAWnD,EAAXmD,QACT,EAAK5M,UAAS,SAAC6M,GAAS,MAAM,CAC1BvC,aAAa,2BACNuC,EAAUvC,cAAY,kBACxBnJ,EAAE,2BACI0L,EAAUvC,aAAanJ,IAAG,IAC7BuJ,QAASkC,MAGpB,GACL,EAAC,EAEDE,oBAAsB,YAAe,IAAbrD,EAAM,EAANA,OACfsD,EAAkBtD,EAAlBsD,MAAOH,EAAWnD,EAAXmD,QAERN,EAAYpM,OAAOqG,OAAO,EAAKtG,MAAMqK,cAAc/I,QAAO,SAAAiJ,GAAI,OAAIA,EAAKC,OAASsC,CAAK,IACzF,EAAK/M,UAAS,SAAC6M,GAAS,MAAM,CAC1BvC,aAAa,2BACNuC,EAAUvC,cACVpK,OAAOkM,OAAM,MAAblM,OAAM,YACFoM,EAAUnN,KAAI,SAAAoL,GAAC,sBACbA,EAAEpJ,GAAE,2BACEoJ,GAAC,IACJG,QAASkC,IAAO,OAKnC,GACL,EAAC,EAEDI,eAAiB,SAASnN,GAAQ,IAAD,EACxBsB,EAAkBtB,EAAlBsB,GAAIqJ,EAAc3K,EAAd2K,KAAMC,EAAQ5K,EAAR4K,KAEXmC,GAA0B,QAAhB,EADOzO,KAAK8B,MAArBqK,aACsBnJ,UAAG,aAAhB,EAAkBuJ,WAAW,EAC3C,OACI,qBAAIzL,UAAU,WAAU,UACpB,uBAAOyE,KAAK,WAAWvC,GAAIA,EAAIgC,KAAMhC,EAAI4L,MAAO5L,EAAIyL,QAASA,EAASK,SAAU9O,KAAKwO,iBACpF,IACD,uBAAOO,QAAS/L,EAAIgM,MAAK,UAAK1C,EAAI,aAAKD,GAAO,SACzCA,MAJqBrJ,EAQtC,EAAC,EAEDiM,mBAAqB,SAAS3C,GAC1B,IAAI6B,EAAYpM,OAAOqG,OAAOpI,KAAK8B,MAAMqK,cAAc/I,QAAO,SAAAiJ,GAAI,OAAIA,EAAKC,OAASA,CAAI,IACpF4C,EAAYf,EAAU/K,QAAO,SAAAgJ,GAAC,OAAkB,IAAdA,EAAEG,OAAgB,IAAEpJ,SAAWgL,EAAUhL,OAC/E,OACI,uBAAOoC,KAAK,WAAWvC,GAAIsJ,EAAMtH,KAAMsH,EAAMsC,MAAOtC,EAAMmC,QAASS,EAAWJ,SAAU9O,KAAK2O,qBAErG,EAAC,EAEDQ,gBAAkB,SAAUzN,GAAQ,IAAD,OACzB6L,EAAWxL,OAAOuG,KAAK5G,EAAMsC,UAE/BmK,EAAYpM,OAAOqG,OAAOpI,KAAK8B,MAAMqK,cAAc/I,QAAO,SAAAiJ,GAAI,OAAIA,EAAKC,OAAS5K,EAAMiJ,aAAa,IACnGyE,EAAejB,EAAU/K,QAAO,SAAAgJ,GAAC,OAAkB,IAAdA,EAAEG,OAAgB,IACvD2C,EAAYE,EAAajM,SAAWgL,EAAUhL,OAC9CkM,GAAoBH,GAAqC,IAAxBE,EAAajM,OAClD,OACI,eAACmM,EAAA,EAAU1M,KAAI,CAACT,SAAUT,EAAM6N,IAAKzO,UAAU,kBAAiB,UAC5D,cAACwO,EAAA,EAAUE,OAAM,CAAC1O,UAAU,uBAAsB,SAC7CY,EAAMiJ,gBAEX,eAAC2E,EAAA,EAAUG,KAAI,WACX,sBAAK3O,UAAU,YAAW,UACtB,gCAAO,eAAkB,IAEzB,uBAAOyE,KAAK,WAAWvC,GAAItB,EAAMiJ,cAAe3F,KAAMtD,EAAMiJ,cAAeiE,MAAOlN,EAAMiJ,cAAe8D,QAASS,EAAWJ,SAAU9O,KAAK2O,oBAAqBe,IAAK,SAAAC,GAAE,OAAIA,IAAOA,EAAGC,cAAgBP,EAAgB,OAExN,oBAAIvO,UAAU,uBAAsB,SAC/ByM,EAASvM,KACN,SAACyC,EAAUnD,GAAC,OAAK,EAAKuO,eAAe,CACjCxC,KAAM5I,EACNT,GAAI,UAAGtB,EAAMiJ,cAAa,YAAIlH,GAAWyB,QAAQ,OAAQ,KACzDoH,KAAM5K,EAAMiJ,eACd,WAhBoDjJ,EAAM6N,IAsBpF,EA1KI,EAAKzN,MAAQ,CACTqK,aAAc,GACdjF,WAAY,IACd,CACN,CAuLC,OAvLA,8CAED,SAAkBxF,GAAQ,IAAD,OACrBpD,GAAMkI,GACDpH,MAAK,SAAAC,GAAC,OAAIA,EAAEiD,MAAM,IAClBlD,MAAK,SAAAkD,GACF,IAAI4E,EAAa3E,IAAKC,MAAMF,GAE5B,EAAK2K,gBAAgB/F,EACzB,GACR,GAAC,gCAED,WACSlH,KAAK8B,MAAMqK,cAAiD,IAAjCnM,KAAK8B,MAAMoF,WAAW/D,QAAmD,IAAnCnD,KAAK8B,MAAMqK,aAAahJ,QAC9F2K,aAAaQ,QAAQ,iBAAkBN,KAAKO,UAAUvO,KAAK8B,MAAMqK,cACrE,GAAC,oBAyJD,WAAU,IAAD,OACAjF,EAAclH,KAAK8B,MAAnBoF,WACC2I,EAAgB9N,OAAOuG,KAAKpB,GAElC,OACI,cAACoI,EAAA,EAAS,CAACtM,GAAG,oBAAoBlC,UAAU,iBAAiBgP,OAAK,WAC7DD,EAAc7O,KACX,SAAC2J,EAAerK,GAAC,OAAK,EAAK6O,gBAAgB,CACvCI,IAAKjP,EACLqK,gBACA3G,SAAU,EAAKlC,MAAMoF,WAAWyD,IAClC,KAIlB,KAAC,EA9LgB,CAAStH,aCCT0M,I,OAAW,kDA+B5B,WAAYrO,GAAQ,IAAD,EAM8C,OAN9C,qBACf,cAAMA,IAoBVsO,qBAAuB,SAACC,GACpB,OAAKA,EAGEA,EAAMjP,KAAI,SAACV,EAAG4P,GACjB,OAAK5P,GAAMA,EAAE6P,MAGT,UAAUC,KAAK9P,EAAE6P,OAEb,cAACE,EAAA,EAASC,QAAO,aACLJ,EAAG,YAAI5P,EAAE6P,QAKzB,cAACE,EAAA,EAASzN,KAAI,CACVT,SAAU7B,EAAE6P,MACZI,KAAMjQ,EAAEiQ,MAAQ,KAEhBjL,QAAShF,EAAEgF,SAAW,KAAK,SAE1BhF,EAAE6P,OAAK,UAHAD,EAAG,YAAI5P,EAAE6P,QAbd,IAmBf,IAAG/M,QAAO,SAAA9C,GAAC,OAAIA,CAAC,IAvBL,EAwBf,EAAC,EAEDkQ,gBAAkB,SAACP,GACf,IAAKA,EACD,MAAO,GAEX,IAAIQ,EAAO,WAAa,EACxB,OAAOR,EAAMjP,KAAI,SAACV,EAAG4P,GACjB,IAAK5P,EAAE6P,MACH,OAAO,KAEX,IAGIO,EAAqB,CAAC,+BAHNpQ,EAAEqQ,kBAEhBrQ,EAAEqQ,kBADFrQ,EAAE6P,MAAMxH,OAAOf,cAAcgJ,MAAM,KAAKnI,KAAK,OAEqB,MAAMrF,QAAO,SAAAyN,GAAC,OAAIA,CAAC,IAAEpI,KAAK,KAC9FqI,EAAgB,CAAC,MAAOxQ,EAAEyQ,cAAgB,MAAM3N,QAAO,SAAAyN,GAAC,OAAIA,CAAC,IAAEpI,KAAK,KACxE,OACI,oBAAI3H,UAAW4P,EAAmB,SAC9B,cAACM,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAWgQ,EAAexL,QAAShF,EAAEgF,SAAWmL,EAAK,SACvEnQ,EAAE6P,SACE,UAH8BD,EAAG,YAAI5P,EAAE6P,OAM5D,IAAG/M,QAAO,SAAA9C,GAAC,OAAIA,CAAC,GACpB,EAAC,EAED2Q,eAAiB,WACb,EAAKpP,UAAS,SAACC,GACX,MAAO,CACHoP,cAAepP,EAAMoP,aAE7B,GACJ,EAAC,EAEDC,mBAAqB,WACjB,EAAKtP,UAAS,SAACC,GACX,MAAO,CACHsP,kBAAmBtP,EAAMsP,iBAEjC,GACJ,EArFI,EAAKtP,MAAQ,CACToP,cAAc,GAElB,EAAKD,eAAiB,EAAKA,eAAe/Q,KAAK,gBAC/C,EAAKiR,mBAAqB,EAAKA,mBAAmBjR,KAAK,gBAAM,CACjE,CATC,OAWD,mCAkIA,WAAU,IAAD,MACL,EAAsDF,KAAK0B,MAAtD2P,EAAU,EAAVA,WAAYpB,EAAK,EAALA,MAAOjI,EAAQ,EAARA,SAAUsJ,EAAgB,EAAhBA,iBAC9BC,EAAkBvR,KAAKwQ,gBAAgBP,GACvCuB,EAAiBxR,KAAKgQ,qBAAqBqB,GA0C3CI,EAAmBzR,KAAK0B,MAAMgQ,kBAC9B,oBAAI5Q,UAAU,8BAA6B,SACvC,eAACkQ,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,sBAAsBwE,QAAStF,KAAK0B,MAAMiQ,OAAO,UAAC,aAE/E,sBAAK7Q,UAAU,kCAAiC,UAAC,eACV,QAAvB,EAACd,KAAK0B,MAAMkQ,mBAAW,aAAtB,EAAwBC,2BAIjD,KAEJ,OACI,eAACC,EAAA,EAAS,CACN9O,GAAG,eACH+O,OAAQ/R,KAAK0B,MAAMqQ,OACnBlN,UAAU,MACVmN,KAAMhS,KAAK0B,MAAMuQ,gBAAgB,UACjC,cAACH,EAAA,EAAUtC,OAAM,CAAC0C,aAAW,EAACC,aAAa,QAAO,SAC9C,cAACL,EAAA,EAAUM,MAAK,CAACC,GAAG,KAAKvR,UAAU,UAAS,SAAC,cAIjD,eAACgR,EAAA,EAAUrC,KAAI,WACX,qBAAI3O,UAAU,6CAA4C,UACtD,oBAAIA,UAAU,8BAA6B,SACvC,cAACkQ,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,aAAawE,QAAStF,KAAK0B,MAAM4Q,SAAS,SAAC,aAIhF,uBACCb,EACD,oBAAI3Q,UAAU,8BAA6B,SACvC,cAACkQ,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,aAAawE,QAAStF,KAAK0B,MAAM6Q,oBAAoB,SAAC,yBAI3F,oBAAIzR,UAAU,8BAA6B,SACvC,cAACkQ,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,oBAAoBwE,QAAStF,KAAKmR,mBAAmB,SAAC,eAI3F,cAACqB,EAAA,EAAQ,CAACC,GAAIzS,KAAK8B,MAAMsP,iBAAiB,SACtC,qBAAKpO,GAAG,gBAAgBlC,UAAU,2CAA0C,SACxE,sBAAKA,UAAU,iBAAgB,UAC3B,eAACkQ,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,oBAC7BwE,QArFR,WACpB,IAAIsJ,EAA+C,mBAAxB,OAAR5G,QAAQ,IAARA,OAAQ,EAARA,EAAU6D,sBACd,OAAR7D,QAAQ,IAARA,KAAU6D,mBAEjByF,EAAiB,CAACzF,kBAAmB+C,GACzC,EAiFgCI,MAAM,oEAAmE,UAEzE,uBAAOzJ,KAAK,WAAWmN,KAAK,SAASjE,QAAkB,OAARzG,QAAQ,IAARA,OAAQ,EAARA,EAAU6D,kBAAoB8G,UAAQ,IAAG,IAAC,+BAAM,2BAEnG,eAAC3B,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,+BAC7BwE,QArFJ,WACxB,IAAIsJ,EAAmD,mBAA5B,OAAR5G,QAAQ,IAARA,OAAQ,EAARA,EAAUkE,0BACd,OAARlE,QAAQ,IAARA,KAAUkE,uBAEjBoF,EAAiB,CAACpF,sBAAuB0C,GAC7C,EAiFgCI,MAAM,kEACN4D,WAAoB,OAAR5K,QAAQ,IAARA,KAAU6D,mBAAmB,UAEzC,uBAAOtG,KAAK,WAAWmN,KAAK,SAASjE,QAAkB,OAARzG,QAAQ,IAARA,OAAQ,EAARA,EAAUkE,sBAAwByG,UAAQ,IAAG,IAAC,+BAAM,2BAEvG,eAAC3B,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,oBAC7BwE,QAtFE,WAC9B,IAAIsJ,EAAmD,mBAA5B,OAAR5G,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,0BACd,OAAR1B,QAAQ,IAARA,KAAU0B,uBAEjB4H,EAAiB,CAAC5H,sBAAuBkF,GAC7C,EAkFgCI,MAAM,6DAA4D,UAElE,uBAAOzJ,KAAK,WAAWmN,KAAK,SAASjE,QAAkB,OAARzG,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,sBAAwBiJ,UAAQ,IAAG,IAAC,+BAAM,gCAGvG,eAAC3B,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,oBAC7BkO,MAAM,4EAA2E,UAEjF,+BAAM,2BACN,uBAAOzJ,KAAK,OAAOP,KAAK,mBAAmB6N,aAAsB,OAAR7K,QAAQ,IAARA,OAAQ,EAARA,EAAUe,gBACnE+F,SA3FJ,SAAC/O,GACzB,IAAK6O,EAAS7O,EAAEuL,OAAXsD,MAIDA,EAHCA,EAGOA,EAAMjG,OAFN,KAIZ2I,EAAiB,CAACvI,gBAAiB6F,GACvC,EAmFiE9N,UAAU,oBAG/C,eAACkQ,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,oBAC7BwE,QAtFL,WACvB,IAAIsJ,EAA4C,mBAArB,OAAR5G,QAAQ,IAARA,OAAQ,EAARA,EAAU8K,mBACd,OAAR9K,QAAQ,IAARA,KAAU8K,gBAEjBxB,EAAiB,CAACwB,eAAgBlE,GACtC,EAkFgCI,MAAM,mEAAkE,UAExE,uBAAOzJ,KAAK,WAAWmN,KAAK,SAASjE,QAAkB,OAARzG,QAAQ,IAARA,OAAQ,EAARA,EAAU8K,eAAiBH,UAAQ,IAAG,IAAC,+BAAM,wBAGhG,eAAC3B,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,oBAC7BwE,QAvFE,WAC9B,IAAIsJ,EAAmD,mBAA5B,OAAR5G,QAAQ,IAARA,OAAQ,EAARA,EAAUC,0BACd,OAARD,QAAQ,IAARA,KAAUC,uBAEjBqJ,EAAiB,CAACrJ,sBAAuB2G,GAC7C,EAmFgCI,MAAM,oIAAmI,UAEzI,uBAAOzJ,KAAK,WAAWmN,KAAK,SAASjE,QAAkB,OAARzG,QAAQ,IAARA,OAAQ,EAARA,EAAUC,sBAAwB0K,UAAQ,IAAG,IAAC,iCAAM,gBAAa,6BAAI,0BAKnIpB,EACD,oBAAIzQ,UAAU,qCAAoC,SAC9C,cAACkQ,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,uBAAuBwE,QAAStF,KAAK0B,MAAM4L,eAAe,SAAC,wBAIhG,oBAAIxM,UAAU,qCAAoC,SAC9C,cAACkQ,EAAA,EAAM,CAACpQ,QAAQ,OAAOE,UAAU,gBAAgBwE,QAAStF,KAAKiR,eAAe,SAAC,gBAInF,cAACuB,EAAA,EAAQ,CAACC,GAAIzS,KAAK8B,MAAMoP,aAAa,SAClC,8BACI,cAAC,GAAe,CACZ/E,aAAkC,QAAtB,EAAEnM,KAAK0B,MAAMqR,iBAAS,aAApB,EAAsB5G,aACpCjF,WAAgC,QAAtB,EAAElH,KAAK0B,MAAMqR,iBAAS,aAApB,EAAsB7L,oBAKlD,qBAAKlE,GAAG,2BAA2BlC,UAAU,4DAA2D,SACpG,eAACuP,EAAA,EAAQ,CAACrN,GAAG,4BAA4BgQ,KAAK,cAAcpS,QAAQ,OAAM,UACtE,cAACyP,EAAA,EAAS4C,OAAM,CAACjQ,GAAG,mCAAmCkQ,KAAK,KAAKtS,QAAQ,OAAM,2BAC/DkF,OAEhB,eAACuK,EAAA,EAAS8C,KAAI,CAACvS,QAAQ,OAAM,UACzB,cAACyP,EAAA,EAASb,OAAM,UAAC,kBAGhBgC,eAO7B,IAAC,sBAlVD,WACI,MAAO,CACHH,WAAY7D,IAAU4F,MACtBL,UAAWvF,IAAU6F,OACrBpD,MAAOzC,IAAU4F,MACjBrB,OAAQvE,IAAUE,KAClB4E,SAAU9E,IAAUE,KACpBiE,OAAQnE,IAAUE,KAClBuE,gBAAiBzE,IAAUC,KAC3B2D,iBAAkB5D,IAAUC,KAC5BiE,kBAAmBlE,IAAUC,KAErC,GAAC,wBACD,WACI,MAAO,CACH4D,WAAY,GACZ0B,UAAW,CACP5G,aAAc,KACdjF,WAAY,MAEhB+I,MAAO,GACP8B,OAAQ,WAAY,EACpBO,SAAU,WAAY,EACtBX,OAAQ,WAAY,EACpBM,iBAAiB,EACjBb,kBAAkB,EAClBM,mBAAmB,EAE3B,KAAC,EA7B2B,CAASrO,cCRnCiQ,GAAkB,CACpB,aAAgB,KAChB,SAAY,CACR,sCAAuC,CACnC,KAAQ,uBACR,SAAY,sCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,UACA,uBACA,OAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,yBAA0B,CACtB,KAAQ,WACR,SAAY,yBACZ,UAAa,cACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,WACA,OACA,MAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,qCAAsC,CAClC,KAAQ,sBACR,SAAY,qCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,SACA,UACA,SACA,uBACA,wBACA,kCACA,iCACA,oCAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,gCAAiC,CAC7B,KAAQ,iBACR,SAAY,gCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,MACA,WACA,YACA,eACA,kBAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,yCAA0C,CACtC,KAAQ,0BACR,SAAY,yCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,MACA,0BACA,2BACA,6BAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,gCAAiC,CAC7B,KAAQ,iBACR,SAAY,gCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,UACA,gBACA,iBACA,eACA,eAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,gCAAiC,CAC7B,KAAQ,iBACR,SAAY,gCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,iBACA,gBACA,eAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,4BAA6B,CACzB,KAAQ,eACR,SAAY,4BACZ,UAAa,aACb,cAAe,EACf,cAAe,GACf,SAAY,CACR,eACA,cACA,eACA,cACA,SACA,UAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,wBAAyB,CACrB,KAAQ,UACR,SAAY,wBACZ,UAAa,cACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,UACA,WACA,aAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,+BAAgC,CAC5B,KAAQ,kBACR,SAAY,+BACZ,UAAa,aACb,cAAe,EACf,cAAe,GACf,SAAY,CACR,kBACA,iBACA,eACA,cACA,QACA,OAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,gCAAiC,CAC7B,KAAQ,mBACR,SAAY,gCACZ,UAAa,aACb,cAAe,EACf,cAAe,GACf,SAAY,CACR,mBACA,mBACA,gBACA,gBACA,OAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,4CAA6C,CACzC,KAAQ,6BACR,SAAY,4CACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,SACA,oBACA,qBACA,mBACA,qBACA,sBACA,oBACA,wBACA,yBACA,uBACA,yBACA,0BACA,wBACA,4BACA,6BACA,2BACA,6BACA,8BACA,6BAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,2CAA4C,CACxC,KAAQ,4BACR,SAAY,2CACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,MACA,mBACA,OACA,cACA,eACA,2BACA,6BAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,4BAA6B,CACzB,KAAQ,aACR,SAAY,4BACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,SACA,UACA,YACA,UACA,aACA,cAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,8BAA+B,CAC3B,KAAQ,eACR,SAAY,8BACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,eACA,cACA,SAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,uCAAwC,CACpC,KAAQ,wBACR,SAAY,uCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,OACA,QACA,yBAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,4BAA6B,CACzB,KAAQ,aACR,SAAY,4BACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,MACA,OACA,SACA,QACA,aACA,aAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,GAEd,uCAAwC,CACpC,KAAQ,wBACR,SAAY,uCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,OACA,QACA,yBAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,IAGlB,OAAU,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ,QAAW,GACX,QAAW,CACP,CACI,KAAQ,cACR,SAAY,6BACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,SACA,cACA,cAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,EACV,UAAY,GAEhB,CACI,KAAQ,iBACR,SAAY,gCACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,iBACA,eACA,aACA,aACA,QACA,OAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,EACV,UAAY,GAEhB,CACI,KAAQ,YACR,SAAY,2BACZ,UAAa,eACb,cAAe,EACf,cAAe,EACf,SAAY,CACR,YACA,YAEJ,SAAY,WACZ,KAAQ,cACR,QAAU,EACV,QAAU,EACV,UAAY,GAEhB,CACI,KAAQ,sBACR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","file":"static/js/main.ab05fcb6.chunk.js","sourcesContent":["const fetch = require('node-fetch');\n\nexport const ActivityStatus = {\n    ACTIVE: 1,\n    IDLE: 2,\n    DISCONNECTED: 3\n};\n\nconst MAX_IDLE_TIME_MINUTES = 10;\n\nexport default class ChatActivity {\n    constructor(channel) {\n        this.channel = channel;\n        this.lastMessageTimes = {};\n        this.getStatusPromise = this.getStatusPromise.bind(this);\n    }\n\n    updateLastMessageTime = (user) => {\n        this.lastMessageTimes = {\n            ...this.lastMessageTimes,\n            [user]: Date.now()\n        };\n    }\n\n    minsSinceLastChatMessage = (user) => {\n        return Math.floor((Date.now() - this.lastMessageTimes[user]) / 60000);\n    }\n\n    // returns a PROMISE, don't just assign the value again like a dweeb. :/\n    //\n    // not just active chatters - anyone with an active connnection to twitch chat.\n    // (thank the lord almighty for free open proxy sites. CORB is annoying.)\n    // note that results are fairly heavily cached, and the API may break\n    // eventually (is undocumented), but this is what twitch themselves\n    // uses to display the list of people connected to chat - best we got.\n    getChatters = () => {\n        return fetch(`https://thingproxy.freeboard.io/fetch/https://tmi.twitch.tv/group/user/${this.channel}/chatters`)\n            .then(r => r.json())\n            .then(res => {\n                if (!res || !res.chatters) return null;\n                return [\n                  ...res.chatters.moderators,\n                  ...res.chatters.viewers,\n                  ...res.chatters.staff,\n                  ...res.chatters.admins,\n                  ...res.chatters.global_mods\n                ];\n            }).catch((e) => {\n                // don't normally like swallowing errors like this,\n                // but it's a noncritical feature built off an\n                // undocumented api, sooo....\n                return null;\n            });\n    }\n\n    async getStatusPromise(user) {\n        // broadcaster always counts as active\n        if (user === this.channel) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        // sent a chat message in the last X mins?\n        if (this.lastMessageTimes[user] && this.minsSinceLastChatMessage(user) < MAX_IDLE_TIME_MINUTES) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        return this.getChatters().then((chatters) =>\n            !chatters || !chatters.includes(user)\n                ? ActivityStatus.DISCONNECTED\n                : ActivityStatus.IDLE\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/Commands.d88afb03.yaml\";","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawCommandsList from './Commands.yaml';\nimport './CommandsList.css';\nimport {Nav, Table} from 'react-bootstrap';\nconst fetch = require('node-fetch');\n\n\nexport const SectionTable = function (data, i) {\n    // console.log('SectionTable:', data);\n    let {entries} = data;\n    return (\n        <Table striped bordered hover variant=\"dark\" responsive=\"lg\" key={`command-table-row-${i}`} className=\"mb-0\">\n            {/* <caption>{section}</caption> */}\n            <thead>\n                <tr className=\"text-center align-middle\">\n                    <th width=\"10%\">Command</th>\n                    <th width=\"10%\">Permissions</th>\n                    <th width=\"40%\">Description</th>\n                    <th width=\"20%\">On Screen Equivalent</th>\n                    <th width=\"10%\">Variants</th>\n                    <th width=\"10%\">Example</th>\n                </tr>\n            </thead>\n            <tbody className=\"table-group-divider\">\n                {!!entries && entries.map(CommandTableRow)}\n            </tbody>\n        </Table>\n\n    );\n}\nexport const CommandTableRow = function ({command, info}, i) {\n    const {\n        Example,\n        Availability,\n        Description,\n        OnScreenEquivalent,\n        Variants,\n    } = info;\n\n    return (\n        <tr key={`command-table-row-${i}`} className=\"small\">\n            <td className=\"command-name fw-semibold fs-6 text-primary-emphasis\">!{command}</td>\n            <td className=\"text-center\">{Availability}</td>\n            <td>{Description}</td>\n            <td>{OnScreenEquivalent}</td>\n            <td className={Variants==='n/a' ? null : 'font-monospace fst-italic'}>{Variants}</td>\n            <td className=\"font-monospace fst-italic\">{Example}</td>\n        </tr>\n    );\n}\n\nexport default class CommandsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeFilter: null,\n            validCommands: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawCommandsList)\n            .then(r => r.text())\n            .then(text => {\n                let validCommands = YAML.parse(text);\n                return  this.onValidCommands(validCommands);\n            });\n    }\n\n    onValidCommands = (validCommands) => {\n        return this.setState((state) => {\n            return {\n                ...state,\n                validCommands: Object.entries(validCommands).map(\n                    ([section, commands], i) => {\n                        return {\n                            section,\n                            commands,\n                            entries: Object.entries(commands).map(([command, info], i) => ({command, info})),\n                        };\n                    }\n                )\n            };\n        });\n    }\n\n    onSelectTab = (eventKey) => {\n        switch (eventKey) {\n            case 'All Commands':\n                return this.setState({\n                    activeFilter: null\n                });\n            default:\n                return this.setState({\n                    activeFilter: eventKey\n                });\n        }\n    }\n\n    render() {\n        const {validCommands} = this.state;\n\n        let navItems = [\n            {section: 'All Commands'},\n            ...validCommands\n        ].map(cmd => {\n            const {section} = cmd;\n            return (\n                <Nav.Item key={section}>\n                    <Nav.Link eventKey={section} data-testid={section}>\n                        {section}\n                    </Nav.Link>\n                </Nav.Item>\n            );\n        });\n\n        const header = (this.props.hideHeader) ? null : (\n            <h1 className=\"fw-bolder pt-3\">Chat Commands</h1>\n        );\n\n        return (\n            <div id=\"commands-list\" className=\"container\">\n                {header}\n                <Nav variant=\"tabs\" activeKey={this.state.activeFilter || 'All Commands'} onSelect={this.onSelectTab}>\n                    {/* <Nav.Item>\n                        <Nav.Link eventKey=\"All Commands\" data-testid=\"All Commands\">All Commands</Nav.Link>\n                    </Nav.Item> */}\n                    {validCommands.length > 0 && navItems}\n                </Nav>\n                <div className=\"col-12 px-3 pb-1 mb-3 text-start commands-table-wrapper\">\n                    {!!validCommands && validCommands.map(\n                        (data, i) => {\n                            let {activeFilter} = this.state;\n                            if (activeFilter && activeFilter !== data.section) {\n                                return null;\n                            }\n                            return (\n                                <div key={`section-${i}`}>\n                                    <h4 className=\"px-1 pt-3 fw-bolder\" key={`section-table-row-${i}`}>\n                                        {data.section}\n                                    </h4>\n                                    {SectionTable(data)}\n                                </div>\n                            );\n                        }\n                    ).filter(cmd => cmd)}\n                </div>\n            </div>\n        );\n    }\n}","export default __webpack_public_path__ + \"static/media/lock.6857c469.svg\";","import {ActivityStatus} from '../ChatActivity';\nimport React, {Component} from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport lock from '../images/lock.svg';\n\nimport './GameRequest.css';\n\nclass GameRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeDiff: 0,\n            activityStatus: null\n        };\n\n        this.deleteRequest = this.deleteRequest.bind(this);\n        this.getFormattedTimeDiff = this.getFormattedTimeDiff.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.updateStatus = this.updateStatus.bind(this);\n    }\n\n    deleteRequest = (e) => {\n        this.props.onDelete(this.props.gameName)\n    }\n\n    getFormattedTimeDiff = (timestamp) => {\n        let unit = \"minute\";\n        let timeDiff = Math.floor((Date.now() - timestamp) / 60000);\n        if (timeDiff === 0) {\n            return \"just now\";\n        }\n        if (timeDiff >= 60) {\n            unit = \"hour\";\n            timeDiff = Math.floor(timeDiff / 60);\n\n            if (timeDiff >= 24) {\n                unit = \"day\";\n                timeDiff = Math.floor(timeDiff / 24);\n            }\n        }\n        return `${timeDiff} ${unit}${timeDiff === 1 ? \"\" : \"s\"} ago`;\n    };\n\n    getTooltipContent = (props) => (\n        <Tooltip id=\"game-request-tooltip\" {...props}>\n            <span className=\"tooltipText\">\n                Requested {this.state.timeDiff} by {this.props.metadata.username}\n                <span className={`status ${this.getTooltipActivityStatusClassName()}`} />\n            </span>\n        </Tooltip>\n    );\n\n    getTooltipActivityStatusClassName = () => {\n        switch (this.state.activityStatus) {\n            case ActivityStatus.ACTIVE:\n                return \"active\";\n            case ActivityStatus.IDLE:\n                return \"idle\";\n            case ActivityStatus.DISCONNECTED:\n                return \"disconnected\";\n            default:\n                // no data back yet; don't show an activity status indicator at all\n                return '';\n        }\n    }\n\n    toggleLock = () => {\n        return this.props.toggleLock(this.props.gameName);\n    }\n\n    updateStatus = async () => {\n        // return Date.now();\n        let activityStatus;\n        try {\n            activityStatus = await this.props.getActivity(this.props.metadata.username);\n            return this.setState({\n                timeDiff: this.getFormattedTimeDiff(this.props.metadata.time),\n                activityStatus\n            });\n        } catch(err) {\n            throw err;\n        }\n    }\n\n    render() {\n        const lockClassName = this.props.metadata.locked ? 'lock locked' : 'lock unlocked';\n        const cardStatus = this.props.metadata.chosen ? 'chosen' : 'pending';\n\n        return (\n            <OverlayTrigger\n                placement=\"left\"\n                overlay={this.getTooltipContent}\n                onEnter={this.updateStatus}>\n                <div className=\"game-request-wrapper fade-in\">\n                \t<div id=\"baseDiv\" className={`game-request ${cardStatus}`}>\n                \t\t<div className=\"game-request-body\">\n                \t\t    <div className=\"text-truncate\">\n                                <b>\n                                    {this.props.metadata.name}\n                                </b>\n                                {' '}\n                                <small>\n                                    {\n                                        !!this.props.metadata.partyPack &&\n                                        `(${this.props.metadata.partyPack.replace('Party Pack', 'Pack')})`\n                                    }\n                                </small>\n                            </div>\n                \t\t\t<div className=\"options\">\n                \t\t\t\t<img src={lock} alt=\"lock\" className={lockClassName} onClick={this.toggleLock} />\n                \t\t\t\t<button type='button' className=\"deleteButton\" onClick={this.deleteRequest}>X</button>\n                \t\t\t</div>\n                \t\t</div>\n                \t</div>\n                </div>\n            </OverlayTrigger>\n        );\n    }\n}\nexport default GameRequest;\n","export default __webpack_public_path__ + \"static/media/JackboxGames.ea119c8e.yaml\";","import {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport rawCommandList from './Commands.yaml';\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport YAML from 'yaml'\nimport {version} from '../package.json';\nconst fetch = require('node-fetch');\nconst tmi = require('tmi.js');\n\nconst GAME_REQUEST_COMMAND = \"!request\";\nconst GAME_SUBREQUEST_COMMAND = \"!subrequest\";\n\nconst easterEggRequests = [\n    {\n        RequestName: 'Version',\n        Response: `is using Twitch Request Wheel, v${version}`,\n        Variants: [\n            'version',\n            'v',\n            'info'\n        ]\n    }, {\n        RequestName: 'Affection',\n        Response: () => 'there there, it\\'s going to be okay. VirtualHug',\n        Variants: [\n            'a friend',\n            'a hug',\n            'a kiss',\n            'friend',\n            'hug',\n            'kiss',\n            'affection',\n            'a shoulder to cry on',\n            'shoulder to cry on'\n        ]\n    }, {\n        RequestName: 'Goose',\n        Response: 'please don\\'t taunt the wheel. Honk.',\n        Variants: [\n            'goose',\n            'honk',\n            'meow',\n            'mrow',\n            'woof',\n            'bark',\n            'nugs',\n            'chicken nugs'\n        ]\n    }, {\n        RequestName: 'Lewmon',\n        Response: 'please don\\'t taunt the wheel. sirfar3Lewmon sirfar3Lewmon sirfar3Lewmon',\n        Variants: [\n            'lewmon',\n            'sirfar3lewmon'\n        ]\n    }, {\n        RequestName: 'DoTheDew',\n        Response: 'dewinbDTD dewinbDance dewinbGIR dewinbDance dewinbGIR dewinbDance dewinbDTD',\n        Variants: [\n            'dothedew',\n            'dewinblack'\n        ]\n    }\n];\n\nexport default class MessageHandler extends Component {\n    static get propTypes() {\n        return {\n            logUserMessages: PropTypes.bool,\n            toggleAllowGameRequests: PropTypes.func,\n        };\n    }\n    static get defaultProps() {\n        return {\n            logUserMessages: false,\n            toggleAllowGameRequests: () => void 0,\n        };\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            client: null,\n            connected: false,\n            allowedGames: {},\n            validCommands: {},\n            validGames: []\n        };\n        this.getTwitchClient = this.getTwitchClient.bind(this);\n        this.isModOrBroadcaster = this.isModOrBroadcaster.bind(this);\n        this.checkForMiscCommands = this.checkForMiscCommands.bind(this);\n        this.findGame = this.findGame.bind(this);\n        this.checkForGameCommand = this.checkForGameCommand.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.onDisconnected = this.onDisconnected.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.refreshTwitchClient = this.refreshTwitchClient.bind(this);\n    }\n\n    componentDidMount = (props) => {\n        const client = this.getTwitchClient(this.props);\n        this.client = client;\n\n        client.on('message', this.onMessage);\n        client.on('disconnected', this.onDisconnected);\n        client.connect();\n\n        this.getGameList(rawJackboxGameList, client);\n        return this.getCommandList(rawCommandList, client);\n    }\n\n    componentWillUnmount = (props) => {\n        try {\n            if (this.client) {\n                this.client.disconnect();\n            }\n        } catch(e) {\n            console.log('Error', e);\n        }\n    }\n\n    getCommandList = async (yamlCommandsList, client) => {\n        return await fetch(yamlCommandsList)\n            .then(r => r.text())\n            .then(text => {\n                return this.setState({\n                    client,\n                    validCommands: YAML.parse(text)\n                });\n            }).catch(e => {\n                console.warn(e);\n            });\n    }\n\n    getGameList = async (yamlGameList, client) => {\n        return await fetch(yamlGameList)\n            .then(r => r.text())\n            .then(text => {\n                return this.setState({\n                    client,\n                    validGames: YAML.parse(text)\n                });\n            }).catch(e => {\n                console.warn(e);\n            });\n    }\n\n    getTwitchClient = (props) => {\n        return new tmi.client({\n            identity: {\n                username: props.channel,\n                password: props.access_token\n            },\n            channels: [\n                props.channel\n            ],\n            options: {\n                skipUpdatingEmotesets: true,\n                updateEmotesetsTimer: 0\n            }\n        });\n    }\n\n    isModOrBroadcaster = (username) => {\n        return (this.props.channel === username || this.props.modList.includes(username.toLowerCase()));\n    }\n\n    // returns true iff a known command was found & responded to\n    checkForMiscCommands = (message, username) => {\n        //========= general =========\n        if (message.startsWith(\"!commands\") || message.startsWith(\"!wheelcommands\")) {\n            if (this.props.settings?.useLinkForCommandList) {\n                this.sendMessage(`/me @${username}, list of all supported commands: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/commands`);\n            } else {\n                let commands = Object.values(this.state.validCommands).flatMap(\n                    (section) => Object.keys(section).map(c => `!${c}`)\n                ).sort().join(' ');\n                this.sendMessage(`/me @${username}, list of all supported commands: ${commands}`);\n            }\n\n            return true;\n        }\n\n        if (message.startsWith(\"!gamelist\") || message.startsWith(\"!gameslist\")) {\n            this.sendMessage(`/me @${username}, list of available games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n            return true;\n        }\n\n        if (message.startsWith(\"!whichpack\")) {\n            const requestedGame = message.replace(\"!whichpack\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to look up the party pack for: e.g. !whichpack TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                this.sendMessage(`/me @${username}, ${gameObj.name} is a ${gameObj.partyPack} game.`);\n            }\n            return true;\n        }\n\n        //========= list requested games =========\n        if (message === \"!onthewheel\" || message.startsWith(\"!gamesqueue\") || message === \"!listrequests\") {\n            let pipe = (this.props.settings?.customDelimiter)\n                ? ` ${this.props.settings.customDelimiter} `\n                : ' ⋆ ';\n            let requests = Object.values(this.props.messages).map(m => m.name).sort();\n            try {\n                this.sendMessage(`/me @${username}, Requested: ${requests.join(pipe)}.`);\n            } catch(e) {\n                this.sendMessage(`/me @${username}, Sorry, there are waaaaaaaaay too many games to list and something went wrong. :p`);\n                console.log(e);\n            }\n\n            // TODO: handle if over character count\n            // TODO: determine if this is actually necessary\n            /* this.sendMessage(`/me @${username}, NOTE: There are a loooooot of games to list, but hopefully this next message won't break:`);\n            this.sendMessage(`/me @${username}, Requested: ${requests}.`);\n            requestsArr.reduce((list, str) => {\n                const last = list[list.length-1];\n                if (last && last.total + str.length <= 480) {\n                    last.total += str.length;\n                    last.words.push(str);\n                } else {\n                    list.push({\n                        total: str.length,\n                        words: [str]\n                    });\n                }\n                return list;\n            }, [])\n            .map(({ words }) => words.join(pipe));*/\n            return true;\n        }\n\n        //========= enable / disable requests =========\n        if ( message.startsWith(\"!enablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(true);\n            this.sendMessage(`/me @${username}, requests have now been enabled! Type \"!request\" followed by the game you want to play.`);\n            return true;\n        }\n        if ( message.startsWith(\"!disablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(false);\n            this.sendMessage(`/me @${username}, requests have now been disabled.`);\n            return true;\n        }\n\n        //========= remove selected game =========\n\n        if ( message.startsWith(\"!removegame\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            let prevSelectedGame = this.props?.removeSelectedGameFromHistory()\n            if (prevSelectedGame === false) {\n                this.sendMessage(`/me @${username}, a game must be selected before you can remove it.`);\n            } else {\n                this.sendMessage(`/me @${username}, the next game, ${prevSelectedGame.name}, has been removed.`);\n            }\n            return true;\n        }\n\n        //========= advance next game =========\n        if (message === \"!advancenextgame\" || message === \"!nextgamefwd\" || message === \"!nextgameforward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(1)) {\n                if (this.props.upcomingGames.length > 0) {\n                    // console.log(this.props.upcomingGames)\n                    this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n                } else {\n                    this.sendMessage(`/me @${username}, the next game has been marked as \"TBD\".`);\n                }\n            } else {\n                this.sendMessage(`/me @${username}, there are no more games in the queue to advance to!`);\n            }\n            return true;\n        }\n\n        //========= advance prev game =========\n        if (message === \"!advanceprevgame\" || message === \"!nextgameback\" || message === \"!nextgamebackward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(-1)) {\n                this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n            } else {\n                this.sendMessage(`/me @${username}, there are no previous games in the queue to go back to!`);\n            }\n            return true;\n        }\n\n        //========= set next game =========\n        if (message.startsWith(\"!setnextgame\") || message.startsWith(\"!sng\") || message.startsWith(\"!redeemgame\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use the ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} command.`);\n                return true;\n            }\n\n            const requestedGame = message.replace(\"!setnextgame\", \"\").replace(\"!sng\", \"\").replace(\"!redeemgame\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to insert in the queue: for example, ${message.startsWith(\"!s\") ? \"!setnextgame\" : \"!redeemgame\"} TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                const numGamesAhead = this.props.setNextGame(gameObj);\n                if (numGamesAhead === 0) {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted as the next game in the queue.`);\n                } else {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted in the queue following ${numGamesAhead} other manual game request${numGamesAhead > 1 ? 's' : ''}.`);\n                }\n                if (this.props.settings?.clearSeatsAfterRedeem === true) {\n                    this.props?.clearQueueHandler();\n                }\n            }\n            return true;\n        }\n\n        //========= add games from party pack =========\n        if (message.startsWith(\"!addpack\") || message.startsWith(\"!pack\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use the ${message.startsWith(\"!a\") ? \"!addpack\" : \"!pack\"} command.`);\n                return true;\n            }\n\n            const requestedPack = message.replace(\"!addpack\", \"\").replace(\"!pack\", \"\").trim();\n            if (requestedPack === \"\") {\n                this.sendMessage(`/me @${username}, please specify the pack you would like to insert in the queue: for example, ${message.startsWith(\"!a\") ? \"!addpack\" : \"!pack\"} 9`);\n                return true;\n            }\n\n            if (requestedPack.toLowerCase() === \"standalone\") {\n                this.sendMessage(`/me @${username}, sorry, you can only add Jackbox Party Pack games with this command.`);\n                return true;\n            }\n\n            const packObj = this.addPack(requestedPack, username);\n            if (packObj) {\n                this.sendMessage(`/me @${username}, ${packObj.name} games have been added to the request queue.`);\n            } else {\n                this.sendMessage(`/me @${username}, no games added; could not find any games for Party Pack ${requestedPack}.`);\n            }\n            return true;\n        }\n\n        //========= player queue management =========\n        if (message === \"!caniplay\" || message.startsWith(\"!new\") || (message.toLowerCase().startsWith(\"!dew\") && this.props?.channel?.toLowerCase() === 'dewinblack')) {\n            this.props?.caniplayHandler(username, {\n                sendConfirmationMsg: message === \"!caniplay\"\n            });\n            return true;\n        }\n\n        if (message.startsWith(\"!priorityseat\") || message.startsWith(\"!redeemseat\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const redeemingUser = message.replace(\"!priorityseat\", \"\").replace(\"!redeemseat\", \"\").replace(\"@\", \"\").trim();\n            if (redeemingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who has redeemed a priority seat in the next game: for example, ${message.startsWith(\"!p\") ? \"!priorityseat\" : \"!redeemseat\"} @asukii314`);\n                return true;\n            }\n            this.props?.caniplayHandler(redeemingUser, {\n                sendConfirmationMsg: true,\n                isPrioritySeat: true\n            });\n            return true;\n        }\n\n        if ( message.startsWith(\"!removeuser\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const exitingUser = message.replace(\"!removeuser\", \"\").replace(\"@\", \"\").trim();\n            if (exitingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who will be removed in the next game: for example, !removeuser @dewinblack`);\n                return true;\n            }\n            this.props?.playerExitHandler(exitingUser);\n            return true;\n        }\n\n        if (message === \"!leave\" || message === \"!murd\") {\n            this.props?.playerExitHandler(username);\n            return true;\n        }\n\n        if (message === \"!clear\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!open\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!clearopen\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!close\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.closeQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!startgame\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.startGame()) {\n                this.sendMessage(`/me @${username}, the game has been started.`);\n            } else {\n                this.sendMessage(`/me @${username}, the game was already started.`);\n            }\n            return true;\n        }\n\n        if (message === \"!undostart\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            try {\n                this.props.undoStart();\n                this.sendMessage(`/me @${username}, previous game and player queues have been restored.`);\n            } catch (e) {\n                this.sendMessage(`/me @${username}, cannot restore previous game and/or player queues.`);\n            }\n            return true;\n        }\n\n        if (message.startsWith(\"!redeem\")) {\n            this.sendMessage(`/me @${username}, this command is no longer supported: please specify either !redeemgame or !redeemseat.`);\n            return true;\n        }\n        return;\n    }\n\n    findGame = (requestedGame, username) => {\n        // remove extraneous chars from requested game\n        let regEx = /[\\s:']+/g;\n        // easter egg responses\n        for (let requestEntry of easterEggRequests) {\n            if (requestEntry?.Variants?.includes(requestedGame) || requestEntry?.Variants?.includes(requestedGame.replace(regEx, '')) ) {\n                if (typeof requestEntry.Response === 'function') {\n                    this.sendMessage(`/me @${username} ${requestEntry.Response()}`);\n                } else {\n                    this.sendMessage(`/me @${username} ${requestEntry.Response}`);\n                }\n                return null;\n            }\n        }\n        // check against games\n        for (let partyPackName in this.state.validGames) {\n            const partyPackObj = this.state.validGames[partyPackName]\n            for (const [formalGameName, metadata] of Object.entries(partyPackObj)) {\n                if (!metadata?.Variants || metadata?.Variants.length === 0) {\n                    continue;\n                }\n                let variants = metadata.Variants.map(v => v.replace(regEx, ''));\n                if (variants.includes(requestedGame.replace(regEx, '') )) {\n                    return {\n                        name: formalGameName,\n                        longName: `${formalGameName} (${partyPackName})`,\n                        partyPack: partyPackName,\n                        ...metadata\n                    };\n                }\n            }\n        }\n        this.sendMessage(`/me @${username}, ${requestedGame} could not be found in the list of available games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n        return;\n    }\n\n    checkForGameCommand = (message, username) => {\n        if (!message.startsWith(GAME_REQUEST_COMMAND)) return;\n\n        const requestedGame = message.replace(GAME_REQUEST_COMMAND, \"\").trim();\n\n        if (requestedGame === \"\") {\n            this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\n            return null;\n        }\n\n        return this.findGame(requestedGame, username);\n    }\n\n    checkForSubrequest = (message, username, subscriber) => {\n        if (!message.startsWith(GAME_SUBREQUEST_COMMAND)) return;\n        if (subscriber !== true && this.props.channel !== username && username.toLowerCase() !== 'dannyzonegames') {\n            this.sendMessage(`/me @${username}, you must be a subscriber to use this command.`);\n            return null;\n        }\n\n        const requestedGame = message.replace(GAME_SUBREQUEST_COMMAND, \"\").trim();\n\n        if (requestedGame === \"\") {\n            this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\n            return null;\n        }\n\n        return this.findGame(requestedGame, username);\n    }\n\n    onConnected = (client) => {\n        this.setState({\n            client,\n            connected: true\n        });\n    }\n\n    onDisconnected = (evt) => {\n        this.setState({\n            client: null,\n            connected: false\n        });\n    }\n\n    onMessage = (target, tags, msg, self) => {\n        if (this.props.logUserMessages) {\n            console.log({target, tags, msg, self});\n        }\n        if (self) return;\n        this.props.onMessage(msg, tags.username, tags)\n\n        if (msg.trim() === \"!nextgame\") {\n            if (this.props.upcomingGames && this.props.upcomingGames.length > 0) {\n                let upcoming = this.props.upcomingGames[0].name;\n                if (this.props.upcomingGames.length > 1) {\n                    upcoming += `, followed by ${this.props.upcomingGames[1].name}`\n                    for (let i = 2; i < this.props.upcomingGames.length; i++) {\n                        upcoming += `, and ${this.props.upcomingGames[i].name}`\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the next game up is ${upcoming}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, the next game hasn't been decided yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        if (msg.trim() === \"!lastgame\") {\n            if (this.props.previousGames && this.props.previousGames.length > 0) {\n                let lastPlayedGames = [...this.props.previousGames].reverse();\n                let previous = lastPlayedGames[0].name;\n                if (lastPlayedGames.length > 1) {\n                    previous += `, followed by ${lastPlayedGames[1].name}`\n                    for (let i = 2; i < lastPlayedGames.length; i++) {\n                        previous += (i+1 === lastPlayedGames.length)\n                            ? `, and ${lastPlayedGames[i].name}` // oxford comma, y'all\n                            : `, ${lastPlayedGames[i].name}`;\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the last game played was ${previous}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, no games have been played yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        const cleanedMsg = msg.trim().toLowerCase();\n        if (this.checkForMiscCommands(cleanedMsg, tags.username)) return;\n        let gameObj = this.checkForGameCommand(cleanedMsg, tags.username);\n        let isSubRequest = false;\n        if (!gameObj && this.props.settings?.enableSubRequests) {\n            isSubRequest = true;\n            gameObj = this.checkForSubrequest(cleanedMsg, tags.username, tags.subscriber);\n        }\n        if (!gameObj) return;\n\n        if (this.props.messages[gameObj.longName]) {\n            let requestedBy = (this.props.messages[gameObj.longName].username === tags.username) ? 'yourself, silly' : this.props.messages[gameObj.longName].username;\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has already been requested by ${requestedBy}!`);\n            return;\n        }\n\n        if (this.props.allowGameRequests !== true) {\n            this.sendMessage(`/me @${tags.username}, game requests are currently paused at the moment, please try again later.`);\n            return;\n        }\n\n\n        let prevRequestedGameName = null;\n        let prevSubRequestedGameName = null;\n        for (const metadata of Object.values(this.props.messages)) {\n            if (metadata.username === tags.username && metadata.isSubRequest === isSubRequest) {\n                if (isSubRequest) {\n                    prevSubRequestedGameName = metadata.longName;\n                } else {\n                    prevRequestedGameName = metadata.longName;\n                }\n                break;\n            }\n        }\n\n        let enableSubRequestLimit = this.props.settings?.enableSubRequestLimit;\n        if (prevRequestedGameName || prevSubRequestedGameName) {\n            if (this.props.channel === tags.username) {\n                this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue. Your previous game request(s) weren't deleted, since you have special broadcaster privilege :P`);\n            } else if (isSubRequest && (!enableSubRequestLimit || (enableSubRequestLimit && !prevSubRequestedGameName))) {\n                this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue via a subrequest.`);\n            } else if (prevSubRequestedGameName) {\n                this.props.onDelete(prevSubRequestedGameName);\n                this.sendMessage(`/me @${tags.username}, your previous request of ${prevSubRequestedGameName} has been replaced with ${gameObj.name}.`);\n            } else {\n                this.props.onDelete(prevRequestedGameName);\n                this.sendMessage(`/me @${tags.username}, your previous request of ${prevRequestedGameName} has been replaced with ${gameObj.name}.`);\n            }\n        } else if (Object.values(this.state.allowedGames).filter(g => g.game === gameObj.name && g.pack === gameObj.partyPack && g.enabled !== true).length === 1) {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} is not currently enabled and was not added to the queue.`);\n            return;\n        } else {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue.`);\n        }\n\n        this.props.addGameRequest(gameObj, tags.username, isSubRequest);\n        return;\n    }\n\n    addPack = (pack, username) => {\n        for (let partyPackName in this.state.validGames) {\n            let packslug = partyPackName.trim().toLowerCase().replace(/([^\\d]+)/gi, '');\n            window.console.log({packslug, pack});\n            if (packslug === pack) {\n                let partyPackObj = this.state.validGames[partyPackName]\n                for (const [formalGameName, metadata] of Object.entries(partyPackObj)) {\n                     this.props.addGameRequest({\n                        name: formalGameName,\n                        longName: `${formalGameName} (${partyPackName})`,\n                        partyPack: partyPackName,\n                        ...metadata\n                    }, username, false);\n                }\n                return {name: partyPackName};\n            }\n        }\n        return;\n    }\n\n    sendMessage = (msg) => {\n        return this.state.client.say(this.props.channel, msg);\n    }\n\n    setAllowedGames = (allowedGames) => {\n        this.setState({\n            allowedGames\n        });\n    }\n\n    _disconnect = async() => {\n        try {\n            if (this.client) {\n                await this.client.disconnect();\n                this.client.removeAllListeners();\n                this.onDisconnected();\n            }\n        } catch(e) {\n            console.log('Error Disconnecting Twitch Client', e);\n            return false;\n        }\n        return true;\n    }\n\n    _connect = async() => {\n        try {\n            const client = this.getTwitchClient(this.props);\n            this.client = client;\n\n            client.on('message', this.onMessage);\n            client.on('disconnected', this.onDisconnected);\n            await client.connect();\n            this.onConnected(client);\n            return client;\n        } catch(e) {\n            console.log('Error Reconnecting Twitch Client', e);\n        }\n        return false;\n    }\n\n    refreshTwitchClient = async() => {\n        await this._disconnect();\n        await this._connect();\n        return;\n    }\n\n    reloadGameList = () => {\n        let gameList = `${rawJackboxGameList}?${Date.now()}`;\n        return this.getGameList(gameList, this.client);\n    }\n\n    render() {\n        return null;\n    }\n}\n","import {Component} from 'react';\nimport {Accordion} from 'react-bootstrap';\nimport YAML from 'yaml'\nimport rawJackboxGameList from '../JackboxGames.yaml';\nimport './OptionsGameList.css';\nconst fetch = require('node-fetch');\n\nclass OptionsGameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowedGames: [],\n            validGames: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawJackboxGameList)\n            .then(r => r.text())\n            .then(text => {\n                let validGames = YAML.parse(text);\n                // this.setState({validGames});\n                this.setAllowedGames(validGames);\n            });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.allowedGames || this.state.validGames.length === 0 || this.state.allowedGames.length === 0) return;\n        localStorage.setItem('__allowedGames', JSON.stringify(this.state.allowedGames));\n    }\n\n    getAllowedGames = function(validGames) {\n        let __allowedGames = localStorage.getItem('__allowedGames');\n        let allowedGames = (__allowedGames) ? JSON.parse(__allowedGames) : {};\n\n\n        // let output = {};\n        //\n        // // return list of valid games merged with existing allowedGames\n        // Object.entries(validGames).forEach(([pack, packGames]) => {\n        //     // get valid games within each pack\n        //     Object.keys(packGames).forEach(game => {\n        //         let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n        //         output[gameId] = (allowedGames[gameId])\n        //             ? allowedGames[gameId]\n        //             : {\n        //                 id: gameId,\n        //                 game,\n        //                 pack,\n        //                 enabled: true\n        //             };\n        //         output[gameId] = allowedGames[gameId];\n        //     });\n        // });\n        // return output;\n\n        // return list of valid games merged with existing allowedGames\n        return Object.assign({},\n            ...[].concat(\n                ...Object.entries(validGames).map(([pack, packGames]) => {\n                    // get valid games within each pack\n                    return Object.assign({},\n                        ...Object.keys(packGames).map(game => {\n                            let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n                            if (gameId in allowedGames && allowedGames[gameId].id !== undefined) {\n                                return {\n                                    [gameId]: allowedGames[gameId]\n                                };\n                            }\n                            // add entry with default value\n                            // console.log(`Adding ${gameId}`);\n                            return {\n                                [gameId]: {\n                                    id: gameId,\n                                    game,\n                                    pack,\n                                    enabled: true\n                                }\n                            }\n                        })\n                    );\n                })\n            )\n        )\n    }\n\n    setAllowedGames = function(validGames) {\n        let allowedGames = this.getAllowedGames(validGames);\n        this.setState({\n            allowedGames,\n            validGames\n        });\n        localStorage.setItem('__allowedGames', JSON.stringify(allowedGames));\n    }\n\n    onCheckHandler = ({target}) => {\n        let {id, checked} = target;\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                [id]: {\n                    ...prevState.allowedGames[id],\n                    enabled: checked\n                }\n            }\n        }));\n    }\n\n    onGroupCheckHandler = ({target}) => {\n        let {value, checked} = target;\n        // console.log({value, checked});\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === value);\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                ...Object.assign(\n                    ...packGames.map(g => ({\n                        [g.id]: {\n                            ...g,\n                            enabled: checked\n                        }\n                    })\n                ))\n            }\n        }));\n    }\n\n    renderGameCard = function(props) {\n        let {id, game, pack} = props;\n        let {allowedGames} = this.state;\n        let checked = allowedGames[id]?.enabled || false;\n        return (\n            <li className=\"gameName\" key={id}>\n                <input type=\"checkbox\" id={id} name={id} value={id} checked={checked} onChange={this.onCheckHandler} />\n                {' '}\n                <label htmlFor={id} title={`${pack}: ${game}`}>\n                    {game}\n                </label>\n            </li>\n        );\n    }\n\n    renderPackCheckbox = function(pack) {\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === pack);\n        let isChecked = packGames.filter(g => g.enabled === true).length === packGames.length;\n        return (\n            <input type=\"checkbox\" id={pack} name={pack} value={pack} checked={isChecked} onChange={this.onGroupCheckHandler} />\n        );\n    }\n\n    renderPartyPack = function (props) {\n        const gameList = Object.keys(props.metadata);\n\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === props.partyPackName);\n        let gamesEnabled = packGames.filter(g => g.enabled === true)\n        let isChecked = gamesEnabled.length === packGames.length;\n        let isIndeterminate = (!isChecked && gamesEnabled.length !== 0)\n        return (\n            <Accordion.Item eventKey={props.key} className=\"party-pack-card\" key={props.key}>\n                <Accordion.Header className=\"bg-darker text-white\">\n                    {props.partyPackName}\n                </Accordion.Header>\n                <Accordion.Body>\n                    <div className=\"float-end\">\n                        <small>Select All</small>\n                        {` `}\n                        <input type=\"checkbox\" id={props.partyPackName} name={props.partyPackName} value={props.partyPackName} checked={isChecked} onChange={this.onGroupCheckHandler} ref={el => el && (el.indeterminate = isIndeterminate)} />\n                    </div>\n                    <ul className=\"party-pack-game-list\">\n                        {gameList.map(\n                            (gameName, i) => this.renderGameCard({\n                                game: gameName,\n                                id: `${props.partyPackName} ${gameName}`.replace(/\\W/ig, '_'),\n                                pack: props.partyPackName\n                            })\n                        )}\n                    </ul>\n                </Accordion.Body>\n            </Accordion.Item>\n        );\n    }\n\n    render() {\n        let {validGames} = this.state;\n        const partyPackList = Object.keys(validGames);\n\n        return (\n            <Accordion id=\"options-game-list\" className=\"accordion-dark\" flush>\n                {partyPackList.map(\n                    (partyPackName, i) => this.renderPartyPack({\n                        key: i,\n                        partyPackName,\n                        metadata: this.state.validGames[partyPackName]\n                    })\n                )}\n            </Accordion>\n        );\n    }\n\n}\nexport default OptionsGameList;\n","import {Component} from 'react';\nimport {Button, Collapse, Dropdown, Offcanvas} from 'react-bootstrap';\nimport OptionsGameList from './OptionsGameList';\nimport PropTypes from 'prop-types';\nimport {version} from '../../package.json';\n\nimport './OptionsMenu.css';\n\nexport default class OptionsMenu extends Component {\n    static get propTypes() {\n        return {\n            debugItems: PropTypes.array,\n            gamesList: PropTypes.object,\n            items: PropTypes.array,\n            onHide: PropTypes.func,\n            onLogout: PropTypes.func,\n            onUndo: PropTypes.func,\n            showOptionsMenu: PropTypes.bool,\n            showSettingsMenu: PropTypes.bool,\n            showUndoAvailable: PropTypes.bool\n        };\n    }\n    static get defaultProps() {\n        return {\n            debugItems: [],\n            gamesList: {\n                allowedGames: null,\n                validGames: null\n            },\n            items: [],\n            onHide: () => void 0,\n            onLogout: () => void 0,\n            onUndo: () => void 0,\n            showOptionsMenu: false,\n            showSettingsMenu: false,\n            showUndoAvailable: false\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGameList: false\n        }\n        this.toggleGameList = this.toggleGameList.bind(this);\n        this.toggleSettingsMenu = this.toggleSettingsMenu.bind(this);\n    }\n\n    /*\n\n    Expects the following object schema:\n    {\n        label: string,  // required\n        onClick: func,\n        listItemClassName: string,\n        btnClassName: string\n    }\n\n\n     */\n    createDebugMenuItems = (items) => {\n        if (!items) {\n            return [];\n        }\n        return items.map((i, idx) => {\n            if (!i || !i.label) {\n                return null;\n            }\n            if (/^[-]+$/i.test(i.label)) {\n                return (\n                    <Dropdown.Divider\n                        key={`${idx} ${i.label}`}\n                    />\n                );\n            }\n            return (\n                <Dropdown.Item\n                    eventKey={i.label}\n                    href={i.href || null}\n                    key={`${idx} ${i.label}`}\n                    onClick={i.onClick || null}\n                >\n                    {i.label}\n                </Dropdown.Item>\n            );\n        }).filter(i => i);\n    }\n\n    createMenuItems = (items) => {\n        if (!items) {\n            return [];\n        }\n        let noop = () => void 0;\n        return items.map((i, idx) => {\n            if (!i.label) {\n                return null;\n            }\n            let liClassName = (!i.listItemClassName)\n                ? i.label.trim().toLowerCase().split(' ').join('-')\n                : i.listItemClassName;\n            let listItemClassNames = ['mb-1 fs-4 d-grid text-start', liClassName || null].filter(n => n).join(' ');\n            let btnClassNames = ['btn', i.btnClassName || null].filter(n => n).join(' ');\n            return (\n                <li className={listItemClassNames} key={`${idx}-${i.label}`}>\n                    <Button variant=\"link\" className={btnClassNames} onClick={i.onClick || noop}>\n                        {i.label}\n                    </Button>\n                </li>\n            );\n        }).filter(i => i);\n    }\n\n    toggleGameList = () => {\n        this.setState((state) => {\n            return {\n                showGameList: !state.showGameList\n            }\n        })\n    }\n\n    toggleSettingsMenu = () => {\n        this.setState((state) => {\n            return {\n                showSettingsMenu: !state.showSettingsMenu\n            }\n        })\n    }\n    // renderGameOptions() {\n    //     let {allowedGames, validGames} = this.props.gamesList;\n    //     let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n    //         return Object.keys(packData[1]).map(gameData => {\n    //             let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n    //             return {\n    //                 id: gameId,\n    //                 game: gameData,\n    //                 pack: packData[0]\n    //             }\n    //         })\n    //     }))\n    //\n    //\n    //\n    //     // let gamesList = gamePackList.map(g => g.game);\n    //     console.log('gamePackList:', gamePackList, allowedGames);\n    //\n    //     return (\n    //         <Modal\n    //             show={this.state.showOptionsModal}\n    //             onHide={()=>this.toggleOptionsModal(false)}\n    //             size=\"lg\"\n    //             aria-labelledby=\"contained-modal-title-vcenter\"\n    //             centered>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title id=\"contained-modal-title-vcenter\">\n    //                     Options\n    //                 </Modal.Title>\n    //             </Modal.Header>\n    //             <Modal.Body>\n    //                 <div className=\"options-list\">\n    //                     <ul>\n    //                         {gamePackList.map(({id, game, pack}, idx) => {\n    //                             // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n    //                             return (\n    //                                 <li key={id}>\n    //                                     <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n    //                                 </li>\n    //                             )}\n    //                         )}\n    //                     </ul>\n    //                 </div>\n    //             </Modal.Body>\n    //             <Modal.Footer>\n    //                 <Button data-bs-dismiss=\"modal\">Close</Button>\n    //             </Modal.Footer>\n    //         </Modal>\n    //     );\n    // }\n\n    render() {\n        let {debugItems, items, settings, onSettingsUpdate} = this.props;\n        let optionMenuItems = this.createMenuItems(items);\n        let debugMenuItems = this.createDebugMenuItems(debugItems);\n\n        let toggleSubRequests = () => {\n            let value = typeof settings?.enableSubRequests === 'boolean'\n                ? !settings?.enableSubRequests\n                : true;\n            onSettingsUpdate({enableSubRequests: value});\n        };\n        let toggleSubRequestLimit = () => {\n            let value = typeof settings?.enableSubRequestLimit === 'boolean'\n                ? !settings?.enableSubRequestLimit\n                : true;\n            onSettingsUpdate({enableSubRequestLimit: value});\n        };\n        let toggleClearSeatsAfterRedeem = () => {\n            let value = typeof settings?.clearSeatsAfterRedeem === 'boolean'\n                ? !settings?.clearSeatsAfterRedeem\n                : true;\n            onSettingsUpdate({clearSeatsAfterRedeem: value});\n        };\n        let updateCustomDelimiter = (e) => {\n            let {value} = e.target;\n            if (!value) {\n                value = null;\n            } else {\n                value = value.trim();\n            }\n            onSettingsUpdate({customDelimiter: value});\n        };\n        let toggleEnableRoomCode = () => {\n            let value = typeof settings?.enableRoomCode === 'boolean'\n                ? !settings?.enableRoomCode\n                : true;\n            onSettingsUpdate({enableRoomCode: value});\n        };\n        let toggleUseLinkForCommandList = () => {\n            let value = typeof settings?.useLinkForCommandList === 'boolean'\n                ? !settings?.useLinkForCommandList\n                : true;\n            onSettingsUpdate({useLinkForCommandList: value});\n        };\n\n        let undoStartButton = (this.props.showUndoAvailable) ? (\n            <li className=\"mb-1 fs-4 d-grid text-start\">\n                <Button variant=\"link\" className=\"btn undo-start-game\" onClick={this.props.onUndo}>\n                    Undo Start\n                    <div className=\"fs-6 fst-italic opacity-75 lh-1\">\n                        Start Time: {this.props.parentState?.lastStartTimestamp}\n                    </div>\n                </Button>\n            </li>\n        ) : null;\n\n        return (\n            <Offcanvas\n                id=\"options-menu\"\n                onHide={this.props.onHide}\n                placement=\"end\"\n                show={this.props.showOptionsMenu}>\n                <Offcanvas.Header closeButton closeVariant=\"white\">\n                    <Offcanvas.Title as=\"h2\" className=\"fw-bold\">\n                        Options\n                    </Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <ul className=\"options-menu-items list-unstyled pb-3 px-4\">\n                        <li className=\"mb-1 fs-4 d-grid text-start\">\n                            <Button variant=\"link\" className=\"btn logout\" onClick={this.props.onLogout}>\n                                Logout\n                            </Button>\n                        </li>\n                        <hr />\n                        {undoStartButton}\n                        <li className=\"mb-1 fs-4 d-grid text-start\">\n                            <Button variant=\"link\" className=\"btn logout\" onClick={this.props.toggleCommandsModal}>\n                                Show Chat Commands\n                            </Button>\n                        </li>\n                        <li className=\"mb-1 fs-4 d-grid text-start\">\n                            <Button variant=\"link\" className=\"btn settings-menu\" onClick={this.toggleSettingsMenu}>\n                                Settings\n                            </Button>\n                        </li>\n                        <Collapse in={this.state.showSettingsMenu}>\n                            <div id=\"settings-menu\" className=\"accordion-dark accordion accordion-flush\">\n                                <div className=\"accordion-body\">\n                                    <Button variant=\"link\" className=\"btn settings-menu\"\n                                        onClick={toggleSubRequests}\n                                        title=\"Allows subscribers to make additional game requests when enabled.\"\n                                    >\n                                        <input type=\"checkbox\" role=\"switch\" checked={(settings?.enableSubRequests)} readOnly /> <span>Enable Sub Requests</span>\n                                    </Button>\n                                    <Button variant=\"link\" className=\"btn settings-menu subsetting\"\n                                        onClick={toggleSubRequestLimit}\n                                        title=\"Limit subscribers to one additional game requests when enabled.\"\n                                        disabled={!(settings?.enableSubRequests)}\n                                    >\n                                        <input type=\"checkbox\" role=\"switch\" checked={(settings?.enableSubRequestLimit)} readOnly /> <span>Limit 1 Sub Request</span>\n                                    </Button>\n                                    <Button variant=\"link\" className=\"btn settings-menu\"\n                                        onClick={toggleClearSeatsAfterRedeem}\n                                        title=\"Clears the list of player signups after a game redemption.\"\n                                    >\n                                        <input type=\"checkbox\" role=\"switch\" checked={(settings?.clearSeatsAfterRedeem)} readOnly /> <span>Clear Seats After Redeem</span>\n                                    </Button>\n\n                                    <Button variant=\"link\" className=\"btn settings-menu\"\n                                        title=\"Uses a custom character or emote to separate requests listed in the chat.\"\n                                    >\n                                        <span>Use Custom Delimiter: </span>\n                                        <input type=\"text\" name=\"custom-delimiter\" defaultValue={settings?.customDelimiter}\n                                        onChange={updateCustomDelimiter} className=\"form-control\" />\n                                    </Button>\n\n                                    <Button variant=\"link\" className=\"btn settings-menu\"\n                                        onClick={toggleEnableRoomCode}\n                                        title=\"Allows host to set a room code that can be whispered to players.\"\n                                    >\n                                        <input type=\"checkbox\" role=\"switch\" checked={(settings?.enableRoomCode)} readOnly /> <span>Enable Room Code</span>\n                                    </Button>\n\n                                    <Button variant=\"link\" className=\"btn settings-menu\"\n                                        onClick={toggleUseLinkForCommandList}\n                                        title=\"Posts a link in chat to the commands page when '!command' is used; otherwise, lists all available commands in chat when disabled.\"\n                                    >\n                                        <input type=\"checkbox\" role=\"switch\" checked={(settings?.useLinkForCommandList)} readOnly /> <span>Use Link for <tt>!command</tt></span>\n                                    </Button>\n                                </div>\n                            </div>\n                        </Collapse>\n                        {optionMenuItems}\n                        <li className=\"mb-1 fs-4 d-grid text-start d-none\">\n                            <Button variant=\"link\" className=\"btn reload-game-list\" onClick={this.props.reloadGameList}>\n                                Refresh Game List\n                            </Button>\n                        </li>\n                        <li className=\"mb-1 fs-4 d-grid text-start d-none\">\n                            <Button variant=\"link\" className=\"btn game-list\" onClick={this.toggleGameList}>\n                                Game List\n                            </Button>\n                        </li>\n                        <Collapse in={this.state.showGameList}>\n                            <div>\n                                <OptionsGameList\n                                    allowedGames={this.props.gamesList?.allowedGames}\n                                    validGames={this.props.gamesList?.validGames} />\n                            </div>\n                        </Collapse>\n                    </ul>\n\n                    <div id=\"options-debug-menu-items\" className=\"position-absolute bottom-0 start-0 end-0 pb-3 text-center\">\n                        <Dropdown id=\"dropdown-debug-menu-items\" drop=\"up-centered\" variant=\"link\">\n                            <Dropdown.Toggle id=\"dropdown-debug-menu-items-toggle\" size=\"sm\" variant=\"link\">\n                                {`version ${version}`}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu variant=\"dark\">\n                                <Dropdown.Header>\n                                    Debug Options\n                                </Dropdown.Header>\n                                {debugMenuItems}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n        );\n    }\n}\n","const stateMainScreen = {\n    \"gameSelected\": null,\n    \"messages\": {\n        \"Survive The Internet (Party Pack 4)\": {\n            \"name\": \"Survive The Internet\",\n            \"longName\": \"Survive The Internet (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"survive\",\n                \"survive the internet\",\n                \"sti\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628112883959,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash (Any Version)\": {\n            \"name\": \"Quiplash\",\n            \"longName\": \"Quiplash (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"quiplash\",\n                \"quip\",\n                \"ql\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628113055677,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"You Don't Know Jack (Party Pack 5)\": {\n            \"name\": \"You Don't Know Jack\",\n            \"longName\": \"You Don't Know Jack (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ydkj 2\",\n                \"ydkj fs\",\n                \"ydkjfs\",\n                \"you dont know jack 2\",\n                \"you don't know jack 2\",\n                \"you don't know jack full stream\",\n                \"you don't know jack full steam\",\n                \"you don't know jack: full stream\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114634007,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Mad Verse City (Party Pack 5)\": {\n            \"name\": \"Mad Verse City\",\n            \"longName\": \"Mad Verse City (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"mvc\",\n                \"madverse\",\n                \"mad verse\",\n                \"madversecity\",\n                \"mad verse city\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114645263,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Monster Seeking Monster (Party Pack 4)\": {\n            \"name\": \"Monster Seeking Monster\",\n            \"longName\": \"Monster Seeking Monster (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 7,\n            \"Variants\": [\n                \"msm\",\n                \"monster seeking monster\",\n                \"monster seeking monsters\",\n                \"monsters seeking monsters\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114646991,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Blather 'Round (Party Pack 7)\": {\n            \"name\": \"Blather 'Round\",\n            \"longName\": \"Blather 'Round (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 2,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"blather\",\n                \"blather round\",\n                \"blather 'round\",\n                \"blatherround\",\n                \"blatheround\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114733155,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Talking Points (Party Pack 7)\": {\n            \"name\": \"Talking Points\",\n            \"longName\": \"Talking Points (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"talking points\",\n                \"talkingpoints\",\n                \"talk points\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114749438,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic Phone (Standalone)\": {\n            \"name\": \"Gartic Phone\",\n            \"longName\": \"Gartic Phone (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min players\": 4,\n            \"Max players\": 30,\n            \"Variants\": [\n                \"gartic phone\",\n                \"garticphone\",\n                \"garlic phone\",\n                \"garlicphone\",\n                \"gartic\",\n                \"garlic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114761558,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Drawful (Any Version)\": {\n            \"name\": \"Drawful\",\n            \"longName\": \"Drawful (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"drawful\",\n                \"drawfull\",\n                \"draw full\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114769626,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Words on Stream (Standalone)\": {\n            \"name\": \"Words on Stream\",\n            \"longName\": \"Words on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"words on stream\",\n                \"word on stream\",\n                \"words stream\",\n                \"word stream\",\n                \"words\",\n                \"wos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114772430,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic on Stream (Standalone)\": {\n            \"name\": \"Gartic on Stream\",\n            \"longName\": \"Gartic on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"gartic on stream\",\n                \"garlic on stream\",\n                \"garlic stream\",\n                \"gartic stream\",\n                \"gos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114776310,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"The Devils and the Details (Party Pack 7)\": {\n            \"name\": \"The Devils and the Details\",\n            \"longName\": \"The Devils and the Details (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"devils\",\n                \"devils in details\",\n                \"devils and details\",\n                \"devils & details\",\n                \"devil's in details\",\n                \"devil's and details\",\n                \"devil's & details\",\n                \"devils in the details\",\n                \"devils and the details\",\n                \"devils & the details\",\n                \"devil's in the details\",\n                \"devil's and the details\",\n                \"devil's & the details\",\n                \"the devils in the details\",\n                \"the devils and the details\",\n                \"the devils & the details\",\n                \"the devil's in the details\",\n                \"the devil's and the details\",\n                \"the devil's & the details\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114937776,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Fibbage: Enough About You (Party Pack 4)\": {\n            \"name\": \"Fibbage: Enough About You\",\n            \"longName\": \"Fibbage: Enough About You (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"eay\",\n                \"enough about you\",\n                \"feay\",\n                \"fibbage eay\",\n                \"fibbage: eay\",\n                \"fibbage enough about you\",\n                \"fibbage: enough about you\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114942915,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Champ'd Up (Party Pack 7)\": {\n            \"name\": \"Champ'd Up\",\n            \"longName\": \"Champ'd Up (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"champd\",\n                \"champed\",\n                \"champd up\",\n                \"champ'd\",\n                \"champ'd up\",\n                \"champed up\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114981572,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Civic Doodle (Party Pack 4)\": {\n            \"name\": \"Civic Doodle\",\n            \"longName\": \"Civic Doodle (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"civic doodle\",\n                \"civicdoodle\",\n                \"civic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628115017116,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 2 (Party Pack 6)\": {\n            \"name\": \"Trivia Murder Party 2\",\n            \"longName\": \"Trivia Murder Party 2 (Party Pack 6)\",\n            \"partyPack\": \"Party Pack 6\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp2\",\n                \"tmp 2\",\n                \"trivia murder party 2\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628118545790,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash 3 (Party Pack 7)\": {\n            \"name\": \"Quiplash 3\",\n            \"longName\": \"Quiplash 3 (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ql3\",\n                \"ql 3\",\n                \"quip 3\",\n                \"quip3\",\n                \"quiplash 3\",\n                \"quiplash3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628121075780,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 1 (Party Pack 3)\": {\n            \"name\": \"Trivia Murder Party 1\",\n            \"longName\": \"Trivia Murder Party 1 (Party Pack 3)\",\n            \"partyPack\": \"Party Pack 3\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp1\",\n                \"tmp 1\",\n                \"trivia murder party 1\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628122719930,\n            \"locked\": false,\n            \"chosen\": false\n        }\n    },\n    \"colors\": [\n        \"#75a5e5\",\n        \"#847cef\",\n        \"#74aee0\",\n        \"#86efed\",\n        \"#63bbd8\",\n        \"#c9d8ff\",\n        \"#97ecef\",\n        \"#bcefff\",\n        \"#9caff4\",\n        \"#b9a4f2\",\n        \"#9fbbfc\",\n        \"#affffc\",\n        \"#a1bef4\",\n        \"#7ee7fc\",\n        \"#97c1ef\",\n        \"#a4a4fc\",\n        \"#a4a5f4\",\n        \"#b7f1ff\",\n        \"#79bdfc\",\n        \"#6885dd\",\n        \"#98e1f2\",\n        \"#aac1ff\",\n        \"#a583fc\",\n        \"#8991e5\",\n        \"#6edddd\",\n        \"#a7b7ef\",\n        \"#74e2e8\",\n        \"#9c9af9\",\n        \"#9dd5f2\",\n        \"#6a73ed\",\n        \"#b19df9\",\n        \"#88eaea\",\n        \"#6b91ef\",\n        \"#9de1f9\",\n        \"#7691fc\",\n        \"#d0c4fc\",\n        \"#c9d7ff\",\n        \"#84a7ed\",\n        \"#809bfc\",\n        \"#63d0d8\",\n        \"#b8cbfc\",\n        \"#a3a0ff\",\n        \"#b4f4f7\",\n        \"#9c9efc\",\n        \"#8ae8f7\",\n        \"#7985ea\",\n        \"#7876e8\",\n        \"#cfc2fc\",\n        \"#bfcfff\",\n        \"#92a9f4\",\n        \"#d0c2fc\",\n        \"#adc9f7\",\n        \"#767ce0\",\n        \"#95a1f9\",\n        \"#a286f4\",\n        \"#8085ed\",\n        \"#c4c9fc\",\n        \"#7c8ff9\",\n        \"#7079f9\",\n        \"#aaa5ff\",\n        \"#8db7e8\",\n        \"#9e94e8\",\n        \"#a5ffff\",\n        \"#76ade8\",\n        \"#a9f5fc\",\n        \"#a0a5ff\",\n        \"#9cbffc\",\n        \"#8fa2e8\",\n        \"#8eeeff\",\n        \"#88ccf7\",\n        \"#b0f2f4\",\n        \"#8e7fef\",\n        \"#aef9f8\",\n        \"#8beef9\",\n        \"#7a8ef4\",\n        \"#c7c4fc\",\n        \"#7b87f2\",\n        \"#7b77ea\",\n        \"#859be5\",\n        \"#7191e8\",\n        \"#aadaef\",\n        \"#b1aaf7\",\n        \"#80bff7\",\n        \"#95e0f4\",\n        \"#a3e5ed\",\n        \"#91a1f2\",\n        \"#c0c4f9\",\n        \"#7a90f4\",\n        \"#85def2\",\n        \"#87f2ee\",\n        \"#cac6ff\",\n        \"#76c3f7\",\n        \"#c2dcfc\",\n        \"#a2a2f9\",\n        \"#ccd7ff\",\n        \"#978fef\",\n        \"#8d77e5\",\n        \"#bad0fc\",\n        \"#ccf7ff\"\n    ],\n    \"counter\": 26,\n    \"history\": [\n        {\n            \"name\": \"Zeeple Dome\",\n            \"longName\": \"Zeeple Dome (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"zeeple\",\n                \"zeeple dome\",\n                \"zeepledome\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114757634,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Split the Room\",\n            \"longName\": \"Split the Room (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"split the room\",\n                \"splittheroom\",\n                \"split room\",\n                \"room split\",\n                \"split\",\n                \"str\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114989864,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Fibbage 3\",\n            \"longName\": \"Fibbage 3 (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"fibbage 3\",\n                \"fibbage3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114666823,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Trivia Murder Party\",\n            \"longName\": \"Trivia Murder Party (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp\",\n                \"trivia murder party\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628106145996,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        }\n    ],\n    \"nextGameIdx\": 0,\n    \"showPlayerSelect\": false,\n    \"userLookup\": {\n        \"dcpesses\": {\n            \"color\": \"#1E90FF\",\n            \"user-id\": \"473294395\",\n            \"username\": \"dcpesses\"\n        }\n    }\n};\n\nconst statePlayerSelect = {\n    \"interested\": [\n        {\n            \"username\": \"player6\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player3\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player9\"\n        },\n        {\n            \"username\": \"dcpesses\"\n        }\n    ],\n    \"playing\": [\n        {\n            \"username\": \"player1\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player7\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player8\"\n        },\n        {\n            \"username\": \"player5\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player2\",\n            \"isPrioritySeat\": true\n        }\n    ],\n    \"joined\": [],\n    \"streamerSeat\": true,\n    \"isQueueOpen\": true,\n    \"columnWidth\": 634\n}\n\nexport {\n    stateMainScreen as MainScreen,\n    statePlayerSelect as PlayerSelect\n};\n","export default __webpack_public_path__ + \"static/media/dice.021a7158.svg\";","export default __webpack_public_path__ + \"static/media/star.de82f684.svg\";","import React, { Component } from 'react';\r\nimport * as fakeStates from '../example-states';\r\n\r\nimport dice from '../images/dice.svg';\r\nimport star from '../images/star.svg';\r\n\r\nimport './PlayerSelect.css';\r\n\r\nexport default class PlayerSelect extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.firstColumn = React.createRef();\r\n        this.state = {\r\n            interested: [],\r\n            playing: [],\r\n            joined: [],\r\n            roomCode: null,\r\n            sentCodeStatus: {},\r\n            streamerSeat: false,\r\n            isQueueOpen: true,\r\n            randCount: 0\r\n        }\r\n        this.randInt = 0;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\r\n            this.setState(fakeStates.PlayerSelect);\r\n        }\r\n        this.updateColumnSizes();\r\n        window.addEventListener(\"resize\", this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumnSizes);\r\n        clearInterval(this.randInt);\r\n        return;\r\n    }\r\n\r\n    updateColumnSizes = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                columnWidth: this.firstColumn.current.offsetWidth\r\n            };\r\n        })\r\n    }\r\n\r\n    handleNewPlayerRequest = (username, {isPrioritySeat=false}) => {\r\n        if (isPrioritySeat) {\r\n            // even if the queue is closed, still add them to the interested column for consideration\r\n            const column = (this.state.isQueueOpen ? 'playing' : 'interested');\r\n\r\n            return this.updateColumnForUser({username, isPrioritySeat}, column)\r\n                ? 'you have been successfully added to the lobby.'\r\n                : 'there was an error adding you to the lobby.';\r\n        }\r\n\r\n        if (this.state?.interested?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.playing?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.joined?.map((uObj) => uObj.username)?.includes(username)) {\r\n            return 'you are already in the lobby.';\r\n        }\r\n\r\n        if (!this.state.isQueueOpen) {\r\n            return 'the queue is currently closed; users have already been selected for this game.';\r\n        }\r\n        return this.updateColumnForUser({username}, 'interested')\r\n            ? 'you have successfully joined the lobby.'\r\n            : 'there was an error adding you to the lobby.';\r\n    }\r\n\r\n    handleRoomCodeChange = (evt) => {\r\n        let roomCode;\r\n        if (evt.target?.value) {\r\n            roomCode = evt.target.value.trim();\r\n        }\r\n        this.setState({roomCode});\r\n    }\r\n    handleRoomCodeFocus = (evt) => evt.target.select();\r\n\r\n    updateColumnForUser = (userObj, newColumn) => {\r\n        if (!this.state || !this.state[newColumn]) return false;\r\n\r\n        this.removeUser(userObj.username);\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [newColumn]: [\r\n                    ...state[newColumn],\r\n                    userObj\r\n                ]\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    removeUser = (username) => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: state.interested.filter((iObj) => iObj.username !== username),\r\n                playing: state.playing.filter((pObj) => pObj.username !== username),\r\n                joined:  state.joined.filter((jObj) => jObj.username !== username)\r\n            }\r\n        });\r\n    }\r\n\r\n    clearQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            }\r\n        })\r\n    }\r\n\r\n    openQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: true\r\n            }\r\n        })\r\n    }\r\n\r\n    closeQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: false\r\n            }\r\n        })\r\n    }\r\n\r\n    playerCount = () => {\r\n        return this.state.playing.length + this.state.joined.length +\r\n                        (this.state.streamerSeat ? 1 : 0);\r\n    }\r\n\r\n    toggleStreamerSeat = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                streamerSeat: !state.streamerSeat\r\n            }\r\n        });\r\n    }\r\n\r\n    canStartGame = () => {\r\n        return this.props.game?.['Max players'] >= this.playerCount() &&\r\n                     this.props.game?.['Min players'] <= this.playerCount();\r\n    }\r\n\r\n    onUndoState = (undoState) => {\r\n        // revert to state right before streamer pressed \"Start Game\"\r\n        if (!undoState) {\r\n            undoState = {...this.state.undoState};\r\n        }\r\n        this.setState ((state) => {\r\n            return {\r\n                ...undoState,\r\n            };\r\n        });\r\n    }\r\n\r\n    startGame = () => {\r\n        // clear for now; eventually, save elsewhere to report on user play history for that session\r\n        let undoState = {...this.state};\r\n        this.setState ((state) => {\r\n            return {\r\n                ...state,\r\n                undoState: {\r\n                    ...state\r\n                },\r\n                interested: [],\r\n                playing: [],\r\n                joined: [],\r\n                roomCode: null,\r\n            };\r\n        })\r\n        this.props.startGame(undoState);\r\n    }\r\n\r\n    initRandomizePlayersAnimation = () => {\r\n        const numPlayersToAdd = Math.min(\r\n            this.props.game['Max players'] - this.playerCount(),\r\n            this.state.interested.length\r\n        );\r\n        if (numPlayersToAdd > 0) {\r\n            this.randInt = setInterval(this.randomizePlayersAnimation, 50);\r\n            return;\r\n        }\r\n    }\r\n\r\n    randomizePlayersAnimation = () => {\r\n        switch (this.state.randCount) {\r\n            case 15:\r\n                this.randomizePlayers();\r\n                clearInterval(this.randInt);\r\n                this.setState({\r\n                    randCount: 0\r\n                });\r\n                break;\r\n            default:\r\n                this.setState(\r\n                    (prevState) => ({\r\n                        randCount: prevState.randCount + 1\r\n                    })\r\n                );\r\n                break;\r\n        }\r\n    }\r\n\r\n    randomizePlayers = () => {\r\n        const numPlayersToAdd = Math.min(\r\n            this.props.game['Max players'] - this.playerCount(),\r\n            this.state.interested.length\r\n        );\r\n\r\n        let randIdx, randUsername;\r\n        let randIdxArray = [], randUsernameArray = [];\r\n        // let interested = this.state.interested;\r\n        let playing = this.state.playing;\r\n\r\n        while(randIdxArray.length < numPlayersToAdd) {\r\n            randIdx = Math.floor(Math.random() * this.state.interested.length);\r\n            if (!randIdxArray.includes(randIdx)) {\r\n                randIdxArray.push(randIdx);\r\n                randUsername = this.state.interested[randIdx].username;\r\n                randUsernameArray.push(randUsername);\r\n                playing = [\r\n                    ...playing,\r\n                    this.state.interested[randIdx]\r\n                ];\r\n            }\r\n        }\r\n        this.setState((state) => {\r\n            return {\r\n                interested: state.interested.filter((uObj) => !randUsernameArray.includes(uObj.username)),\r\n                playing\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPlayerCard = (userObj, id, curColumn) => {\r\n        if (this.props.userLookup && this.props.userLookup[userObj?.username]) {\r\n            let metadata = this.props.userLookup[userObj.username];\r\n            userObj = Object.assign({}, userObj, metadata);\r\n        }\r\n\r\n        let displaySendCodeBtn = (this.props.settings?.enableRoomCode && this.state.roomCode != null);\r\n\r\n        // let btnJoined;\r\n        let btnPlaying;\r\n        let btnInterested;\r\n        let btnSendCode;\r\n\r\n        // if (curColumn !== 'joined') {\r\n        //     btnJoined = (\r\n        //         <button className='change-col' onClick={this.updateColumnForUser.bind(this, userObj, 'joined')}>Joined</button>\r\n        //     );\r\n        // }\r\n        if (curColumn !== 'playing') {\r\n            btnPlaying = (\r\n                <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'playing')}>Playing</button>\r\n            );\r\n        }\r\n        if (curColumn !== 'interested') {\r\n            btnInterested = (\r\n                <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'interested')}>Interested</button>\r\n            );\r\n        }\r\n        if (curColumn === 'playing' && displaySendCodeBtn) {\r\n            btnSendCode = (\r\n                <button className=\"change-col send-code\" onClick={ this.sendCode.bind(this, userObj) }>Send Code</button>\r\n            );\r\n        }\r\n\r\n        let redemptionIndicator;\r\n        if (userObj.isPrioritySeat === true) {\r\n            redemptionIndicator = (\r\n                <img src={star} alt=\"Priority seat redemption\"/>\r\n            );\r\n        }\r\n\r\n        let playerNameStyles = {\r\n            maxWidth: this.state.columnWidth - 25\r\n        };\r\n        return (\r\n            <div key={id} className=\"player-card lh-sm fs-5\">\r\n                <div className=\"player-card-username\">\r\n                    {redemptionIndicator}\r\n                    <p className='player-name' style={playerNameStyles}>{userObj.username}</p>\r\n                </div>\r\n                <div className=\"change-col-buttons-container\">\r\n                    {btnSendCode}\r\n                    {btnInterested}\r\n                    {btnPlaying}\r\n                    {/*btnJoined*/}\r\n                    <button className=\"change-col\" onClick={this.removeUser.bind(this, userObj.username)}>X</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStreamerSeatToggle = () => {\r\n        return (\r\n            <div className=\"toggle-streamer-seat card-header-item\">\r\n                <label className=\"toggle-label form-check-label\" htmlFor=\"reserve-seat-for-streamer\">\r\n                    Reserve seat for streamer?\r\n                </label>\r\n                <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"reserve-seat-for-streamer\" defaultChecked={this.state.streamerSeat} onChange={this.toggleStreamerSeat} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPlayerCount = () => {\r\n        let className = 'player-count';\r\n        if (this.props.game?.['Max players'] < this.playerCount()) {\r\n            className += ' overlimit';\r\n        }\r\n        return (\r\n            <div className={className}>\r\n                {this.playerCount()} of {this.props.game?.['Max players']} seats claimed\r\n            </div>\r\n        );\r\n    }\r\n\r\n    sendCode = (userObj) => {\r\n        let player = {\r\n            id: userObj['user-id'],\r\n            username: userObj.username\r\n        };\r\n        return this.props.sendWhisper(player, this.state.roomCode);\r\n    }\r\n\r\n    sendCodeToAll = () => {\r\n        if (!this.state.roomCode) {\r\n            return;\r\n        }\r\n        if (this.state.playing.length === 0) {\r\n            this.props.sendMessage('Sorry, can\\'t send the code to 0 players. :p');\r\n            return;\r\n        }\r\n        let sendingToMsg = 'Sending room code to';\r\n        if (this.state.playing.length === 1) {\r\n            this.props.sendMessage(`${sendingToMsg} 1 person`);\r\n        } else {\r\n            this.props.sendMessage(`${sendingToMsg} ${this.state.playing.length} people`);\r\n        }\r\n\r\n        return this.state.playing.forEach((userObj, i) => {\r\n            (function(i, userObj, roomCode, props){\r\n                setTimeout(function(){\r\n                    let metadata = props.userLookup[userObj?.username] || {};\r\n                    return props.sendWhisper({\r\n                        id: metadata['user-id'],\r\n                        username: userObj.username\r\n                    }, roomCode);\r\n                }, 1000 * (i+1));\r\n            }(i, userObj, this.state.roomCode, this.props));\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let startGameClass = 'btn btn-sm start-game';\r\n        if (this.playerCount() < this.props.game?.['Min players']){\r\n            startGameClass += ' disabled';\r\n        }\r\n\r\n        let inputRoomCode;\r\n        if (this.state.playing.length > 0 && this.props.settings?.enableRoomCode) {\r\n            inputRoomCode = (\r\n                <div className=\"input-group input-group-sm\">\r\n                    <input type=\"password\" name=\"room-code\" value={this.state.roomCode || ''} size=\"5\"\r\n                        autoComplete=\"new-password\"\r\n                        aria-autocomplete=\"none\"\r\n                        aria-describedby=\"room-code-label\"\r\n                        className=\"form-control room-code py-0\"\r\n                        onChange={this.handleRoomCodeChange}\r\n                        onFocus={this.handleRoomCodeFocus}\r\n                        placeholder=\"Code\"\r\n                        title=\"Paste Room Code Here\" />\r\n                    <button className=\"btn btn-sm btn-outline-secondary\" onClick={this.sendCodeToAll} title=\"Send Code to All Players\">&#10132;</button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={`card player-select-container rand-${this.state.randCount}`}>\r\n                <div className=\"card-header d-flex justify-content-between\">\r\n                    {this.renderStreamerSeatToggle()}\r\n                    <div className=\"fs-2 lh-sm game-name\">\r\n                        <b>{this.props.game?.name ?? \"TBD\"}</b>\r\n                        {this.renderPlayerCount()}\r\n                    </div>\r\n\r\n                    <div className=\"card-header-item d-flex align-items-center align-self-center flex-column\">\r\n                        {inputRoomCode}\r\n                        <button className={startGameClass} onClick={this.startGame} disabled={!this.canStartGame()}>\r\n                            Start Game\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body player-card-container\">\r\n                    <div ref={this.firstColumn} className='player-card-column interested'>\r\n                        <p className=\"player-card-column-header\">Interested</p>\r\n                        {this.state.interested.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                        {this.state.interested.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                    </div>\r\n\r\n                    <div className='player-card-column playing'>\r\n                        <p className=\"player-card-column-header\">Playing\r\n                        <button className=\"dice\" onClick={this.initRandomizePlayersAnimation}>\r\n                            <img src={dice} alt=\"dice icon\"/>\r\n                        </button>\r\n                        </p>\r\n                        {this.state.playing.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                        {this.state.playing.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                    </div>\r\n\r\n                    {/*<div className='player-card-column joined'>\r\n                        <p className=\"player-card-column-header\">Joined</p>\r\n                        {this.state.joined.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                        {this.state.joined.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                    </div>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: 0\n        }\n\n        this.getHistoryList = this.getHistoryList.bind(this);\n        this.getNextGameName = this.getNextGameName.bind(this);\n        this.getNextGamePartyPack = this.getNextGamePartyPack.bind(this);\n        this.hasNextGame = this.hasNextGame.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.printGame = this.printGame.bind(this);\n    }\n\n    getHistoryList = (history) => {\n        if (history.length === 0) {\n            return (\n                <span className=\"history-placeholder\" key='placeholder'>No games yet</span>\n            );\n        }\n        return (\n            <Droppable droppableId=\"historyList\">\n                {(provided) => (\n                    <span className=\"historyList\" {...provided.droppableProps} ref={provided.innerRef}>\n                        {history.map(({name, time}, index) => {\n                            return (\n                                <Draggable key={`${time}`} draggableId={`${time}`} index={index}>\n                                    {(provided) => (\n                                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                            {this.printGame(index)}\n                                        </li>\n                                    )}\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </span>\n                )}\n            </Droppable>\n        );\n    }\n\n    getNextGameName = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].name\n            : 'not yet decided';\n    }\n\n    getNextGamePartyPack = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].partyPack\n            : null;\n    }\n\n    handleOnDragEnd = (result) => {\n        if (!result.destination) return;\n\n        const _items = Array.from(this.props.history).fill();\n        _items[this.props.nextGameIdx] = true;\n        const [_reorderedItem] = _items.splice(result.source.index, 1);\n        _items.splice(result.destination.index, 0, _reorderedItem);\n\n        const newNextGameIdx = _items.findIndex(i => i);\n\n        const items = Array.from(this.props.history);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        this.props.changeGameOrder(items, newNextGameIdx);\n    }\n\n    hasNextGame = () => {\n        return this.props.history.length > this.props.nextGameIdx;\n    }\n\n    moveNextGameFwd = () => {\n        return this.props.changeNextGameIdx(1);\n    }\n\n    moveNextGameBack = () => {\n        return this.props.changeNextGameIdx(-1);\n    }\n\n    removeSelectedGameFromHistory = () => {\n        return this.props.removeSelectedGameFromHistory();\n    }\n\n    printGame = (idx) => {\n        if (idx === this.props.nextGameIdx) {\n            return (\n                <b>{this.props.history[idx].name}</b>\n            );\n        }\n        return this.props.history[idx].name;\n    }\n\n    render() {\n        let nextGame = this.hasNextGame();\n\n        let buttonPlayerSelect;\n        switch (this.props.requestMode) {\n            case 'game':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"open-seat-requests\" disabled={!nextGame} onClick={this.props.togglePlayerSelect}>\n                        OPEN SEAT REQUESTS\n                    </button>\n                )\n                break;\n            case 'seat':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"return-to-wheel\" onClick={this.props.togglePlayerSelect}>\n                        RETURN TO WHEEL\n                    </button>\n                )\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <div id=\"sidebar\" className={this.props.requestMode}>\n                <div className=\"card sidebar-panel\">\n                    <div className=\"card-header fw-bolder\">\n                        Up Next\n                    </div>\n                    <div className=\"card-body sidebar-up-next-panel\">\n                        <h5 className=\"card-title mb-2 fw-bolder\">\n                            <button className=\"cancel-game\" onClick={this.removeSelectedGameFromHistory}>X</button>\n                            {this.getNextGameName()}\n                        </h5>\n                        <div className=\"card-subtitle mb-2 fs-7 fst-italic text-light\"\n                            style={{'--bs-text-opacity': '0.75'}}>\n                            {this.getNextGamePartyPack()}\n                        </div>\n\n                        {buttonPlayerSelect}\n                    </div>\n                </div>\n\n                <div className=\"nav-wrapper py-2\">\n                    <button className=\"btn-sm move-next-game-back\" onClick={this.moveNextGameBack}> &#8678; </button>\n                    <button className=\"btn-sm move-next-game-fwd\" onClick={this.moveNextGameFwd}> &#8680; </button>\n                </div>\n\n                <div className=\"card sidebar-panel\">\n                    <DragDropContext onDragEnd={this.handleOnDragEnd}>\n                        <div className=\"card-header fw-bolder\">\n                            History\n                        </div>\n                        <div className=\"card-body sidebar-history-list-panel\">\n                            {this.getHistoryList(this.props.history)}\n                        </div>\n                    </DragDropContext>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {useEffect, useState} from 'react';\n\nconst WheelComponent = ({\n    segments,\n    segColors,\n    winningSegment,\n    onStart = ()=>{},\n    onSpinProgress,\n    onFinished,\n    primaryColor,\n    contrastColor,\n    buttonText,\n    isOnlyOnce = true,\n    size = 290,\n    upDuration = 100,\n    downDuration = 1000,\n    fontFamily = 'proxima-nova',\n    wheelHeight = 720,\n    wheelWidth = 600,\n    enableScrollTop = true,\n    multilineDelimiter = null\n}) => {\n    let currentSegment = '';\n    let currentSegmentLabel = '';\n    let isStarted = false;\n    const [isFinished, setFinished] = useState(false);\n    let timerHandle = 0;\n    const timerDelay = segments.length / 2;\n    let angleCurrent = 0;\n    let angleDelta = 0;\n    let canvasContext = null;\n    let maxSpeed = Math.PI / `${segments.length}`* 4;\n    const upTime = segments.length * upDuration;\n    const downTime = segments.length * downDuration;\n    let spinStart = 0;\n    let frames = 0;\n    const centerX = Math.round(wheelWidth/2);\n    const centerY = Math.round(wheelHeight/2.5);\n\n    useEffect(() => {\n        wheelInit();\n        if (enableScrollTop) {\n            setTimeout(() => {\n                window.scrollTo(0, 1);\n            }, 0);\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // const spinButton = new Path2D();\n    // TODO: fix scope issues with button\n    // canvasContext.beginPath();\n    // spinButton.arc(centerX, centerY, 50, 0, 2 * Math.PI, false);\n    // canvasContext.fill(rectangle);\n    // canvasContext.beginPath();\n    // canvasContext.arc(centerX, centerY, 50, 0, PI2, false);\n    // canvasContext.closePath();\n\n    const wheelInit = () => {\n        initCanvas();\n        wheelDraw();\n    };\n\n    const initCanvas = () => {\n        let canvas = document.getElementById('canvas');\n        if (navigator.appVersion.indexOf('MSIE') !== -1) {\n            canvas = document.createElement('canvas');\n            canvas.setAttribute('width', wheelWidth);\n            canvas.setAttribute('height', wheelHeight);\n            canvas.setAttribute('id', 'canvas');\n            document.getElementById('wheel').appendChild(canvas);\n        }\n        canvas.addEventListener('click', spin, false);\n        canvasContext = canvas.getContext('2d');\n    };\n    const spin = (event) => {\n        // if (!canvasContext.isPointInPath(spinButton, event.offsetX, event.offsetY)) {\n        //     return;\n        // }\n        isStarted = true;\n        if (timerHandle === 0) {\n            spinStart = new Date().getTime();\n            // maxSpeed = Math.PI / ((segments.length*2) + Math.random())\n            maxSpeed = Math.max(0.4, Math.PI / segments.length);\n            frames = 0;\n            timerHandle = setInterval(onTimerTick, timerDelay);\n        }\n        console.log({maxSpeed});\n        onStart();\n    };\n    const onTimerTick = () => {\n        frames++;\n        draw();\n        const duration = new Date().getTime() - spinStart;\n        let progress = 0;\n        let finished = false;\n        if (duration < upTime) {\n            progress = duration / upTime;\n            angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2);\n        } else {\n            if (winningSegment) {\n                if (currentSegment === winningSegment && frames > segments.length) {\n                    progress = duration / upTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                    progress = 1;\n                } else {\n                    progress = duration / downTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                }\n            } else {\n                progress = duration / downTime;\n                angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n            }\n            if (progress >= 1) {\n                finished = true;\n            }\n        }\n\n        angleCurrent += angleDelta;\n        while (angleCurrent >= Math.PI * 2) {\n            angleCurrent -= Math.PI * 2;\n        }\n        if (finished) {\n            setFinished(true);\n            onFinished(currentSegment);\n            clearInterval(timerHandle);\n            timerHandle = 0;\n            angleDelta = 0;\n        }\n        onSpinProgress && onSpinProgress({finished, progress, frames})\n    };\n\n    const wheelDraw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const draw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const drawSegment = (key, lastAngle, angle) => {\n        const ctx = canvasContext;\n        const value = segments[key];\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.arc(centerX, centerY, size, lastAngle, angle, false);\n        ctx.lineTo(centerX, centerY);\n        ctx.closePath();\n        ctx.fillStyle = segColors[key];\n        ctx.fill();\n        ctx.stroke();\n        ctx.save();\n        ctx.translate(centerX, centerY);\n        ctx.rotate((lastAngle + angle) / 2);\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.font = 'bold 1em ' + fontFamily;\n        // ctx.fillText(value.substr(0, 21), size / 2 + 20, 0);\n        if (multilineDelimiter && value.indexOf(multilineDelimiter) !== -1) {\n            ctx.fillText(value.substr(0, value.indexOf(multilineDelimiter)), size / 2 + 25, -3);\n            ctx.font = '0.75em ' + fontFamily;\n            ctx.fillText(value.substr(value.indexOf(multilineDelimiter) + 1, 21), size / 2 + 25, 11);\n        } else {\n            ctx.fillText(value.substr(0, 21), size / 2 + 25, 0)\n        }\n        ctx.restore();\n    };\n\n    const drawWheel = () => {\n        const ctx = canvasContext;\n        let lastAngle = angleCurrent;\n        const len = segments.length;\n        const PI2 = Math.PI * 2;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        ctx.font = '1em ' + fontFamily;\n        for (let i = 1; i <= len; i++) {\n            const angle = PI2 * (i / len) + angleCurrent;\n            drawSegment(i - 1, lastAngle, angle);\n            lastAngle = angle;\n        }\n\n        // Draw a center circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, 50, 0, PI2, false);\n        ctx.closePath();\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fill();\n        ctx.font = 'bold 1em ' + fontFamily;\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.textAlign = 'center';\n        ctx.fillText(buttonText || 'Spin', centerX, centerY + 3);\n        ctx.stroke();\n\n        // Draw outer circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, size, 0, PI2, false);\n        ctx.closePath();\n\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.stroke();\n    };\n\n    const drawNeedle = () => {\n        const ctx = canvasContext;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fileStyle = contrastColor || 'white';\n        ctx.beginPath();\n        ctx.moveTo(centerX + 20, centerY - 50);\n        ctx.lineTo(centerX - 20, centerY - 50);\n        ctx.lineTo(centerX, centerY - 70);\n        ctx.closePath();\n        ctx.fill();\n        const change = angleCurrent + Math.PI / 2;\n        let i = segments.length - Math.floor((change / (Math.PI * 2)) * segments.length) - 1;\n        if (i < 0) {\n            i = i + segments.length;\n        }\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.font = 'bold 1.5em ' + fontFamily;\n        currentSegment = segments[i];\n\n        // prevent displaying 'undefined' as the selected label\n        currentSegmentLabel = currentSegment || '';\n        if (isStarted) {\n            ctx.fillText(currentSegmentLabel, centerX + 10, centerY + size + 50);\n        }\n    };\n    const clear = () => {\n        const ctx = canvasContext;\n        ctx.clearRect(0, 0, wheelWidth, wheelHeight);\n    };\n\n    let pointerEvents = 'auto';\n    if (isFinished && isOnlyOnce) {\n        pointerEvents = 'none'\n    }\n\n    return (\n        <div id=\"wheel\" style={{position: 'relative'}}>\n            <canvas id=\"canvas\" width={wheelWidth} height={wheelHeight} style={{pointerEvents}}/>\n        </div>\n    );\n};\nexport default WheelComponent;\n","import {Component} from 'react';\nimport {Button, Modal} from 'react-bootstrap';\nimport ChatActivity, { ActivityStatus } from '../ChatActivity';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport CommandsList from '../CommandsList'\nimport GameRequest from '../components/GameRequest'\nimport MessageHandler from '../MessageHandler';\nimport OptionsMenu from './OptionsMenu';\nimport PlayerSelect from '../components/PlayerSelect';\nimport Sidebar from './Sidebar'\nimport WheelComponent from '../WheelComponent'; //'react-wheel-of-prizes'\nimport * as fakeStates from '../example-states';\n\nimport './MainScreen.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nconst randomColor = require('randomcolor');\n\n\nexport default class MainScreen extends Component {\n    constructor(props){\n        super(props);\n        this.chatActivity = new ChatActivity(this.props.channel)\n        let settings = {};\n        let isJestEnv = (process.env.JEST_WORKER_ID !== undefined);\n        try {\n            let savedSettings = localStorage.getItem('__settings');\n            if (!!savedSettings) {\n                settings = JSON.parse(savedSettings);\n                if (!isJestEnv) {\n                    console.log('Saved settings loaded!');\n                }\n            } else {\n                if (!isJestEnv) {\n                    console.log('No saved settings detected, using defaults.');\n                }\n            }\n        } catch (e) {\n            console.log('Unable to load or read saved settings, using defaults.');\n        }\n        this.state = {\n            allowGameRequests: true,\n            gameSelected: null,\n            messages: {},\n            colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\n            counter: 0,\n            history: [],\n            logUserMessages: false,\n            nextGameIdx: 0,\n            settings,\n            showCommandsModal: false,\n            showOptionsMenu: false,\n            showOptionsModal: false,\n            showPlayerSelect: false,\n            userLookup: {}\n        };\n\n        this.playerSelector = null;\n        this.messageHandler = null;\n\n        this.changeNextGameIdx = this.changeNextGameIdx.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.addGameRequest = this.addGameRequest.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.setNextGame = this.setNextGame.bind(this);\n        this.addGameToQueue = this.addGameToQueue.bind(this);\n        this.onWheelSpun = this.onWheelSpun.bind(this);\n        this.removeGame = this.removeGame.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.toggleAllowGameRequests = this.toggleAllowGameRequests.bind(this);\n        this.toggleCommandsModal = this.toggleCommandsModal.bind(this);\n        this.togglePlayerSelect = this.togglePlayerSelect.bind(this);\n        this.routePlayRequest = this.routePlayRequest.bind(this);\n        this.routeLeaveRequest = this.routeLeaveRequest.bind(this);\n        this.routeOpenQueueRequest = this.routeOpenQueueRequest.bind(this);\n        this.routeCloseQueueRequest = this.routeCloseQueueRequest.bind(this);\n        this.routeClearQueueRequest = this.routeClearQueueRequest.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.sendWhisper = this.sendWhisper.bind(this);\n        this.setMessageHandlerRef = this.setMessageHandlerRef.bind(this);\n        this.setPlayerSelectRef = this.setPlayerSelectRef.bind(this);\n\n        this.toggleUserMessageLogging = this.toggleUserMessageLogging.bind(this);\n        this.getLastState = this.getLastState.bind(this);\n        this.showUndoAvailable = this.showUndoAvailable.bind(this);\n    }\n\n    componentDidMount() {\n        this.onMount();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.history.length !== prevState.history.length ||\n            Object.keys(this.state.messages).length !== Object.keys(prevState.messages).length ||\n            this.state.counter !== prevState.counter\n        ) {\n            localStorage.setItem('__stateMainScreen', JSON.stringify(this.state));\n        }\n    }\n\n    onMount = () => {\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\n            if (window.location.hash.indexOf('playerselect=true') !== -1) {\n                this.setState(\n                    Object.assign({}, fakeStates.MainScreen, {\n                        showPlayerSelect: true\n                    })\n                );\n            } else {\n                this.setState(fakeStates.MainScreen);\n            }\n        }\n    }\n\n    changeNextGameIdx = (delta = 1) => {\n        if (this.state.nextGameIdx + delta > this.state.history.length) return false;\n        if (this.state.nextGameIdx + delta < 0) return false;\n        this.setState((state) => {\n            return {\n                nextGameIdx: state.nextGameIdx + delta\n            }\n        });\n        return true;\n    }\n\n    changeGameOrder = (history, nextGameIdx) => {\n        if (nextGameIdx > history.length) return false;\n        this.setState({\n            history,\n            nextGameIdx\n        });\n        return true;\n    }\n\n    moveNextGameFwd = () => {\n        return this.changeNextGameIdx();\n    }\n\n    moveNextGameBack = () => {\n        return this.changeNextGameIdx(-1);\n    }\n\n    addGameRequest = (gameObj, user, isSubRequest) => {\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: {\n                    ...this.state.messages,\n                    [gameObj.longName]: {\n                        ...gameObj,\n                        username: user,\n                        isSubRequest,\n                        time: Date.now(),\n                        locked: false,\n                        chosen: false\n                    }\n                },\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    toggleLock = (game) => {\n        const stateCopy = {...this.state.messages[game]};\n        stateCopy.locked = !stateCopy.locked\n\n        this.setState(() => {\n            return {\n                ...this.state,\n                messages: {\n                    ...this.state.messages,\n                    [game]: stateCopy\n                }\n            }\n        });\n    }\n\n    // @return: the number of games ahead of this one, after successfully inserting in queue\n    // (i.e. if it's the very next game, return 0; if there's one ahead, return 1; etc)\n    setNextGame = (gameObj) => {\n        let idx = this.state.nextGameIdx;\n\n        // insert next game at next up position by default, but\n        //      *after* any other manually inserted games\n        while (idx < this.state.history.length && this.state.history[idx]?.override) {\n            idx++;\n        }\n\n        this.setState((state) => {\n            return {\n                ...state,\n                history: [\n                    ...state.history.slice(0, Math.max(0, idx)),\n                    {\n                        ...gameObj,\n                        override: true,\n                        time: Date.now()\n                    },\n                    ...state.history.slice(idx)\n                ]\n            }\n        });\n\n        return idx - this.state.nextGameIdx;\n    }\n\n    addGameToQueue = (gameObj) => {\n        // update history + game card highlight color\n        this.setState((state) => {\n            return {\n                ...state,\n                gameSelected: gameObj,\n                history: [\n                    ...this.state.history,\n                    {\n                        ...gameObj,\n                        override: false\n                    }\n                ],\n                messages: {\n                    ...state.messages,\n                    [gameObj.longName]: {\n                        ...state.messages[gameObj.longName],\n                        chosen: true\n                    }\n                }\n            }\n        });\n    }\n\n    clearModal = () => {\n        this.setState({\n            gameSelected: null\n        });\n    }\n\n    getGamesList = () => {\n        return {\n            allowedGames: this.messageHandler?.state.allowedGames,\n            validGames: this.messageHandler?.state.validGames\n        }\n    }\n    getOptionsDebugMenu = () => {\n        return [{\n            label: 'Load Mock Game Requests',\n            onClick: () => {\n                return this.setState(\n                    Object.assign({}, fakeStates.MainScreen)\n                );\n            }\n        },{\n            label: 'Load Mock Game & Player Requests',\n            onClick: () => {\n                return this.setState(\n                    Object.assign({}, fakeStates.MainScreen, {\n                        showPlayerSelect: true\n                    }),\n                    () => {\n                        this.playerSelector?.setState(fakeStates.PlayerSelect);\n                    }\n                );\n            }\n        }, {\n            label: 'Log Debug Environment',\n            onClick: () => {\n                console.log('NODE_ENV:', process.env.NODE_ENV);\n                console.log('REACT_APP_REDIRECT_URI:', process.env.REACT_APP_REDIRECT_URI);\n            }\n        }, {\n            label: 'Toggle User Message Logging',\n            onClick: () => {\n                return this.toggleUserMessageLogging();\n            }\n        }, {\n            label: '-'\n        }, {\n            label: 'Reconnect to Chat',\n            onClick: () => {\n                return this.refreshTwitchClient();\n            }\n        }, {\n            label: 'Load Last State',\n            onClick: () => {\n                return this.getLastState();\n            }\n        }];\n    }\n\n    toggleUserMessageLogging = () => {\n        return this.setState(prevState => ({\n            logUserMessages: !prevState.logUserMessages\n        }), () => console.log('toggleUserMessageLogging | new state: ', this.state.logUserMessages?.toString()));\n    }\n\n    getLastState = () => {\n        let isJestEnv = (process.env.JEST_WORKER_ID !== undefined);\n        try {\n            let lastState = localStorage.getItem('__stateMainScreen');\n            if (!!lastState) {\n                lastState = JSON.parse(lastState);\n                this.setState(prevState => (\n                    Object.assign({}, prevState, {...lastState})\n                ), () => console.log('getLastState | resumed state: '/*, this.state*/));\n                if (!isJestEnv) {\n                    console.log('Last state loaded!');\n                }\n            } else {\n                if (!isJestEnv) {\n                    console.log('Last state not found.');\n                }\n            }\n        } catch (e) {\n            console.log('Error loading last state:', e);\n        }\n    }\n\n    getOptionsMenu = () => {\n        return [{\n            label: 'Reload Game List',\n            onClick: this.messageHandler?.reloadGameList\n        }];\n    }\n\n    onWheelSpun = (gameLongName) => {\n        const gameRequestObj = this.state.messages?.[gameLongName];\n        if (!gameRequestObj) return;\n\n        // send confirmation message in chat\n        const requester = gameRequestObj.username;\n\n        this.addGameToQueue(gameRequestObj);\n\n        // remove card unless it's locked\n        if (!this.state.messages[gameLongName].locked) {\n            setTimeout(() => {\n                this.removeGame(gameLongName);\n                this.clearModal();\n            }, 4000);\n        }\n\n        return this.chatActivity.getStatusPromise(requester).then((status) => {\n            let msg = \"\";\n            switch(status) {\n                case ActivityStatus.DISCONNECTED:\n                    msg = `/me ${gameRequestObj.name} just won the spin, but it doesn't seem like @${requester} is still around. Hope someone else wants to play!`\n                    break;\n\n                case ActivityStatus.ACTIVE:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin!`;\n                    break;\n\n                case ActivityStatus.IDLE:\n                default:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin! (I hope you're still around!)`;\n            }\n            return this.messageHandler.sendMessage(msg);\n        })\n\n    }\n\n    removeGame = (gameLongName) => {\n        const newMessageObj = {...this.state.messages};\n        delete newMessageObj[gameLongName];\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: newMessageObj,\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    removeSelectedGameFromHistory = () => {\n        let {history, nextGameIdx} = this.state;\n        if (!history[nextGameIdx]) {\n            return false;\n        }\n        let currGame = history[nextGameIdx];\n        delete history[nextGameIdx];\n        this.setState({\n            history: history.filter(h => !!h),\n            nextGameIdx: Math.max(-1, Math.min(nextGameIdx, history.length))\n        });\n        return currGame;\n    }\n\n    onMessage = (message, user, metadata) => {\n        this.chatActivity.updateLastMessageTime(user);\n        if (!this.state.userLookup[user] && metadata && metadata['user-id']) {\n            return this.setState(prevState => ({\n                userLookup: Object.assign({}, prevState.userLookup, {[user]: metadata})\n            }));\n        }\n    }\n\n    onSettingsUpdate = (nextSettings) => {\n        let {settings} = this.state;\n        localStorage.setItem('__settings', JSON.stringify(\n            Object.assign({}, settings, nextSettings)\n        ));\n        console.log('Settings saved:', settings);\n        return this.setState(prevState => ({\n            settings: Object.assign({}, settings, nextSettings)\n        }));\n    }\n\n    onUndoState = () => {\n        if (!this.state.showPlayerSelect) {\n            this.togglePlayerSelect();\n            this.moveNextGameBack();\n        }\n        return this.setState({\n            showOptionsMenu: false\n        }, () => {\n            return this.playerSelector?.onUndoState(this.state.undoState);\n        });\n    }\n\n    toggleAllowGameRequests = (allow=null) => {\n        let {allowGameRequests} = this.state;\n        if (allow !== null && typeof allow !== 'object') {\n            allowGameRequests = !allow;\n        }\n        this.setState((state) => {\n            return {\n                allowGameRequests: !allowGameRequests\n            }\n        })\n    }\n\n    toggleCommandsModal = () => {\n        this.setState((state) => {\n            return {\n                showCommandsModal: !state.showCommandsModal\n            }\n        })\n    }\n\n    toggleOptionsMenu = () => {\n        this.setState((state) => {\n            return {\n                showOptionsMenu: !state.showOptionsMenu\n            }\n        })\n    }\n\n    toggleOptionsModal = () => {\n        this.setState((state) => {\n            return {\n                showOptionsModal: !state.showOptionsModal\n            }\n        })\n    }\n\n    togglePlayerSelect = () => {\n        this.setState((state) => {\n            return {\n                showPlayerSelect: !state.showPlayerSelect\n            }\n        })\n    }\n\n    refreshTwitchClient = () => {\n        return this.messageHandler?.refreshTwitchClient();\n    }\n\n    routePlayRequest = (user, {sendConfirmationMsg = true, isPrioritySeat = false}) => {\n        const msg = this.state.showPlayerSelect\n            ? this.playerSelector?.handleNewPlayerRequest(user, {isPrioritySeat})\n            : 'sign-ups are currently closed; try again after this game wraps up!'\n\n        if (sendConfirmationMsg) {\n            this.messageHandler?.sendMessage(`/me @${user}, ${msg}`);\n        }\n    }\n\n    routeLeaveRequest = (user) => {\n        this.playerSelector?.removeUser(user);\n    }\n\n    routeOpenQueueRequest = () => {\n        this.setState((state) => {\n            return {\n                ...state,\n                showPlayerSelect: true\n            }\n        })\n        this.playerSelector?.openQueue();\n    }\n\n    routeCloseQueueRequest = () => {\n        this.playerSelector?.closeQueue();\n    }\n\n    routeClearQueueRequest = () => {\n        this.playerSelector?.clearQueue();\n    }\n\n    sendMessage = (msg) => {\n        // this feels so janky...but it works\n        return this.messageHandler?.sendMessage(msg);\n    }\n\n    // https://dev.twitch.tv/docs/api/reference/#send-whisper\n    // note: access token must include user:manage:whispers scope\n    // note: sending user must have a verified phone number\n    /**\n     * Sends a message to the user specified in the player object\n     * @param {object} player Contains the username and id of recipient\n     * @param {string} msg The message to be sent\n     * @returns Promise\n     */\n    sendWhisper = async (player, msg) => {\n        let requestParams = new URLSearchParams({\n            from_user_id: this.props.id,\n            to_user_id: player.id\n        });\n        let requestBody = {message: msg};\n        await this.props.validateToken();\n        return fetch(`https://api.twitch.tv/helix/whispers?${requestParams}`, {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                // Accept: 'application/vnd.twitchtv.v5+json',\n                Authorization: `Bearer ${this.props.access_token}`,\n                'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(async response => {\n            if (response.status !== 204) {\n                let errMsg = `Error ${response.status} sending to @${player.username}`;\n                // console.log(errMsg);\n                let errJson;\n                try {\n                    errJson = await response.json();\n                    if (errJson.error) {\n                        errMsg += `: ${errJson.error}`\n                    }\n                    errJson.player = player;\n                    console.log({errMsg, error: errJson});\n                } catch (e) {\n                    console.log({errMsg, error: e});\n                }\n                this.messageHandler?.sendMessage(`/me ${errMsg}`);\n                return Promise.resolve(errMsg);\n            }\n            let msg = `Code sent to @${player.username}`\n            this.messageHandler?.sendMessage(`/me ${msg}`);\n            return Promise.resolve(msg);\n        }).catch(error => {\n            let errMsg = `Error sending to @${player.username}, please check console for details.`;\n            console.log({errMsg, error});\n            this.messageHandler?.sendMessage(`/me ${errMsg}`);\n            return Promise.reject(errMsg);\n        });\n    }\n\n    showUndoAvailable = () => {\n        let {history, lastStartIdx, lastStartLongName, lastStartTimestamp, undoState} = this.state;\n        if (!undoState || (!lastStartIdx && lastStartIdx !== 0) || !lastStartLongName || !lastStartTimestamp) {\n            return false;\n        }\n        if (history.length > 0 && history[lastStartIdx].longName === lastStartLongName) {\n            return true;\n        }\n        return false;\n    }\n\n    startGame = (undoState) => {\n        if (this.state.showPlayerSelect) {\n            if (!undoState) {\n                undoState = this.playerSelector?.state;\n            }\n            let lastStartIdx = this.state.nextGameIdx;\n            let lastStartLongName = this.state.history[lastStartIdx]?.longName;\n            // console.log('Saving Undo State', {undoState});\n            this.togglePlayerSelect();\n            this.setState({\n                undoState,\n                lastStartIdx,\n                lastStartLongName,\n                lastStartTimestamp: (new Date()).toLocaleString()\n            });\n            this.moveNextGameFwd();\n            // console.log('State saved', {lastStartIdx, lastStartLongName});\n            return true;\n        }\n        return false;\n    }\n\n    setMessageHandlerRef = (ps) => {\n        this.messageHandler = ps;\n    };\n\n    setPlayerSelectRef = (mh) => {\n        this.playerSelector = mh;\n    };\n\n    renderCommandsModal = () => {\n        return (\n            <Modal\n                show={this.state.showCommandsModal}\n                onHide={()=>this.toggleCommandsModal(false)}\n                fullscreen={true}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n                <Modal.Header closeVariant=\"white\" closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Chat Commands\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <CommandsList hideHeader={true} />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n\n    renderGameChosenModal(gameObj) {\n        let confettiProps = {\n            force: 0.6,\n            duration: 3500,\n            particleCount: 100,\n            floorHeight: Math.max(window.outerWidth, window.outerHeight),\n            floorWidth: Math.max(window.outerWidth, window.outerHeight)\n        };\n        let requestedBy;\n        if (gameObj.username) {\n            requestedBy = (<h4>requested by @{gameObj.username}</h4>);\n        }\n        return (\n            <>\n                <div className=\"overlay fade-in-out\">\n                    <div className=\"confetti-wrapper\">\n                        <ConfettiExplosion {...confettiProps} />\n                    </div>\n                </div>\n                <div className=\"confetti-modal modal-game-chosen fade-in-out\" onClick={()=>this.removeGame(gameObj.longName)}>\n                    <h1>{gameObj.name}</h1>\n                    {requestedBy}\n                </div>\n            </>\n        );\n    }\n\n    renderOptionsModal() {\n        let {allowedGames, validGames} = this.messageHandler.state;\n        let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n            return Object.keys(packData[1]).map(gameData => {\n                let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n                return {\n                    id: gameId,\n                    game: gameData,\n                    pack: packData[0]\n                }\n            })\n        }))\n        // let gamesList = gamePackList.map(g => g.game);\n        console.log('gamePackList:', gamePackList, allowedGames);\n\n        return (\n            <Modal\n                show={this.state.showOptionsModal}\n                onHide={()=>this.toggleOptionsModal(false)}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Options\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Options</h4>\n                    <div className=\"options-list\">\n                        <ul>\n                            {gamePackList.map(({id, game, pack}, idx) => {\n                                // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n                                return (\n                                    <li key={id}>\n                                        <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n                                    </li>\n                                )}\n                            )}\n                        </ul>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button data-bs-dismiss=\"modal\">Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    render() {\n        const gameRequestArray = Object.keys(this.state.messages);\n\n\n        let gameSelectedModal;\n        if (this.state.showOptionsModal) {\n            gameSelectedModal = this.renderOptionsModal();\n        } else if (this.state.showCommandsModal) {\n            gameSelectedModal = this.renderCommandsModal();\n        } else if (this.state.gameSelected) {\n            gameSelectedModal = this.renderGameChosenModal(this.state.gameSelected);\n        }\n\n        let mainClassName = this.state.showPlayerSelect ? 'player-select' : 'game-select';\n\n        let subheading = this.state.showPlayerSelect ? (\n            <span className=\"subheading-player fade-in-delay\">\n                Type <b>!new</b> in {this.props.channel}'s chat if you want to join the next game\n            </span>\n        ) : (\n            <span\n                className={`subheading-game ${(this.state.allowGameRequests === true ? 'fade-in-delay' : 'fade-out')}`} \n                title={`Click to ${this.state.allowGameRequests === true ? 'disable' : 'enable'} game requests.`} \n                onClick={this.toggleAllowGameRequests}>\n                Type e.g. <b>\"!request Blather Round\"</b> in {this.props.channel}'s chat to add\n            </span>\n        );\n\n        let innerContent;\n        let rightColumn;\n\n        if (this.state.showPlayerSelect) {\n            innerContent = (\n                <PlayerSelect\n                    game={this.state.history?.[this.state.nextGameIdx]}\n                    sendMessage={this.sendMessage}\n                    sendWhisper={this.sendWhisper}\n                    settings={this.state.settings}\n                    startGame={this.startGame}\n                    ref={this.setPlayerSelectRef}\n                    userLookup={this.state.userLookup}\n                />\n            );\n        } else {\n            innerContent = gameRequestArray.map((gameName, i) =>\n                <GameRequest\n                    key={i}\n                    gameName={gameName}\n                    metadata={this.state.messages[gameName]}\n                    onDelete={this.removeGame}\n                    toggleLock={this.toggleLock.bind(gameName)}\n                    getActivity={this.chatActivity.getStatusPromise}\n                />\n            );\n            // reduce spin time for large number of game requests\n            let upDuration = (gameRequestArray.length < 5) ? 100 : (500 / gameRequestArray.length);\n            let downDuration = (gameRequestArray.length < 5) ? 1000 : (5000 / gameRequestArray.length);\n\n            rightColumn = (\n                <div className=\"right-column\" width=\"50px\">\n                    <div className=\"wheel-wrapper fade-in\">\n                         <WheelComponent\n                            key={this.state.counter}\n                            segments={gameRequestArray}\n                            segColors={this.state.colors}\n                            onFinished={this.onWheelSpun}\n                            isOnlyOnce={false}\n                            size={250}\n                            upDuration={upDuration}\n                            downDuration={downDuration}\n                            primaryColor={\"white\"}\n                            contrastColor={\"black\"}\n                            fontFamily={\"Arial\"}\n                            multilineDelimiter={' ('}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        let gamesList = this.getGamesList();\n\n        return (\n            <div className=\"main-screen-wrapper\">\n                <nav className=\"main-screen-nav navbar-dark\">\n                    <button className=\"btn btn-toggle-options float-end navbar-toggler\" type=\"button\" onClick={this.toggleOptionsMenu}>\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                </nav>\n                <div id=\"main-screen\" className={mainClassName}>\n                    <MessageHandler\n                        access_token={this.props.access_token}\n                        addGameRequest={this.addGameRequest}\n                        allowGameRequests={this.state.allowGameRequests}\n                        caniplayHandler={this.routePlayRequest}\n                        changeNextGameIdx={this.changeNextGameIdx}\n                        channel={this.props.channel}\n                        clearQueueHandler={this.routeClearQueueRequest}\n                        closeQueueHandler={this.routeCloseQueueRequest}\n                        logUserMessages={this.state.logUserMessages}\n                        messages={this.state.messages}\n                        modList={this.props.modList}\n                        onDelete={this.removeGame}\n                        onMessage={this.onMessage}\n                        openQueueHandler={this.routeOpenQueueRequest}\n                        playerExitHandler={this.routeLeaveRequest}\n                        previousGames={this.state.history.slice(0, this.state.nextGameIdx)}\n                        ref={this.setMessageHandlerRef}\n                        removeSelectedGameFromHistory={this.removeSelectedGameFromHistory}\n                        setNextGame={this.setNextGame}\n                        settings={this.state.settings}\n                        onSettingsUpdate={this.onSettingsUpdate}\n                        startGame={this.startGame}\n                        toggleAllowGameRequests={this.toggleAllowGameRequests}\n                        undoStart={this.onUndoState}\n                        upcomingGames={this.state.history.slice(this.state.nextGameIdx)}\n                    />\n                    <div className=\"left-column fade-in\">\n\n                        <h1>{this.state.showPlayerSelect ? 'Seat Requests' : 'Game Requests'}</h1>\n                        <h4>{subheading}</h4>\n\n                        <div className=\"left-column-body\">\n                            <Sidebar\n                                changeGameOrder={this.changeGameOrder}\n                                parentState={this.state}\n                                history={this.state.history}\n                                nextGameIdx={this.state.nextGameIdx}\n                                changeNextGameIdx={this.changeNextGameIdx}\n                                moveNextGameFwd={this.moveNextGameFwd}\n                                moveNextGameBack={this.moveNextGameBack}\n                                togglePlayerSelect={this.togglePlayerSelect}\n                                requestMode={this.state.showPlayerSelect ? 'seat' : 'game'}\n                                removeSelectedGameFromHistory={this.removeSelectedGameFromHistory}\n                            />\n                            <div className=\"left-column-inner-body\">\n                                {innerContent}\n                            </div>\n                        </div>\n                    </div>\n                    {rightColumn}\n                    {gameSelectedModal}\n                    <OptionsMenu\n                        gamesList={gamesList}\n                        onUndo={this.onUndoState}\n                        parentState={this.state}\n                        debugItems={this.getOptionsDebugMenu()}\n                        items={this.getOptionsMenu()}\n                        reloadGameList={this.messageHandler?.reloadGameList}\n                        refreshTwitchClient={this.messageHandler?.refreshTwitchClient}\n                        onHide={this.toggleOptionsMenu}\n                        onLogout={this.props.onLogout}\n                        onSettingsUpdate={this.onSettingsUpdate}\n                        settings={this.state.settings}\n                        toggleCommandsModal={this.toggleCommandsModal}\n                        showOptionsMenu={this.state.showOptionsMenu}\n                        showUndoAvailable={this.showUndoAvailable()} />\n                </div>\n            </div>\n        )\n    }\n}\n","import './load-spinner.css';\n\nfunction LoadSpinner(props) {\n    return <div className=\"lds-ripple\">\n        <div></div>\n        <div></div>\n    </div>;\n}\nexport default LoadSpinner;\n","import React, {Component} from 'react';\nimport MainScreen from './landing/MainScreen';\nimport LoadSpinner from './components/LoadSpinner';\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport queryString from 'query-string'\nconst fetch = require('node-fetch');\n\nclass AuthenticatedApp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: localStorage.getItem('__username'),\n            user_id: localStorage.getItem('__user_id'),\n            access_token: localStorage.getItem('__access_token'),\n            expires_in: localStorage.getItem('__expires_in') || 0,\n            expiry_time: localStorage.getItem('__expiry_time') || 0,\n            refresh_token: localStorage.getItem('__refresh_token'),\n            failed_login: false\n        }\n        this.getAuth = this.getAuth.bind(this);\n        this.getUsers = this.getUsers.bind(this);\n        this.logOut = this.logOut.bind(this);\n        this.onAuthenticated = this.onAuthenticated.bind(this);\n        this.promisedSetState = this.promisedSetState.bind(this);\n        this.refreshToken = this.refreshToken.bind(this);\n        this.validateToken = this.validateToken.bind(this);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (!this.state.access_token) {\n            return this.getAuth();\n        }\n        return this.getUsers(this.state.access_token).catch(e => {\n            console.error(e);\n            return this.getAuth(e);\n        });\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    async getAuth(e) {\n        if (e) {\n            console.error(e);\n        }\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__user_id');\n        localStorage.removeItem('__access_token');\n        localStorage.removeItem('__expires_in');\n        localStorage.removeItem('__expiry_time');\n        localStorage.removeItem('__refresh_token');\n\n        const queryParams = queryString.parse(this.props.location.search);\n        const requestParams = new URLSearchParams({\n            grant_type: 'authorization_code',\n            code: queryParams.code,\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n        return await fetch(`https://id.twitch.tv/oauth2/token?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        })\n        .then(r => r.json())\n        .then((oauth) => {\n            //console.log(oauth);  access_token, refresh_token, expires_in, scope ['...']\n            if (this._isMounted) {\n                if (!oauth.access_token) {\n                    return this.setState({\n                        failed_login: true\n                    });\n                }\n                return this.onAuthenticated(oauth);\n            }\n            return;\n        })\n        .catch(e => {\n            console.error(e);\n            if (this._isMounted) {\n                return this.setState({\n                    failed_login: true\n                });\n            }\n            return;\n        });\n    }\n\n    getUsers(access_token) {\n        return fetch('https://api.twitch.tv/helix/users', {\n            headers: {\n                'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                Authorization: `Bearer ${this.state.access_token}`\n            }\n        })\n        .then(r => r.json())\n        .then(userInfo => {\n            //console.log(userInfo); login [aka lowercase username?], display_name, profile_image_url, description\n            localStorage.setItem('__username', userInfo.data[0].login);\n            localStorage.setItem('__user_id', userInfo.data[0].id);\n            return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\n                headers: {\n                    'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                    Authorization: `Bearer ${access_token}`\n                }\n            })\n            .then(r => r.json())\n            .then(async modInfo => {\n                const modList = (!modInfo.data)\n                    ? null\n                    : modInfo.data.map((modObj) => (!modObj.user_name) ? null : modObj.user_name.toLowerCase()).filter(user => user);\n                if (this._isMounted) {\n                    return this.promisedSetState({\n                        username: userInfo.data[0].login,\n                        user_id: userInfo.data[0].id,\n                        modList\n                    });\n                }\n                return;\n            });\n        });\n    }\n\n    logOut() {\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__user_id');\n        localStorage.removeItem('__access_token');\n        localStorage.removeItem('__expires_in');\n        localStorage.removeItem('__expiry_time');\n        localStorage.removeItem('__refresh_token');\n\n        const requestParams = new URLSearchParams({\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            token: this.state.access_token,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n\n        return fetch(`https://id.twitch.tv/oauth2/revoke?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        }).then(() => {\n            return window.location.reload();\n        });\n    }\n\n    /**\n     * Handles the API response after authenticating\n     *\n     * @param {object} oauth The api response object (access_token, refresh_token, expires_in, scope)\n     * @returns Promise (via getUsers)\n     */\n    onAuthenticated(oauth) {\n        let expiry_time = Date.now() + oauth.expires_in;\n        localStorage.setItem('__access_token', oauth.access_token);\n        localStorage.setItem('__expires_in', oauth.expires_in);\n        localStorage.setItem('__expiry_time', expiry_time);\n        localStorage.setItem('__refresh_token', oauth.refresh_token);\n\n        this.setState({\n            access_token: oauth.access_token,\n            expires_in: oauth.expires_in,\n            expiry_time,\n            refresh_token: oauth.refresh_token\n        });\n\n        return this.getUsers(oauth.access_token);\n    }\n\n    promisedSetState = (newState) => new Promise(resolve => this.setState(newState, resolve));\n\n    async refreshToken() {\n        console.log('refreshToken');\n        let token = this.state.refresh_token;\n        const requestParams = new URLSearchParams({\n            grant_type: 'refresh_token',\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\n            refresh_token: token\n        });\n        return await fetch(`https://id.twitch.tv/oauth2/token?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Authorization: `OAuth ${token}`,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n        .then(r => r.json())\n        .then(this.onAuthenticated)\n        .catch(e => {\n            console.error(e);\n            return this.logOut();\n        });\n    }\n\n    async validateToken(token) {\n        if (!token) token = this.state.access_token;\n        return await fetch(`https://id.twitch.tv/oauth2/validate`, {\n            method: 'GET',\n            headers: {\n                Authorization: `OAuth ${token}`\n            }\n        })\n        .then(r => r.json())\n        .then(validateResp => {\n            if (validateResp.status === 401) {\n                console.log('calling this.refreshToken();...');\n                return this.refreshToken();\n            }\n            return Promise.resolve();\n        })\n        .catch(e => {\n            console.error(e);\n            if (e.status === 401) {\n                console.log('calling this.refreshToken();...');\n                return this.refreshToken();\n            }\n            return;\n        });\n    }\n\n    render() {\n        if (this.state.failed_login) {\n            return (<Redirect to=\"/login\"/>);\n        }\n        let mainContent = (\n            <h2>\n                <LoadSpinner />\n                <br />\n                Loading...\n            </h2>\n        );\n        let classNames = ['authenticated-app'];\n        if (this.state.username && this.state.modList) {\n            mainContent = (\n                <MainScreen\n                    channel={this.state.username}\n                    id={this.state.user_id}\n                    modList={this.state.modList}\n                    access_token={this.state.access_token}\n                    onLogout={this.logOut}\n                    validateToken={this.validateToken}\n                />\n            );\n        }\n\n        return (\n            <div id={classNames.join(' ')}>\n                {mainContent}\n            </div>\n        );\n    }\n}\n\nexport {AuthenticatedApp};\n\nexport default withRouter(AuthenticatedApp);\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './JackboxGameList.css';\nconst fetch = require('node-fetch');\n\nconst PartyPackCard = function (props) {\n  const gameList = Object.keys(props.metadata);\n  return (\n    <div className=\"partyPackCard\">\n      <p className=\"partyPackName\">{props.partyPackName} </p>\n      {gameList.map((gameName, i) =>\n        <GameCard\n          key={i}\n          gameName={gameName}\n          possibleMatches={props.metadata?.[gameName]?.Variants}\n        />\n      )}\n    </div>\n  );\n}\n\n\n// <p> {props.gameName} <p>\n\nconst GameCard = function(props) {\n  return (\n    <div className=\"mt-2 lh-sm\">\n      <p className=\"gameName\">{props.gameName} </p>\n      {props.possibleMatches.map((possibleMatch, i) =>\n        <li className=\"possibleGameMatch\" key={`${props.gameName}-${i}`}>!request {possibleMatch}</li>\n      )}\n    </div>\n  );\n}\n\nexport default class JackboxGameList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validGames: []\n    };\n  }\n\n  componentDidMount(props) {\n    fetch(rawJackboxGameList)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            validGames: YAML.parse(text)\n          };\n        });\n      })\n    }\n\n\n\n    render() {\n      const partyPackList = Object.keys(this.state.validGames);\n      return (\n        <div className=\"partyPackList\">\n          {partyPackList.map((partyPackName, i) =>\n            <PartyPackCard\n              key={i}\n              partyPackName={partyPackName}\n              metadata={this.state.validGames[partyPackName]}\n            />\n          )}\n        </div>\n      );\n    }\n\n}\n","import React, {Component} from 'react';\nimport {version} from '../package.json';\n\nimport './LoginScreen.css';\n\nconst scopes = 'chat:read chat:edit moderation:read user:manage:whispers';\nconst loginUrl = 'https://id.twitch.tv/oauth2/authorize'\n    + `?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}`\n    + `&response_type=code&scope=${scopes}`\n    + `&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\n\nclass LoginScreen extends Component {\n\n    render() {\n        return (\n            <div id=\"login-screen\" className=\"fade-in\">\n                <h1>Twitch Request Wheel</h1>\n                <hr />\n                <a href={loginUrl} className=\"btn btn-sm fs-2\">\n                    Log In With <strong>Twitch</strong>\n                </a>\n                <br/>\n                <small>\n                    {`v${version}`}\n                </small>\n            </div>\n        );\n    }\n}\n\nexport default LoginScreen;\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './OptionsList.css';\nconst fetch = require('node-fetch');\n\nexport default class OptionsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowedGames: [],\n            validGames: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawJackboxGameList)\n            .then(r => r.text())\n            .then(text => {\n                let validGames = YAML.parse(text);\n                // this.setState({validGames});\n                this.setAllowedGames(validGames);\n            });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.allowedGames || this.state.validGames.length === 0 || this.state.allowedGames.length === 0) return;\n        localStorage.setItem('__allowedGames', JSON.stringify(this.state.allowedGames));\n    }\n\n    getAllowedGames = function(validGames) {\n        let __allowedGames = localStorage.getItem('__allowedGames');\n        let allowedGames = (__allowedGames) ? JSON.parse(__allowedGames) : {};\n\n\n        // let output = {};\n        //\n        // // return list of valid games merged with existing allowedGames\n        // Object.entries(validGames).forEach(([pack, packGames]) => {\n        //     // get valid games within each pack\n        //     Object.keys(packGames).forEach(game => {\n        //         let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n        //         output[gameId] = (allowedGames[gameId])\n        //             ? allowedGames[gameId]\n        //             : {\n        //                 id: gameId,\n        //                 game,\n        //                 pack,\n        //                 enabled: true\n        //             };\n        //         output[gameId] = allowedGames[gameId];\n        //     });\n        // });\n        // return output;\n\n        // return list of valid games merged with existing allowedGames\n        return Object.assign({},\n            ...[].concat(\n                ...Object.entries(validGames).map(([pack, packGames]) => {\n                    // get valid games within each pack\n                    return Object.assign({},\n                        ...Object.keys(packGames).map(game => {\n                            let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n                            if (gameId in allowedGames && allowedGames[gameId].id !== undefined) {\n                                return {\n                                    [gameId]: allowedGames[gameId]\n                                };\n                            }\n                            // add entry with default value\n                            // console.log(`Adding ${gameId}`);\n                            return {\n                                [gameId]: {\n                                    id: gameId,\n                                    game,\n                                    pack,\n                                    enabled: true\n                                }\n                            }\n                        })\n                    );\n                })\n            )\n        )\n    }\n\n    setAllowedGames = function(validGames) {\n        let allowedGames = this.getAllowedGames(validGames);\n        this.setState({\n            allowedGames,\n            validGames\n        });\n        localStorage.setItem('__allowedGames', JSON.stringify(allowedGames));\n    }\n\n    onCheckHandler = ({target}) => {\n        let {id, checked} = target;\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                [id]: {\n                    ...prevState.allowedGames[id],\n                    enabled: checked\n                }\n            }\n        }));\n    }\n\n    onGroupCheckHandler = ({target}) => {\n        let {value, checked} = target;\n        // console.log({value, checked});\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === value);\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                ...Object.assign(\n                    ...packGames.map(g => ({\n                        [g.id]: {\n                            ...g,\n                            enabled: checked\n                        }\n                    })\n                ))\n            }\n        }));\n    }\n\n    renderGameCard = function(props) {\n        let {id, game, pack} = props;\n        let {allowedGames} = this.state;\n        let checked = allowedGames[id]?.enabled || false;\n        return (\n            <li className=\"gameName\" key={id}>\n                <input type=\"checkbox\" id={id} name={id} value={id} checked={checked} onChange={this.onCheckHandler} />\n                {' '}\n                <label htmlFor={id} title={`${pack}: ${game}`}>\n                    {game}\n                </label>\n            </li>\n        );\n    }\n\n    renderPackCheckbox = function(pack) {\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === pack);\n        let isChecked = packGames.filter(g => g.enabled === true).length === packGames.length;\n        return (\n            <input type=\"checkbox\" id={pack} name={pack} value={pack} checked={isChecked} onChange={this.onGroupCheckHandler} />\n        );\n    }\n\n    renderPartyPack = function (props) {\n        const gameList = Object.keys(props.metadata);\n\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === props.partyPackName);\n        let gamesEnabled = packGames.filter(g => g.enabled === true)\n        let isChecked = gamesEnabled.length === packGames.length;\n        let isIndeterminate = (!isChecked && gamesEnabled.length !== 0)\n        return (\n            <div className=\"partyPackCard\" key={props.key}>\n                <p className=\"partyPackName\">\n                    {props.partyPackName} <input type=\"checkbox\" id={props.partyPackName} name={props.partyPackName} value={props.partyPackName} checked={isChecked} onChange={this.onGroupCheckHandler} ref={el => el && (el.indeterminate = isIndeterminate)} />\n                </p>\n                <ul className=\"partyPackGameList\">\n                    {gameList.map(\n                        (gameName, i) => this.renderGameCard({\n                            game: gameName,\n                            id: `${props.partyPackName} ${gameName}`.replace(/\\W/ig, '_'),\n                            pack: props.partyPackName\n                        })\n                    )}\n                </ul>\n            </div>\n        );\n    }\n\n    render() {\n        let {validGames} = this.state;\n        const partyPackList = Object.keys(validGames);\n\n        return (\n            <div className=\"partyPackList\">\n                {partyPackList.map(\n                    (partyPackName, i) => this.renderPartyPack({\n                        key: i,\n                        partyPackName,\n                        metadata: this.state.validGames[partyPackName]\n                    })\n                )}\n            </div>\n        );\n    }\n\n}\n","import AuthenticatedApp from './AuthenticatedApp';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport CommandsList from './CommandsList';\nimport JackboxGameList from './JackboxGameList';\nimport LoginScreen from './LoginScreen';\nimport OptionsList from './OptionsList';\nimport React, {Component} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            theme: localStorage.getItem('__theme'),\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('hashchange', this.onHashChange);\n        this.onHashChange();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('hashchange', this.onHashChange);\n    }\n\n    onHashChange = () => {\n        // check for theme changes\n        let themeMatch = window.location.hash.match(/theme=(.+?)\\b/);\n        if (themeMatch !== null && themeMatch[1] !== this.state.theme) {\n            this.setState({\n                theme: themeMatch[1]\n            });\n        }\n    }\n\n    render() {\n\n        let classNames = ['App'];\n        if (window.location.hash.indexOf('commands') !== -1) {\n            classNames.push('justify-content-start');\n        }\n        if (window.location.hash.indexOf('legacy=true') !== -1) {\n            classNames.push('legacy');\n        }\n        if (this.state.theme) {\n            classNames.push(`theme theme-${this.state.theme}`);\n        }\n\n        return (\n            <HashRouter basename='/'>\n                <div className={classNames.join(' ')}>\n                    <Switch>\n                        <Route exact path=\"/login\" component={LoginScreen} />\n                        <Route exact path=\"/commands\" component={CommandsList}/>\n                        <Route exact path=\"/gamelist\" component={JackboxGameList}/>\n                        <Route exact path=\"/options\" component={OptionsList}/>\n                        <Route path=\"/\" component={AuthenticatedApp}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n\nexport {LoginScreen};\n","import { ReportHandler } from 'web-vitals';\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from 'react';\nimport {render} from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nrender(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}