{"version":3,"sources":["ChatActivity.js","images/lock.svg","components/GameRequest.js","JackboxGames.yaml","MessageHandler.js","landing/OptionsGameList.js","landing/OptionsMenu.js","example-states.js","images/dice.svg","images/star.svg","components/PlayerSelect.js","landing/Sidebar.js","WheelComponent.js","landing/MainScreen.js","AuthenticatedApp.js","JackboxGameList.js","LoginScreen.js","OptionsList.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","ActivityStatus","ChatActivity","channel","updateLastMessageTime","user","lastMessageTimes","Date","now","minsSinceLastChatMessage","Math","floor","getChatters","then","r","json","res","chatters","moderators","viewers","staff","admins","global_mods","catch","e","this","getStatusPromise","bind","includes","GameRequest","props","deleteRequest","onDelete","gameName","getFormattedTimeDiff","timestamp","unit","timeDiff","getTooltipContent","Tooltip","id","className","state","metadata","username","getTooltipActivityStatusClassName","activityStatus","toggleLock","updateStatus","getActivity","setState","time","lockClassName","locked","cardStatus","chosen","OverlayTrigger","placement","overlay","onEnter","name","partyPack","replace","src","lock","alt","onClick","type","Component","tmi","GAME_REQUEST_COMMAND","easterEggRequests","RequestName","Response","Variants","MessageHandler","componentDidMount","client","getTwitchClient","on","onMessage","connect","getGameList","rawJackboxGameList","componentWillUnmount","disconnect","console","log","yamlGameList","text","validGames","YAML","parse","warn","identity","password","access_token","channels","options","skipUpdatingEmotesets","updateEmotesetsTimer","isModOrBroadcaster","modList","toLowerCase","checkForMiscCommands","message","startsWith","sendMessage","process","requestedGame","trim","gameObj","findGame","requests","Object","values","messages","map","m","sort","join","toggleAllowGameRequests","prevSelectedGame","removeSelectedGameFromHistory","changeNextGameIdx","upcomingGames","length","numGamesAhead","setNextGame","caniplayHandler","sendConfirmationMsg","redeemingUser","isPrioritySeat","exitingUser","playerExitHandler","clearQueueHandler","openQueueHandler","closeQueueHandler","startGame","requestEntry","partyPackName","partyPackObj","entries","formalGameName","longName","checkForGameCommand","target","tags","msg","self","cleanedMsg","requestedBy","allowGameRequests","prevRequestedGameName","allowedGames","filter","g","game","pack","enabled","addGameRequest","previousGames","previous","i","upcoming","say","setAllowedGames","reloadGameList","gameList","PropTypes","func","OptionsGameList","getAllowedGames","__allowedGames","localStorage","getItem","JSON","assign","concat","packGames","keys","gameId","undefined","setItem","stringify","onCheckHandler","checked","prevState","onGroupCheckHandler","value","renderGameCard","onChange","htmlFor","title","renderPackCheckbox","isChecked","renderPartyPack","gamesEnabled","isIndeterminate","Accordion","Item","eventKey","key","Header","Body","ref","el","indeterminate","partyPackList","flush","OptionsMenu","createDebugMenuItems","items","idx","label","test","Dropdown","Divider","href","createMenuItems","listItemClassNames","listItemClassName","split","n","btnClassNames","btnClassName","Button","variant","toggleGameList","showGameList","debugItems","optionMenuItems","debugMenuItems","Offcanvas","onHide","show","showOptionsMenu","closeButton","closeVariant","Title","as","onLogout","Collapse","in","gamesList","drop","Toggle","size","version","Menu","array","object","bool","stateMainScreen","statePlayerSelect","PlayerSelect","updateColumnSizes","columnWidth","firstColumn","current","offsetWidth","handleNewPlayerRequest","column","isQueueOpen","updateColumnForUser","interested","uObj","playing","joined","userObj","newColumn","removeUser","iObj","pObj","jObj","clearQueue","openQueue","closeQueue","playerCount","streamerSeat","toggleStreamerSeat","canStartGame","randomizePlayers","randIdx","randUsername","numPlayersToAdd","min","randIdxArray","randUsernameArray","random","push","renderPlayerCard","curColumn","star","style","maxWidth","renderStreamerSeatToggle","role","defaultChecked","renderPlayerCount","React","createRef","window","location","hash","indexOf","fakeStates","addEventListener","removeEventListener","startGameClass","disabled","dice","Sidebar","getHistoryList","history","droppableId","provided","droppableProps","innerRef","index","draggableId","draggableProps","dragHandleProps","printGame","placeholder","getNextGameName","hasNextGame","nextGameIdx","getNextGamePartyPack","handleOnDragEnd","result","destination","_items","Array","from","fill","splice","source","_reorderedItem","newNextGameIdx","findIndex","reorderedItem","changeGameOrder","moveNextGameFwd","moveNextGameBack","buttonPlayerSelect","nextGame","requestMode","togglePlayerSelect","onDragEnd","WheelComponent","segments","segColors","winningSegment","onStart","onSpinProgress","onFinished","primaryColor","contrastColor","buttonText","isOnlyOnce","upDuration","downDuration","fontFamily","wheelHeight","wheelWidth","enableScrollTop","multilineDelimiter","currentSegment","currentSegmentLabel","isStarted","useState","isFinished","setFinished","timerHandle","timerDelay","angleCurrent","angleDelta","canvasContext","maxSpeed","PI","upTime","downTime","spinStart","frames","centerX","round","centerY","useEffect","wheelInit","setTimeout","scrollTo","initCanvas","wheelDraw","canvas","document","getElementById","navigator","appVersion","createElement","setAttribute","appendChild","spin","getContext","event","getTime","setInterval","onTimerTick","draw","duration","progress","finished","sin","clearInterval","clear","drawWheel","drawNeedle","drawSegment","lastAngle","angle","ctx","save","beginPath","moveTo","arc","lineTo","closePath","fillStyle","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","fileStyle","change","clearRect","pointerEvents","position","width","height","randomColor","MainScreen","delta","counter","stateCopy","override","slice","max","addGameToQueue","gameSelected","clearModal","getGamesList","messageHandler","getOptionsDebugMenu","showPlayerSelect","playerSelector","getOptionsMenu","onWheelSpun","gameLongName","gameRequestObj","requester","removeGame","chatActivity","status","newMessageObj","currGame","h","allow","toggleOptionsMenu","toggleOptionsModal","showOptionsModal","routePlayRequest","routeLeaveRequest","routeOpenQueueRequest","routeCloseQueueRequest","routeClearQueueRequest","setMessageHandlerRef","ps","setPlayerSelectRef","mh","colors","count","luminosity","hue","confettiProps","force","particleCount","floorHeight","outerWidth","outerHeight","floorWidth","gamePackList","packData","gameData","Modal","centered","Footer","gameSelectedModal","gameRequestArray","renderOptionsModal","renderGameChosenModal","innerContent","rightColumn","mainClassName","subheading","parentState","AuthenticatedApp","failed_login","getAuth","getUsers","logOut","_isMounted","error","removeItem","queryParams","queryString","search","requestParams","URLSearchParams","grant_type","code","client_id","client_secret","redirect_uri","method","headers","Accept","oauth","Authorization","userInfo","data","login","modInfo","modObj","user_name","token","reload","to","mainContent","withRouter","PartyPackCard","possibleMatches","GameCard","possibleMatch","JackboxGameList","loginUrl","LoginScreen","OptionsList","App","classNames","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.1eefd115.chunk.js","sourcesContent":["const fetch = require('node-fetch');\n\nexport const ActivityStatus = {\n    ACTIVE: 1,\n    IDLE: 2,\n    DISCONNECTED: 3\n};\n\nconst MAX_IDLE_TIME_MINUTES = 10;\n\nexport default class ChatActivity {\n    constructor(channel) {\n        this.channel = channel;\n        this.lastMessageTimes = {};\n        this.getStatusPromise = this.getStatusPromise.bind(this);\n    }\n\n    updateLastMessageTime = (user) => {\n        this.lastMessageTimes = {\n            ...this.lastMessageTimes,\n            [user]: Date.now()\n        };\n    }\n\n    minsSinceLastChatMessage = (user) => {\n        return Math.floor((Date.now() - this.lastMessageTimes[user]) / 60000);\n    }\n\n    // returns a PROMISE, don't just assign the value again like a dweeb. :/\n    //\n    // not just active chatters - anyone with an active connnection to twitch chat.\n    // (thank the lord almighty for free open proxy sites. CORB is annoying.)\n    // note that results are fairly heavily cached, and the API may break\n    // eventually (is undocumented), but this is what twitch themselves\n    // uses to display the list of people connected to chat - best we got.\n    getChatters = () => {\n        return fetch(`https://thingproxy.freeboard.io/fetch/https://tmi.twitch.tv/group/user/${this.channel}/chatters`)\n            .then(r => r.json())\n            .then(res => {\n                if (!res || !res.chatters) return null;\n                return [\n                  ...res.chatters.moderators,\n                  ...res.chatters.viewers,\n                  ...res.chatters.staff,\n                  ...res.chatters.admins,\n                  ...res.chatters.global_mods\n                ];\n            }).catch((e) => {\n                // don't normally like swallowing errors like this,\n                // but it's a noncritical feature built off an\n                // undocumented api, sooo....\n                return null;\n            });\n    }\n\n    async getStatusPromise(user) {\n        // broadcaster always counts as active\n        if (user === this.channel) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        // sent a chat message in the last X mins?\n        if (this.lastMessageTimes[user] && this.minsSinceLastChatMessage(user) < MAX_IDLE_TIME_MINUTES) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        return this.getChatters().then((chatters) =>\n            !chatters || !chatters.includes(user)\n                ? ActivityStatus.DISCONNECTED\n                : ActivityStatus.IDLE\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/lock.6857c469.svg\";","import {ActivityStatus} from '../ChatActivity';\nimport React, {Component} from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport lock from '../images/lock.svg';\n\nimport './GameRequest.css';\n\nclass GameRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeDiff: 0,\n            activityStatus: null\n        };\n\n        this.deleteRequest = this.deleteRequest.bind(this);\n        this.getFormattedTimeDiff = this.getFormattedTimeDiff.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.updateStatus = this.updateStatus.bind(this);\n    }\n\n    deleteRequest = (e) => {\n        this.props.onDelete(this.props.gameName)\n    }\n\n    getFormattedTimeDiff = (timestamp) => {\n        let unit = \"minute\";\n        let timeDiff = Math.floor((Date.now() - timestamp) / 60000);\n        if (timeDiff === 0) {\n            return \"just now\";\n        }\n        if (timeDiff >= 60) {\n            unit = \"hour\";\n            timeDiff = Math.floor(timeDiff / 60);\n\n            if (timeDiff >= 24) {\n                unit = \"day\";\n                timeDiff = Math.floor(timeDiff / 24);\n            }\n        }\n        return `${timeDiff} ${unit}${timeDiff === 1 ? \"\" : \"s\"} ago`;\n    };\n\n    getTooltipContent = (props) => (\n        <Tooltip id=\"game-request-tooltip\" {...props}>\n            <span className=\"tooltipText\">\n                Requested {this.state.timeDiff} by {this.props.metadata.username}\n                <span className={`status ${this.getTooltipActivityStatusClassName()}`} />\n            </span>\n        </Tooltip>\n    );\n\n    getTooltipActivityStatusClassName = () => {\n        switch (this.state.activityStatus) {\n            case ActivityStatus.ACTIVE:\n                return \"active\";\n            case ActivityStatus.IDLE:\n                return \"idle\";\n            case ActivityStatus.DISCONNECTED:\n                return \"disconnected\";\n            default:\n                // no data back yet; don't show an activity status indicator at all\n                return '';\n        }\n    }\n\n    toggleLock = () => {\n        return this.props.toggleLock(this.props.gameName);\n    }\n\n    updateStatus = async () => {\n        // return Date.now();\n        let activityStatus;\n        try {\n            activityStatus = await this.props.getActivity(this.props.metadata.username);\n            return this.setState({\n                timeDiff: this.getFormattedTimeDiff(this.props.metadata.time),\n                activityStatus\n            });\n        } catch(err) {\n            throw err;\n        }\n    }\n\n    render() {\n        const lockClassName = this.props.metadata.locked ? 'lock locked' : 'lock unlocked';\n        const cardStatus = this.props.metadata.chosen ? 'chosen' : 'pending';\n\n        return (\n            <OverlayTrigger\n                placement=\"left\"\n                overlay={this.getTooltipContent}\n                onEnter={this.updateStatus}>\n                <div className=\"game-request-wrapper fade-in\">\n                \t<div id=\"baseDiv\" className={`game-request ${cardStatus}`}>\n                \t\t<div className=\"game-request-body\">\n                \t\t    <div className=\"text-truncate\">\n                                <b>\n                                    {this.props.metadata.name}\n                                </b>\n                                {' '}\n                                <small>\n                                    {\n                                        !!this.props.metadata.partyPack &&\n                                        `(${this.props.metadata.partyPack.replace('Party Pack', 'Pack')})`\n                                    }\n                                </small>\n                            </div>\n                \t\t\t<div className=\"options\">\n                \t\t\t\t<img src={lock} alt=\"lock\" className={lockClassName} onClick={this.toggleLock} />\n                \t\t\t\t<button type='button' className=\"deleteButton\" onClick={this.deleteRequest}>X</button>\n                \t\t\t</div>\n                \t\t</div>\n                \t</div>\n                </div>\n            </OverlayTrigger>\n        );\n    }\n}\nexport default GameRequest;\n","export default __webpack_public_path__ + \"static/media/JackboxGames.0a574a49.yaml\";","import {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport YAML from 'yaml'\nconst fetch = require('node-fetch');\nconst tmi = require('tmi.js');\n\nconst GAME_REQUEST_COMMAND = \"!request\";\n\nconst easterEggRequests = [\n    {\n        RequestName: 'Affection',\n        Response: 'there there, it\\'s going to be okay. VirtualHug',\n        Variants: [\n            'a friend',\n            'a hug',\n            'a kiss',\n            'friend',\n            'hug',\n            'kiss',\n            'affection',\n            'a shoulder to cry on',\n            'shoulder to cry on'\n        ]\n    }, {\n        RequestName: 'Goose',\n        Response: 'please don\\'t taunt the wheel. Honk.',\n        Variants: [\n            'goose',\n            'honk',\n            'meow',\n            'mrow',\n            'woof',\n            'bark',\n            'nugs',\n            'chicken nugs'\n        ]\n    }, {\n        RequestName: 'Lewmon',\n        Response: 'please don\\'t taunt the wheel. sirfar3Lewmon sirfar3Lewmon sirfar3Lewmon',\n        Variants: [\n            'lewmon',\n            'sirfar3lewmon'\n        ]\n    }, {\n        RequestName: 'DoTheDew',\n        Response: 'dewinbDTD dewinbDance dewinbGIR dewinbDance dewinbGIR dewinbDance dewinbDTD',\n        Variants: [\n            'dothedew',\n            'dewinblack'\n        ]\n    }\n];\n\nexport default class MessageHandler extends Component {\n    static get propTypes() {\n        return {\n            toggleAllowGameRequests: PropTypes.func,\n        };\n    }\n    static get defaultProps() {\n        return {\n            toggleAllowGameRequests: () => void 0,\n        };\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            client: null,\n            allowedGames: {},\n            validGames: []\n        };\n        this.getTwitchClient = this.getTwitchClient.bind(this);\n        this.isModOrBroadcaster = this.isModOrBroadcaster.bind(this);\n        this.checkForMiscCommands = this.checkForMiscCommands.bind(this);\n        this.findGame = this.findGame.bind(this);\n        this.checkForGameCommand = this.checkForGameCommand.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n    }\n\n    componentDidMount = (props) => {\n        const client = this.getTwitchClient(this.props);\n        this.client = client;\n\n        client.on('message', this.onMessage);\n        client.connect();\n\n        return this.getGameList(rawJackboxGameList, client);\n    }\n\n    componentWillUnmount = (props) => {\n        try {\n            if (this.client) {\n                this.client.disconnect();\n            }\n        } catch(e) {\n            console.log('Error', e);\n        }\n    }\n\n    getGameList = async (yamlGameList, client) => {\n        return await fetch(yamlGameList)\n            .then(r => r.text())\n            .then(text => {\n                return this.setState({\n                    client,\n                    validGames: YAML.parse(text)\n                });\n            }).catch(e => {\n                console.warn(e);\n            });\n    }\n\n    getTwitchClient = (props) => {\n        return new tmi.client({\n            identity: {\n                username: props.channel,\n                password: props.access_token\n            },\n            channels: [\n                props.channel\n            ],\n            options: {\n                skipUpdatingEmotesets: true,\n                updateEmotesetsTimer: 0\n            }\n        });\n    }\n\n    isModOrBroadcaster = (username) => {\n        return (this.props.channel === username || this.props.modList.includes(username.toLowerCase()));\n    }\n\n    // returns true iff a known command was found & responded to\n    checkForMiscCommands = (message, username) => {\n        //========= general =========\n        if (message.startsWith(\"!gamelist\") || message.startsWith(\"!gameslist\")) {\n            this.sendMessage(`/me @${username}, click here for a list of valid Jackbox games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n            return true;\n        }\n\n        if (message === \"!wheelcommands\") {\n            this.sendMessage(`/me @${username}, click here to read about all supported commands: https://github.com/asukii314/twitch-request-wheel/blob/master/src/Commands.yaml`);\n            return true;\n        }\n\n        if (message.startsWith(\"!whichpack\")) {\n            const requestedGame = message.replace(\"!whichpack\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to look up the party pack for: e.g. !whichpack TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                this.sendMessage(`/me @${username}, ${gameObj.name} is a ${gameObj.partyPack} game.`);\n            }\n            return true;\n        }\n\n        //========= list requested games =========\n        if (message === \"!onthewheel\" || message === \"!gamesqueued\" || message === \"!listrequests\") {\n            let pipe = ' ⋆ '; // TODO: allow delimiter to be user configurable\n            let requests = Object.values(this.props.messages).map(m => m.name).sort();\n            try {\n                this.sendMessage(`/me @${username}, Requested: ${requests.join(pipe)}.`);\n            } catch(e) {\n                this.sendMessage(`/me @${username}, Sorry, there are waaaaaaaaay too many games to list and something went wrong. :p`);\n                console.log(e);\n            }\n\n            // TODO: handle if over character count\n            // TODO: determine if this is actually necessary\n            /* this.sendMessage(`/me @${username}, NOTE: There are a loooooot of games to list, but hopefully this next message won't break:`);\n            this.sendMessage(`/me @${username}, Requested: ${requests}.`);\n            requestsArr.reduce((list, str) => {\n                const last = list[list.length-1];\n                if (last && last.total + str.length <= 480) {\n                    last.total += str.length;\n                    last.words.push(str);\n                } else {\n                    list.push({\n                        total: str.length,\n                        words: [str]\n                    });\n                }\n                return list;\n            }, [])\n            .map(({ words }) => words.join(pipe));*/\n            return true;\n        }\n\n        //========= enable / disable requests =========\n        if ( message.startsWith(\"!enablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(true);\n            this.sendMessage(`/me @${username}, requests have now been enabled! Type \"!request\" followed by the game you want to play.`);\n            return true;\n        }\n        if ( message.startsWith(\"!disablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(false);\n            this.sendMessage(`/me @${username}, requests have now been disabled.`);\n            return true;\n        }\n\n        //========= remove selected game =========\n\n        if ( message.startsWith(\"!removegame\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            let prevSelectedGame = this.props?.removeSelectedGameFromHistory()\n            if (prevSelectedGame === false) {\n                this.sendMessage(`/me @${username}, a game must be selected before you can remove it.`);\n            } else {\n                this.sendMessage(`/me @${username}, the next game, ${prevSelectedGame.name}, has been removed.`);\n            }\n            return true;\n        }\n\n        //========= advance next game =========\n        if (message === \"!advancenextgame\" || message === \"!nextgamefwd\" || message === \"!nextgameforward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(1)) {\n                if (this.props.upcomingGames.length > 0) {\n                    // console.log(this.props.upcomingGames)\n                    this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n                } else {\n                    this.sendMessage(`/me @${username}, the next game has been marked as \"TBD\".`);\n                }\n            } else {\n                this.sendMessage(`/me @${username}, there are no more games in the queue to advance to!`);\n            }\n            return true;\n        }\n\n        //========= advance prev game =========\n        if (message === \"!nextgameback\" || message === \"!nextgamebackward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(-1)) {\n                this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n            } else {\n                this.sendMessage(`/me @${username}, there are no previous games in the queue to go back to!`);\n            }\n            return true;\n        }\n\n        //========= set next game =========\n        if (message.startsWith(\"!setnextgame\") || message.startsWith(\"!redeemgame\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use the ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} command.`);\n                return true;\n            }\n\n            const requestedGame = message.replace(\"!setnextgame\", \"\").replace(\"!redeemgame\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to insert in the queue: for example, ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                const numGamesAhead = this.props.setNextGame(gameObj);\n                if (numGamesAhead === 0) {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted as the next game in the queue.`);\n                } else {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted in the queue following ${numGamesAhead} other manual game request${numGamesAhead > 1 ? 's' : ''}.`);\n                }\n\n            }\n            return true;\n        }\n\n        //========= player queue management =========\n        if (message === \"!caniplay\" || message === \"!new\" || (message === \"!dew\" && this.props?.channel?.toLowerCase() === 'dewinblack')) {\n            this.props?.caniplayHandler(username, {\n                sendConfirmationMsg: message === \"!caniplay\"\n            });\n            return true;\n        }\n\n        if (message.startsWith(\"!priorityseat\") || message.startsWith(\"!redeemseat\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const redeemingUser = message.replace(\"!priorityseat\", \"\").replace(\"!redeemseat\", \"\").replace(\"@\", \"\").trim();\n            if (redeemingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who has redeemed a priority seat in the next game: for example, ${message.startsWith(\"!p\") ? \"!priorityseat\" : \"!redeemseat\"} @asukii314`);\n                return true;\n            }\n            this.props?.caniplayHandler(redeemingUser, {\n                sendConfirmationMsg: true,\n                isPrioritySeat: true\n            });\n            return true;\n        }\n\n        if ( message.startsWith(\"!removeuser\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const exitingUser = message.replace(\"!removeuser\", \"\").replace(\"@\", \"\").trim();\n            if (exitingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who will be removed in the next game: for example, !removeuser @dewinblack`);\n                return true;\n            }\n            this.props?.playerExitHandler(exitingUser);\n            return true;\n        }\n\n        if (message === \"!leave\" || message === \"!murd\") {\n            this.props?.playerExitHandler(username);\n            return true;\n        }\n\n        if (message === \"!clear\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!open\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!clearopen\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!close\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.closeQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!startgame\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.startGame()) {\n                this.sendMessage(`/me @${username}, the game has been started.`);\n            } else {\n                this.sendMessage(`/me @${username}, the game was already started.`);\n            }\n            return true;\n        }\n\n        if (message.startsWith(\"!redeem\")) {\n            this.sendMessage(`/me @${username}, this command is no longer supported: please specify either !redeemgame or !redeemseat.`);\n            return true;\n        }\n        return;\n    }\n\n    findGame = (requestedGame, username) => {\n        // easter egg responses\n        for (let requestEntry of easterEggRequests) {\n            if (requestEntry?.Variants?.includes(requestedGame)) {\n                this.sendMessage(`/me @${username} ${requestEntry.Response}`);\n                return null;\n            }\n        }\n        // check against games\n        for (let partyPackName in this.state.validGames) {\n            const partyPackObj = this.state.validGames[partyPackName]\n            for (const [formalGameName, metadata] of Object.entries(partyPackObj)) {\n                if (metadata?.Variants?.includes(requestedGame)) {\n                    return {\n                        name: formalGameName,\n                        longName: `${formalGameName} (${partyPackName})`,\n                        partyPack: partyPackName,\n                        ...metadata\n                    };\n                }\n            }\n        }\n        this.sendMessage(`/me @${username}, ${requestedGame} could not be found in the list of valid Jackbox games. Click here for a list of valid games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n        return;\n    }\n\n    checkForGameCommand = (message, username) => {\n        if (!message.startsWith(GAME_REQUEST_COMMAND)) return;\n\n        const requestedGame = message.replace(GAME_REQUEST_COMMAND, \"\").trim();\n\n        if (requestedGame === \"\") {\n            this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\n            return null;\n        }\n\n        return this.findGame(requestedGame, username);\n    }\n\n    onMessage = (target, tags, msg, self) => {\n        if (self) return;\n        this.props.onMessage(msg, tags.username, tags)\n\n        if (msg.trim() === \"!nextgame\") {\n            if (this.props.upcomingGames && this.props.upcomingGames.length > 0) {\n                let upcoming = this.props.upcomingGames[0].name;\n                if (this.props.upcomingGames.length > 1) {\n                    upcoming += `, followed by ${this.props.upcomingGames[1].name}`\n                    for (let i = 2; i < this.props.upcomingGames.length; i++) {\n                        upcoming += `, and ${this.props.upcomingGames[i].name}`\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the next game up is ${upcoming}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, the next game hasn't been decided yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        if (msg.trim() === \"!lastgame\") {\n            if (this.props.previousGames && this.props.previousGames.length > 0) {\n                let previous = this.props.previousGames[0].name;\n                if (this.props.previousGames.length > 1) {\n                    previous += `, followed by ${this.props.previousGames[1].name}`\n                    for (let i = 2; i < this.props.previousGames.length; i++) {\n                        previous += `, and ${this.props.previousGames[i].name}`\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the last game played was ${previous}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, no games have been played yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        const cleanedMsg = msg.trim().toLowerCase();\n        if (this.checkForMiscCommands(cleanedMsg, tags.username)) return;\n        const gameObj = this.checkForGameCommand(cleanedMsg, tags.username);\n        if (!gameObj) return;\n\n        if (this.props.messages[gameObj.longName]) {\n            let requestedBy = (this.props.messages[gameObj.longName].username === tags.username) ? 'yourself, silly' : this.props.messages[gameObj.longName].username;\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has already been requested by ${requestedBy}!`);\n            return;\n        }\n\n        if (this.props.allowGameRequests !== true) {\n            this.sendMessage(`/me @${tags.username}, game requests are currently paused at the moment, please try again later.`);\n            return;\n        }\n\n\n        let prevRequestedGameName = null;\n        for (const metadata of Object.values(this.props.messages)) {\n            if (metadata.username === tags.username) {\n                prevRequestedGameName = metadata.longName;\n                break;\n            }\n        }\n\n        if (prevRequestedGameName) {\n            if (this.props.channel === tags.username) {\n                this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue. Your previous game request(s) weren't deleted, since you have special broadcaster privilege :P`);\n            } else {\n                this.props.onDelete(prevRequestedGameName);\n                this.sendMessage(`/me @${tags.username}, your previous request of ${prevRequestedGameName} has been replaced with ${gameObj.name}.`);\n            }\n        } else if (Object.values(this.state.allowedGames).filter(g => g.game === gameObj.name && g.pack === gameObj.partyPack && g.enabled !== true).length === 1) {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} is not currently enabled and was not added to the queue.`);\n            return;\n        } else {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue.`);\n        }\n\n        this.props.addGameRequest(gameObj, tags.username);\n        return;\n    }\n\n    sendMessage = (msg) => {\n        this.state.client.say(this.props.channel, msg)\n    }\n\n    setAllowedGames = (allowedGames) => {\n        this.setState({\n            allowedGames\n        });\n    }\n    reloadGameList = () => {\n        let gameList = `${rawJackboxGameList}?${Date.now()}`;\n        return this.getGameList(gameList, this.client);\n    }\n\n    render() {\n        return null;\n    }\n}\n","import {Component} from 'react';\nimport {Accordion} from 'react-bootstrap';\nimport YAML from 'yaml'\nimport rawJackboxGameList from '../JackboxGames.yaml';\nimport './OptionsGameList.css';\nconst fetch = require('node-fetch');\n\nclass OptionsGameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowedGames: [],\n            validGames: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawJackboxGameList)\n            .then(r => r.text())\n            .then(text => {\n                let validGames = YAML.parse(text);\n                // this.setState({validGames});\n                this.setAllowedGames(validGames);\n            });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.allowedGames || this.state.validGames.length === 0 || this.state.allowedGames.length === 0) return;\n        localStorage.setItem('__allowedGames', JSON.stringify(this.state.allowedGames));\n    }\n\n    getAllowedGames = function(validGames) {\n        let __allowedGames = localStorage.getItem('__allowedGames');\n        let allowedGames = (__allowedGames) ? JSON.parse(__allowedGames) : {};\n\n\n        // let output = {};\n        //\n        // // return list of valid games merged with existing allowedGames\n        // Object.entries(validGames).forEach(([pack, packGames]) => {\n        //     // get valid games within each pack\n        //     Object.keys(packGames).forEach(game => {\n        //         let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n        //         output[gameId] = (allowedGames[gameId])\n        //             ? allowedGames[gameId]\n        //             : {\n        //                 id: gameId,\n        //                 game,\n        //                 pack,\n        //                 enabled: true\n        //             };\n        //         output[gameId] = allowedGames[gameId];\n        //     });\n        // });\n        // return output;\n\n        // return list of valid games merged with existing allowedGames\n        return Object.assign({},\n            ...[].concat(\n                ...Object.entries(validGames).map(([pack, packGames]) => {\n                    // get valid games within each pack\n                    return Object.assign({},\n                        ...Object.keys(packGames).map(game => {\n                            let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n                            if (gameId in allowedGames && allowedGames[gameId].id !== undefined) {\n                                return {\n                                    [gameId]: allowedGames[gameId]\n                                };\n                            }\n                            // add entry with default value\n                            // console.log(`Adding ${gameId}`);\n                            return {\n                                [gameId]: {\n                                    id: gameId,\n                                    game,\n                                    pack,\n                                    enabled: true\n                                }\n                            }\n                        })\n                    );\n                })\n            )\n        )\n    }\n\n    setAllowedGames = function(validGames) {\n        let allowedGames = this.getAllowedGames(validGames);\n        this.setState({\n            allowedGames,\n            validGames\n        });\n        localStorage.setItem('__allowedGames', JSON.stringify(allowedGames));\n    }\n\n    onCheckHandler = ({target}) => {\n        let {id, checked} = target;\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                [id]: {\n                    ...prevState.allowedGames[id],\n                    enabled: checked\n                }\n            }\n        }));\n    }\n\n    onGroupCheckHandler = ({target}) => {\n        let {value, checked} = target;\n        // console.log({value, checked});\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === value);\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                ...Object.assign(\n                    ...packGames.map(g => ({\n                        [g.id]: {\n                            ...g,\n                            enabled: checked\n                        }\n                    })\n                ))\n            }\n        }));\n    }\n\n    renderGameCard = function(props) {\n        let {id, game, pack} = props;\n        let {allowedGames} = this.state;\n        let checked = allowedGames[id]?.enabled || false;\n        return (\n            <li className=\"gameName\" key={id}>\n                <input type=\"checkbox\" id={id} name={id} value={id} checked={checked} onChange={this.onCheckHandler} />\n                {' '}\n                <label htmlFor={id} title={`${pack}: ${game}`}>\n                    {game}\n                </label>\n            </li>\n        );\n    }\n\n    renderPackCheckbox = function(pack) {\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === pack);\n        let isChecked = packGames.filter(g => g.enabled === true).length === packGames.length;\n        return (\n            <input type=\"checkbox\" id={pack} name={pack} value={pack} checked={isChecked} onChange={this.onGroupCheckHandler} />\n        );\n    }\n\n    renderPartyPack = function (props) {\n        const gameList = Object.keys(props.metadata);\n\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === props.partyPackName);\n        let gamesEnabled = packGames.filter(g => g.enabled === true)\n        let isChecked = gamesEnabled.length === packGames.length;\n        let isIndeterminate = (!isChecked && gamesEnabled.length !== 0)\n        return (\n            <Accordion.Item eventKey={props.key} className=\"party-pack-card\" key={props.key}>\n                <Accordion.Header className=\"bg-darker text-white\">\n                    {props.partyPackName}\n                </Accordion.Header>\n                <Accordion.Body>\n                    <div className=\"float-end\">\n                        <small>Select All</small>\n                        {` `}\n                        <input type=\"checkbox\" id={props.partyPackName} name={props.partyPackName} value={props.partyPackName} checked={isChecked} onChange={this.onGroupCheckHandler} ref={el => el && (el.indeterminate = isIndeterminate)} />\n                    </div>\n                    <ul className=\"party-pack-game-list\">\n                        {gameList.map(\n                            (gameName, i) => this.renderGameCard({\n                                game: gameName,\n                                id: `${props.partyPackName} ${gameName}`.replace(/\\W/ig, '_'),\n                                pack: props.partyPackName\n                            })\n                        )}\n                    </ul>\n                </Accordion.Body>\n            </Accordion.Item>\n        );\n    }\n\n    render() {\n        let {validGames} = this.state;\n        const partyPackList = Object.keys(validGames);\n\n        return (\n            <Accordion id=\"options-game-list\" className=\"accordion-dark\" flush>\n                {partyPackList.map(\n                    (partyPackName, i) => this.renderPartyPack({\n                        key: i,\n                        partyPackName,\n                        metadata: this.state.validGames[partyPackName]\n                    })\n                )}\n            </Accordion>\n        );\n    }\n\n}\nexport default OptionsGameList;\n","import {Component} from 'react';\nimport {Button, Collapse, Dropdown, Offcanvas} from 'react-bootstrap';\nimport OptionsGameList from './OptionsGameList';\nimport PropTypes from 'prop-types';\nimport {version} from '../../package.json';\n\nimport './OptionsMenu.css';\n\nexport default class OptionsMenu extends Component {\n    static get propTypes() {\n        return {\n            debugItems: PropTypes.array,\n            gamesList: PropTypes.object,\n            items: PropTypes.array,\n            onHide: PropTypes.func,\n            onLogout: PropTypes.func,\n            showOptionsMenu: PropTypes.bool\n        };\n    }\n    static get defaultProps() {\n        return {\n            debugItems: [],\n            gamesList: {\n                allowedGames: null,\n                validGames: null\n            },\n            items: [],\n            onHide: () => void 0,\n            onLogout: () => void 0,\n            showOptionsMenu: false\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGameList: false\n        }\n        this.toggleGameList = this.toggleGameList.bind(this);\n    }\n\n    /*\n\n    Expects the following object schema:\n    {\n        label: string,  // required\n        onClick: func,\n        listItemClassName: string,\n        btnClassName: string\n    }\n\n\n     */\n    createDebugMenuItems = (items) => {\n        if (!items) {\n            return [];\n        }\n        return items.map((i, idx) => {\n            if (!i || !i.label) {\n                return null;\n            }\n            if (/^[-]+$/i.test(i.label)) {\n                return (\n                    <Dropdown.Divider eventKey={i.idx} />\n                );\n            }\n            return (\n                <Dropdown.Item\n                    eventKey={i.label}\n                    href={i.href || null}\n                    key={`${idx} ${i.label}`}\n                    onClick={i.onClick || null}\n                >\n                    {i.label}\n                </Dropdown.Item>\n            );\n        }).filter(i => i);\n    }\n\n    createMenuItems = (items) => {\n        if (!items) {\n            return [];\n        }\n        return items.map(i => {\n            if (!i.label) {\n                return null;\n            }\n            let liClassName = (!i.listItemClassName)\n                ? i.label.trim().toLowerCase().split(' ').join('-')\n                : i.listItemClassName;\n            let listItemClassNames = ['mb-1 fs-4 d-grid text-start', liClassName || null].filter(n => n).join(' ');\n            let btnClassNames = ['btn', i.btnClassName || null].filter(n => n).join(' ');\n            return (\n                <li className={listItemClassNames} key={i.label}>\n                    <Button variant=\"link\" className={btnClassNames} onClick={i.onClick || null}>\n                        {i.label}\n                    </Button>\n                </li>\n            );\n        }).filter(i => i);\n    }\n\n    toggleGameList = () => {\n        this.setState((state) => {\n            return {\n                showGameList: !state.showGameList\n            }\n        })\n    }\n\n    // renderGameOptions() {\n    //     let {allowedGames, validGames} = this.props.gamesList;\n    //     let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n    //         return Object.keys(packData[1]).map(gameData => {\n    //             let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n    //             return {\n    //                 id: gameId,\n    //                 game: gameData,\n    //                 pack: packData[0]\n    //             }\n    //         })\n    //     }))\n    //\n    //\n    //\n    //     // let gamesList = gamePackList.map(g => g.game);\n    //     console.log('gamePackList:', gamePackList, allowedGames);\n    //\n    //     return (\n    //         <Modal\n    //             show={this.state.showOptionsModal}\n    //             onHide={()=>this.toggleOptionsModal(false)}\n    //             size=\"lg\"\n    //             aria-labelledby=\"contained-modal-title-vcenter\"\n    //             centered>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title id=\"contained-modal-title-vcenter\">\n    //                     Options\n    //                 </Modal.Title>\n    //             </Modal.Header>\n    //             <Modal.Body>\n    //                 <div className=\"options-list\">\n    //                     <ul>\n    //                         {gamePackList.map(({id, game, pack}, idx) => {\n    //                             // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n    //                             return (\n    //                                 <li key={id}>\n    //                                     <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n    //                                 </li>\n    //                             )}\n    //                         )}\n    //                     </ul>\n    //                 </div>\n    //             </Modal.Body>\n    //             <Modal.Footer>\n    //                 <Button data-bs-dismiss=\"modal\">Close</Button>\n    //             </Modal.Footer>\n    //         </Modal>\n    //     );\n    // }\n\n    render() {\n        let {debugItems, items} = this.props;\n        let optionMenuItems = this.createMenuItems(items);\n        let debugMenuItems = this.createDebugMenuItems(debugItems);\n\n        return (\n            <Offcanvas\n                id=\"options-menu\"\n                onHide={this.props.onHide}\n                placement=\"end\"\n                show={this.props.showOptionsMenu}>\n                <Offcanvas.Header closeButton closeVariant=\"white\">\n                    <Offcanvas.Title as=\"h2\" className=\"fw-bold\">\n                        Options\n                    </Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <ul className=\"options-menu-items list-unstyled pb-3 px-4\">\n                        <li className=\"mb-1 fs-4 d-grid text-start\">\n                            <Button variant=\"link\" className=\"btn logout\" onClick={this.props.onLogout}>\n                                Logout\n                            </Button>\n                        </li>\n                        <hr />\n                        {optionMenuItems}\n                        <li className=\"mb-1 fs-4 d-grid text-start d-none\">\n                            <Button variant=\"link\" className=\"btn reload-game-list\" onClick={this.props.reloadGameList}>\n                                Refresh Game List\n                            </Button>\n                        </li>\n                        <li className=\"mb-1 fs-4 d-grid text-start d-none\">\n                            <Button variant=\"link\" className=\"btn game-list\" onClick={this.toggleGameList}>\n                                Game List\n                            </Button>\n                        </li>\n                        <Collapse in={this.state.showGameList}>\n                            <div>\n                                <OptionsGameList\n                                    allowedGames={this.props.gamesList?.allowedGames}\n                                    validGames={this.props.gamesList?.validGames} />\n                            </div>\n                        </Collapse>\n                    </ul>\n\n                    <div id=\"options-debug-menu-items\" className=\"position-absolute bottom-0 start-0 end-0 pb-3 text-center\">\n                        <Dropdown id=\"dropdown-debug-menu-items\" drop=\"up-centered\" variant=\"link\">\n                            <Dropdown.Toggle id=\"dropdown-debug-menu-items-toggle\" size=\"sm\" variant=\"link\">\n                                {`version ${version}`}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu variant=\"dark\">\n                                <Dropdown.Header>\n                                    Debug Options\n                                </Dropdown.Header>\n                                {debugMenuItems}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n        );\n    }\n}\n","const stateMainScreen = {\n    \"gameSelected\": null,\n    \"messages\": {\n        \"Survive The Internet (Party Pack 4)\": {\n            \"name\": \"Survive The Internet\",\n            \"longName\": \"Survive The Internet (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"survive\",\n                \"survive the internet\",\n                \"sti\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628112883959,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash (Any Version)\": {\n            \"name\": \"Quiplash\",\n            \"longName\": \"Quiplash (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"quiplash\",\n                \"quip\",\n                \"ql\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628113055677,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"You Don't Know Jack (Party Pack 5)\": {\n            \"name\": \"You Don't Know Jack\",\n            \"longName\": \"You Don't Know Jack (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ydkj 2\",\n                \"ydkj fs\",\n                \"ydkjfs\",\n                \"you dont know jack 2\",\n                \"you don't know jack 2\",\n                \"you don't know jack full stream\",\n                \"you don't know jack full steam\",\n                \"you don't know jack: full stream\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114634007,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Mad Verse City (Party Pack 5)\": {\n            \"name\": \"Mad Verse City\",\n            \"longName\": \"Mad Verse City (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"mvc\",\n                \"madverse\",\n                \"mad verse\",\n                \"madversecity\",\n                \"mad verse city\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114645263,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Monster Seeking Monster (Party Pack 4)\": {\n            \"name\": \"Monster Seeking Monster\",\n            \"longName\": \"Monster Seeking Monster (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 7,\n            \"Variants\": [\n                \"msm\",\n                \"monster seeking monster\",\n                \"monster seeking monsters\",\n                \"monsters seeking monsters\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114646991,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Blather 'Round (Party Pack 7)\": {\n            \"name\": \"Blather 'Round\",\n            \"longName\": \"Blather 'Round (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 2,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"blather\",\n                \"blather round\",\n                \"blather 'round\",\n                \"blatherround\",\n                \"blatheround\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114733155,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Talking Points (Party Pack 7)\": {\n            \"name\": \"Talking Points\",\n            \"longName\": \"Talking Points (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"talking points\",\n                \"talkingpoints\",\n                \"talk points\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114749438,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic Phone (Standalone)\": {\n            \"name\": \"Gartic Phone\",\n            \"longName\": \"Gartic Phone (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min players\": 4,\n            \"Max players\": 30,\n            \"Variants\": [\n                \"gartic phone\",\n                \"garticphone\",\n                \"garlic phone\",\n                \"garlicphone\",\n                \"gartic\",\n                \"garlic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114761558,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Drawful (Any Version)\": {\n            \"name\": \"Drawful\",\n            \"longName\": \"Drawful (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"drawful\",\n                \"drawfull\",\n                \"draw full\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114769626,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Words on Stream (Standalone)\": {\n            \"name\": \"Words on Stream\",\n            \"longName\": \"Words on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"words on stream\",\n                \"word on stream\",\n                \"words stream\",\n                \"word stream\",\n                \"words\",\n                \"wos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114772430,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic on Stream (Standalone)\": {\n            \"name\": \"Gartic on Stream\",\n            \"longName\": \"Gartic on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"gartic on stream\",\n                \"garlic on stream\",\n                \"garlic stream\",\n                \"gartic stream\",\n                \"gos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114776310,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"The Devils and the Details (Party Pack 7)\": {\n            \"name\": \"The Devils and the Details\",\n            \"longName\": \"The Devils and the Details (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"devils\",\n                \"devils in details\",\n                \"devils and details\",\n                \"devils & details\",\n                \"devil's in details\",\n                \"devil's and details\",\n                \"devil's & details\",\n                \"devils in the details\",\n                \"devils and the details\",\n                \"devils & the details\",\n                \"devil's in the details\",\n                \"devil's and the details\",\n                \"devil's & the details\",\n                \"the devils in the details\",\n                \"the devils and the details\",\n                \"the devils & the details\",\n                \"the devil's in the details\",\n                \"the devil's and the details\",\n                \"the devil's & the details\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114937776,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Fibbage: Enough About You (Party Pack 4)\": {\n            \"name\": \"Fibbage: Enough About You\",\n            \"longName\": \"Fibbage: Enough About You (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"eay\",\n                \"enough about you\",\n                \"feay\",\n                \"fibbage eay\",\n                \"fibbage: eay\",\n                \"fibbage enough about you\",\n                \"fibbage: enough about you\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114942915,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Champ'd Up (Party Pack 7)\": {\n            \"name\": \"Champ'd Up\",\n            \"longName\": \"Champ'd Up (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"champd\",\n                \"champed\",\n                \"champd up\",\n                \"champ'd\",\n                \"champ'd up\",\n                \"champed up\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114981572,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Civic Doodle (Party Pack 4)\": {\n            \"name\": \"Civic Doodle\",\n            \"longName\": \"Civic Doodle (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"civic doodle\",\n                \"civicdoodle\",\n                \"civic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628115017116,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 2 (Party Pack 6)\": {\n            \"name\": \"Trivia Murder Party 2\",\n            \"longName\": \"Trivia Murder Party 2 (Party Pack 6)\",\n            \"partyPack\": \"Party Pack 6\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp2\",\n                \"tmp 2\",\n                \"trivia murder party 2\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628118545790,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash 3 (Party Pack 7)\": {\n            \"name\": \"Quiplash 3\",\n            \"longName\": \"Quiplash 3 (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ql3\",\n                \"ql 3\",\n                \"quip 3\",\n                \"quip3\",\n                \"quiplash 3\",\n                \"quiplash3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628121075780,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 1 (Party Pack 3)\": {\n            \"name\": \"Trivia Murder Party 1\",\n            \"longName\": \"Trivia Murder Party 1 (Party Pack 3)\",\n            \"partyPack\": \"Party Pack 3\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp1\",\n                \"tmp 1\",\n                \"trivia murder party 1\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628122719930,\n            \"locked\": false,\n            \"chosen\": false\n        }\n    },\n    \"colors\": [\n        \"#75a5e5\",\n        \"#847cef\",\n        \"#74aee0\",\n        \"#86efed\",\n        \"#63bbd8\",\n        \"#c9d8ff\",\n        \"#97ecef\",\n        \"#bcefff\",\n        \"#9caff4\",\n        \"#b9a4f2\",\n        \"#9fbbfc\",\n        \"#affffc\",\n        \"#a1bef4\",\n        \"#7ee7fc\",\n        \"#97c1ef\",\n        \"#a4a4fc\",\n        \"#a4a5f4\",\n        \"#b7f1ff\",\n        \"#79bdfc\",\n        \"#6885dd\",\n        \"#98e1f2\",\n        \"#aac1ff\",\n        \"#a583fc\",\n        \"#8991e5\",\n        \"#6edddd\",\n        \"#a7b7ef\",\n        \"#74e2e8\",\n        \"#9c9af9\",\n        \"#9dd5f2\",\n        \"#6a73ed\",\n        \"#b19df9\",\n        \"#88eaea\",\n        \"#6b91ef\",\n        \"#9de1f9\",\n        \"#7691fc\",\n        \"#d0c4fc\",\n        \"#c9d7ff\",\n        \"#84a7ed\",\n        \"#809bfc\",\n        \"#63d0d8\",\n        \"#b8cbfc\",\n        \"#a3a0ff\",\n        \"#b4f4f7\",\n        \"#9c9efc\",\n        \"#8ae8f7\",\n        \"#7985ea\",\n        \"#7876e8\",\n        \"#cfc2fc\",\n        \"#bfcfff\",\n        \"#92a9f4\",\n        \"#d0c2fc\",\n        \"#adc9f7\",\n        \"#767ce0\",\n        \"#95a1f9\",\n        \"#a286f4\",\n        \"#8085ed\",\n        \"#c4c9fc\",\n        \"#7c8ff9\",\n        \"#7079f9\",\n        \"#aaa5ff\",\n        \"#8db7e8\",\n        \"#9e94e8\",\n        \"#a5ffff\",\n        \"#76ade8\",\n        \"#a9f5fc\",\n        \"#a0a5ff\",\n        \"#9cbffc\",\n        \"#8fa2e8\",\n        \"#8eeeff\",\n        \"#88ccf7\",\n        \"#b0f2f4\",\n        \"#8e7fef\",\n        \"#aef9f8\",\n        \"#8beef9\",\n        \"#7a8ef4\",\n        \"#c7c4fc\",\n        \"#7b87f2\",\n        \"#7b77ea\",\n        \"#859be5\",\n        \"#7191e8\",\n        \"#aadaef\",\n        \"#b1aaf7\",\n        \"#80bff7\",\n        \"#95e0f4\",\n        \"#a3e5ed\",\n        \"#91a1f2\",\n        \"#c0c4f9\",\n        \"#7a90f4\",\n        \"#85def2\",\n        \"#87f2ee\",\n        \"#cac6ff\",\n        \"#76c3f7\",\n        \"#c2dcfc\",\n        \"#a2a2f9\",\n        \"#ccd7ff\",\n        \"#978fef\",\n        \"#8d77e5\",\n        \"#bad0fc\",\n        \"#ccf7ff\"\n    ],\n    \"counter\": 26,\n    \"history\": [\n        {\n            \"name\": \"Zeeple Dome\",\n            \"longName\": \"Zeeple Dome (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"zeeple\",\n                \"zeeple dome\",\n                \"zeepledome\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114757634,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Split the Room\",\n            \"longName\": \"Split the Room (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"split the room\",\n                \"splittheroom\",\n                \"split room\",\n                \"room split\",\n                \"split\",\n                \"str\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114989864,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Fibbage 3\",\n            \"longName\": \"Fibbage 3 (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"fibbage 3\",\n                \"fibbage3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114666823,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Trivia Murder Party\",\n            \"longName\": \"Trivia Murder Party (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp\",\n                \"trivia murder party\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628106145996,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        }\n    ],\n    \"nextGameIdx\": 0,\n    \"showPlayerSelect\": false\n};\n\nconst statePlayerSelect = {\n    \"interested\": [\n        {\n            \"username\": \"player6\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player3\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player9\"\n        },\n        {\n            \"username\": \"dcpesses\"\n        }\n    ],\n    \"playing\": [\n        {\n            \"username\": \"player1\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player7\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player8\"\n        },\n        {\n            \"username\": \"player5\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player2\",\n            \"isPrioritySeat\": true\n        }\n    ],\n    \"joined\": [],\n    \"streamerSeat\": true,\n    \"isQueueOpen\": true,\n    \"columnWidth\": 634\n}\n\nexport {\n    stateMainScreen as MainScreen,\n    statePlayerSelect as PlayerSelect\n};\n","export default __webpack_public_path__ + \"static/media/dice.021a7158.svg\";","export default __webpack_public_path__ + \"static/media/star.de82f684.svg\";","import React, { Component } from 'react';\r\nimport * as fakeStates from '../example-states';\r\n\r\nimport dice from '../images/dice.svg';\r\nimport star from '../images/star.svg';\r\n\r\nimport './PlayerSelect.css';\r\n\r\nexport default class PlayerSelect extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.firstColumn = React.createRef();\r\n        this.state = {\r\n            interested: [],\r\n            playing: [],\r\n            joined: [],\r\n            streamerSeat: false,\r\n            isQueueOpen: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\r\n            this.setState(fakeStates.PlayerSelect);\r\n        }\r\n        this.updateColumnSizes();\r\n        window.addEventListener(\"resize\", this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    updateColumnSizes = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                columnWidth: this.firstColumn.current.offsetWidth\r\n            };\r\n        })\r\n    }\r\n\r\n    handleNewPlayerRequest = (username, {isPrioritySeat=false}) => {\r\n        if (isPrioritySeat) {\r\n            // even if the queue is closed, still add them to the interested column for consideration\r\n            const column = (this.state.isQueueOpen ? 'playing' : 'interested');\r\n\r\n            return this.updateColumnForUser({username, isPrioritySeat}, column)\r\n                ? 'you have been successfully added to the lobby.'\r\n                : 'there was an error adding you to the lobby.';\r\n        }\r\n\r\n        if (this.state?.interested?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.playing?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.joined?.map((uObj) => uObj.username)?.includes(username)) {\r\n            return 'you are already in the lobby.';\r\n        }\r\n\r\n        if (!this.state.isQueueOpen) {\r\n            return 'the queue is currently closed; users have already been selected for this game.';\r\n        }\r\n        return this.updateColumnForUser({username}, 'interested')\r\n            ? 'you have successfully joined the lobby.'\r\n            : 'there was an error adding you to the lobby.';\r\n    }\r\n\r\n    updateColumnForUser = (userObj, newColumn) => {\r\n        if (!this.state || !this.state[newColumn]) return false;\r\n\r\n        this.removeUser(userObj.username);\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [newColumn]: [\r\n                    ...state[newColumn],\r\n                    userObj\r\n                ]\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    removeUser = (username) => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: state.interested.filter((iObj) => iObj.username !== username),\r\n                playing: state.playing.filter((pObj) => pObj.username !== username),\r\n                joined:  state.joined.filter((jObj) => jObj.username !== username)\r\n            }\r\n        });\r\n    }\r\n\r\n    clearQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            }\r\n        })\r\n    }\r\n\r\n    openQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: true\r\n            }\r\n        })\r\n    }\r\n\r\n    closeQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: false\r\n            }\r\n        })\r\n    }\r\n\r\n    playerCount = () => {\r\n        return this.state.playing.length + this.state.joined.length +\r\n                        (this.state.streamerSeat ? 1 : 0);\r\n    }\r\n\r\n    toggleStreamerSeat = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                streamerSeat: !state.streamerSeat\r\n            }\r\n        });\r\n    }\r\n\r\n    canStartGame = () => {\r\n        return this.props.game?.['Max players'] >= this.playerCount() &&\r\n                     this.props.game?.['Min players'] <= this.playerCount();\r\n    }\r\n\r\n    startGame = () => {\r\n        // clear for now; eventually, save elsewhere to report on user play history for that session\r\n        this.setState ((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            };\r\n        })\r\n        this.props.startGame();\r\n    }\r\n\r\n    randomizePlayers = () => {\r\n        const numPlayersToAdd = Math.min(\r\n            this.props.game['Max players'] - this.playerCount(),\r\n            this.state.interested.length\r\n        );\r\n\r\n        let randIdx, randUsername;\r\n        let randIdxArray = [], randUsernameArray = [];\r\n        // let interested = this.state.interested;\r\n        let playing = this.state.playing;\r\n\r\n        while(randIdxArray.length < numPlayersToAdd) {\r\n            randIdx = Math.floor(Math.random() * this.state.interested.length);\r\n            if (!randIdxArray.includes(randIdx)) {\r\n                randIdxArray.push(randIdx);\r\n                randUsername = this.state.interested[randIdx].username;\r\n                randUsernameArray.push(randUsername);\r\n                playing = [\r\n                    ...playing,\r\n                    this.state.interested[randIdx]\r\n                ];\r\n            }\r\n        }\r\n        this.setState((state) => {\r\n            return {\r\n                interested: state.interested.filter((uObj) => !randUsernameArray.includes(uObj.username)),\r\n                playing\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPlayerCard = (userObj, id, curColumn) => {\r\n        return (\r\n            <div key={id} className=\"player-card lh-sm fs-5\">\r\n                <div className=\"player-card-username\">\r\n                    {userObj.isPrioritySeat === true && <img src={star} alt=\"Priority seat redemption\"/>}\r\n                    <p className='player-name' style={{\r\n                        maxWidth: this.state.columnWidth - 25\r\n                    }}>{userObj.username}</p>\r\n                </div>\r\n                <div className=\"change-col-buttons-container\">\r\n                    {curColumn !== 'interested' && <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'interested')}>Interested</button>}\r\n                    {curColumn !== 'playing' && <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'playing')}>Playing</button>}\r\n                    {/*curColumn !== 'joined' && <button className='change-col' onClick={this.updateColumnForUser.bind(this, userObj, 'joined')}>Joined</button>*/}\r\n                    <button className=\"change-col\" onClick={this.removeUser.bind(this, userObj.username)}>X</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStreamerSeatToggle = () => {\r\n        return (\r\n            <div className=\"toggle-streamer-seat\">\r\n                <label className=\"toggle-label form-check-label\" htmlFor=\"reserve-seat-for-streamer\">\r\n                    Reserve seat for streamer?\r\n                </label>\r\n                <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"reserve-seat-for-streamer\" defaultChecked={this.state.streamerSeat} onChange={this.toggleStreamerSeat} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPlayerCount = () => {\r\n        let className = 'player-count';\r\n        if (this.props.game?.['Max players'] < this.playerCount()) {\r\n            className += ' overlimit';\r\n        }\r\n        return (\r\n            <div className={className}>\r\n                {this.playerCount()} of {this.props.game?.['Max players']} seats claimed\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let startGameClass = 'btn btn-sm start-game';\r\n        if (this.playerCount() < this.props.game?.['Min players']){\r\n            startGameClass += ' disabled';\r\n        }\r\n\r\n        return (\r\n            <div className=\"card player-select-container\">\r\n                <div className=\"card-header d-flex justify-content-between\">\r\n                    {this.renderStreamerSeatToggle()}\r\n                    <div className=\"fs-2 lh-sm game-name\">\r\n                        <b>{this.props.game?.name ?? \"TBD\"}</b>\r\n                        {this.renderPlayerCount()}\r\n                    </div>\r\n                    <button className={startGameClass} onClick={this.startGame} disabled={!this.canStartGame()}>Start Game</button>\r\n                </div>\r\n                <div className=\"card-body player-card-container\">\r\n                    <div ref={this.firstColumn} className='player-card-column interested'>\r\n                        <p className=\"player-card-column-header\">Interested</p>\r\n                        {this.state.interested.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                        {this.state.interested.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                    </div>\r\n\r\n                    <div className='player-card-column playing'>\r\n                        <p className=\"player-card-column-header\">Playing\r\n                        <button className=\"dice\" onClick={this.randomizePlayers}>\r\n                            <img src={dice} alt=\"dice icon\"/>\r\n                        </button>\r\n                        </p>\r\n                        {this.state.playing.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                        {this.state.playing.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                    </div>\r\n\r\n                    {/*<div className='player-card-column joined'>\r\n                        <p className=\"player-card-column-header\">Joined</p>\r\n                        {this.state.joined.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                        {this.state.joined.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                    </div>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: 0\n        }\n\n        this.getHistoryList = this.getHistoryList.bind(this);\n        this.getNextGameName = this.getNextGameName.bind(this);\n        this.getNextGamePartyPack = this.getNextGamePartyPack.bind(this);\n        this.hasNextGame = this.hasNextGame.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.printGame = this.printGame.bind(this);\n    }\n\n    getHistoryList = (history) => {\n        if (history.length === 0) {\n            return (\n                <span className=\"history-placeholder\" key='placeholder'>No games yet</span>\n            );\n        }\n        return (\n            <Droppable droppableId=\"historyList\">\n                {(provided) => (\n                    <span className=\"historyList\" {...provided.droppableProps} ref={provided.innerRef}>\n                        {history.map(({name, time}, index) => {\n                            return (\n                                <Draggable key={`${time}`} draggableId={`${time}`} index={index}>\n                                    {(provided) => (\n                                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                            {this.printGame(index)}\n                                        </li>\n                                    )}\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </span>\n                )}\n            </Droppable>\n        );\n    }\n\n    getNextGameName = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].name\n            : 'not yet decided';\n    }\n\n    getNextGamePartyPack = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].partyPack\n            : null;\n    }\n\n    handleOnDragEnd = (result) => {\n        if (!result.destination) return;\n\n        const _items = Array.from(this.props.history).fill();\n        _items[this.props.nextGameIdx] = true;\n        const [_reorderedItem] = _items.splice(result.source.index, 1);\n        _items.splice(result.destination.index, 0, _reorderedItem);\n\n        const newNextGameIdx = _items.findIndex(i => i);\n\n        const items = Array.from(this.props.history);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        this.props.changeGameOrder(items, newNextGameIdx);\n    }\n\n    hasNextGame = () => {\n        return this.props.history.length > this.props.nextGameIdx;\n    }\n\n    moveNextGameFwd = () => {\n        return this.props.changeNextGameIdx(1);\n    }\n\n    moveNextGameBack = () => {\n        return this.props.changeNextGameIdx(-1);\n    }\n\n    removeSelectedGameFromHistory = () => {\n        return this.props.removeSelectedGameFromHistory();\n    }\n\n    printGame = (idx) => {\n        if (idx === this.props.nextGameIdx) {\n            return (\n                <b>{this.props.history[idx].name}</b>\n            );\n        }\n        return this.props.history[idx].name;\n    }\n\n    render() {\n        let nextGame = this.hasNextGame();\n\n        let buttonPlayerSelect;\n        switch (this.props.requestMode) {\n            case 'game':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"open-seat-requests\" disabled={!nextGame} onClick={this.props.togglePlayerSelect}>\n                        OPEN SEAT REQUESTS\n                    </button>\n                )\n                break;\n            case 'seat':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"return-to-wheel\" onClick={this.props.togglePlayerSelect}>\n                        RETURN TO WHEEL\n                    </button>\n                )\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <div id=\"sidebar\" className={this.props.requestMode}>\n                <div className=\"card sidebar-panel\">\n                    <div className=\"card-header fw-bolder\">\n                        Up Next\n                    </div>\n                    <div className=\"card-body sidebar-up-next-panel\">\n                        <h5 className=\"card-title mb-2 fw-bolder\">\n                            <button className=\"cancel-game\" onClick={this.removeSelectedGameFromHistory}>X</button>\n                            {this.getNextGameName()}\n                        </h5>\n                        <div className=\"card-subtitle mb-2 fs-7 fst-italic text-light\"\n                            style={{'--bs-text-opacity': '0.75'}}>\n                            {this.getNextGamePartyPack()}\n                        </div>\n\n                        {buttonPlayerSelect}\n                    </div>\n                </div>\n\n                <div className=\"nav-wrapper py-2\">\n                    <button className=\"btn-sm move-next-game-back\" onClick={this.moveNextGameBack}> &#8678; </button>\n                    <button className=\"btn-sm move-next-game-fwd\" onClick={this.moveNextGameFwd}> &#8680; </button>\n                </div>\n\n                <div className=\"card sidebar-panel\">\n                    <DragDropContext onDragEnd={this.handleOnDragEnd}>\n                        <div className=\"card-header fw-bolder\">\n                            History\n                        </div>\n                        <div className=\"card-body sidebar-history-list-panel\">\n                            {this.getHistoryList(this.props.history)}\n                        </div>\n                    </DragDropContext>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {useEffect, useState} from 'react';\n\nconst WheelComponent = ({\n    segments,\n    segColors,\n    winningSegment,\n    onStart = ()=>{},\n    onSpinProgress,\n    onFinished,\n    primaryColor,\n    contrastColor,\n    buttonText,\n    isOnlyOnce = true,\n    size = 290,\n    upDuration = 100,\n    downDuration = 1000,\n    fontFamily = 'proxima-nova',\n    wheelHeight = 720,\n    wheelWidth = 600,\n    enableScrollTop = true,\n    multilineDelimiter = null\n}) => {\n    let currentSegment = '';\n    let currentSegmentLabel = '';\n    let isStarted = false;\n    const [isFinished, setFinished] = useState(false);\n    let timerHandle = 0;\n    const timerDelay = segments.length / 2;\n    let angleCurrent = 0;\n    let angleDelta = 0;\n    let canvasContext = null;\n    let maxSpeed = Math.PI / `${segments.length}`* 4;\n    const upTime = segments.length * upDuration;\n    const downTime = segments.length * downDuration;\n    let spinStart = 0;\n    let frames = 0;\n    const centerX = Math.round(wheelWidth/2);\n    const centerY = Math.round(wheelHeight/2.5);\n\n    useEffect(() => {\n        wheelInit();\n        if (enableScrollTop) {\n            setTimeout(() => {\n                window.scrollTo(0, 1);\n            }, 0);\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // const spinButton = new Path2D();\n    // TODO: fix scope issues with button\n    // canvasContext.beginPath();\n    // spinButton.arc(centerX, centerY, 50, 0, 2 * Math.PI, false);\n    // canvasContext.fill(rectangle);\n    // canvasContext.beginPath();\n    // canvasContext.arc(centerX, centerY, 50, 0, PI2, false);\n    // canvasContext.closePath();\n\n    const wheelInit = () => {\n        initCanvas();\n        wheelDraw();\n    };\n\n    const initCanvas = () => {\n        let canvas = document.getElementById('canvas');\n        if (navigator.appVersion.indexOf('MSIE') !== -1) {\n            canvas = document.createElement('canvas');\n            canvas.setAttribute('width', wheelWidth);\n            canvas.setAttribute('height', wheelHeight);\n            canvas.setAttribute('id', 'canvas');\n            document.getElementById('wheel').appendChild(canvas);\n        }\n        canvas.addEventListener('click', spin, false);\n        canvasContext = canvas.getContext('2d');\n    };\n    const spin = (event) => {\n        // if (!canvasContext.isPointInPath(spinButton, event.offsetX, event.offsetY)) {\n        //     return;\n        // }\n        isStarted = true;\n        if (timerHandle === 0) {\n            spinStart = new Date().getTime();\n            // maxSpeed = Math.PI / ((segments.length*2) + Math.random())\n            maxSpeed = Math.PI / segments.length;\n            frames = 0;\n            timerHandle = setInterval(onTimerTick, timerDelay);\n        }\n        console.log({maxSpeed});\n        onStart();\n    };\n    const onTimerTick = () => {\n        frames++;\n        draw();\n        const duration = new Date().getTime() - spinStart;\n        let progress = 0;\n        let finished = false;\n        if (duration < upTime) {\n            progress = duration / upTime;\n            angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2);\n        } else {\n            if (winningSegment) {\n                if (currentSegment === winningSegment && frames > segments.length) {\n                    progress = duration / upTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                    progress = 1;\n                } else {\n                    progress = duration / downTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                }\n            } else {\n                progress = duration / downTime;\n                angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n            }\n            if (progress >= 1) {\n                finished = true;\n            }\n        }\n\n        angleCurrent += angleDelta;\n        while (angleCurrent >= Math.PI * 2) {\n            angleCurrent -= Math.PI * 2;\n        }\n        if (finished) {\n            setFinished(true);\n            onFinished(currentSegment);\n            clearInterval(timerHandle);\n            timerHandle = 0;\n            angleDelta = 0;\n        }\n        onSpinProgress && onSpinProgress({finished, progress, frames})\n    };\n\n    const wheelDraw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const draw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const drawSegment = (key, lastAngle, angle) => {\n        const ctx = canvasContext;\n        const value = segments[key];\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.arc(centerX, centerY, size, lastAngle, angle, false);\n        ctx.lineTo(centerX, centerY);\n        ctx.closePath();\n        ctx.fillStyle = segColors[key];\n        ctx.fill();\n        ctx.stroke();\n        ctx.save();\n        ctx.translate(centerX, centerY);\n        ctx.rotate((lastAngle + angle) / 2);\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.font = 'bold 1em ' + fontFamily;\n        // ctx.fillText(value.substr(0, 21), size / 2 + 20, 0);\n        if (multilineDelimiter && value.indexOf(multilineDelimiter) !== -1) {\n            ctx.fillText(value.substr(0, value.indexOf(multilineDelimiter)), size / 2 + 25, -3);\n            ctx.font = '0.75em ' + fontFamily;\n            ctx.fillText(value.substr(value.indexOf(multilineDelimiter) + 1, 21), size / 2 + 25, 11);\n        } else {\n            ctx.fillText(value.substr(0, 21), size / 2 + 25, 0)\n        }\n        ctx.restore();\n    };\n\n    const drawWheel = () => {\n        const ctx = canvasContext;\n        let lastAngle = angleCurrent;\n        const len = segments.length;\n        const PI2 = Math.PI * 2;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        ctx.font = '1em ' + fontFamily;\n        for (let i = 1; i <= len; i++) {\n            const angle = PI2 * (i / len) + angleCurrent;\n            drawSegment(i - 1, lastAngle, angle);\n            lastAngle = angle;\n        }\n\n        // Draw a center circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, 50, 0, PI2, false);\n        ctx.closePath();\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fill();\n        ctx.font = 'bold 1em ' + fontFamily;\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.textAlign = 'center';\n        ctx.fillText(buttonText || 'Spin', centerX, centerY + 3);\n        ctx.stroke();\n\n        // Draw outer circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, size, 0, PI2, false);\n        ctx.closePath();\n\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.stroke();\n    };\n\n    const drawNeedle = () => {\n        const ctx = canvasContext;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fileStyle = contrastColor || 'white';\n        ctx.beginPath();\n        ctx.moveTo(centerX + 20, centerY - 50);\n        ctx.lineTo(centerX - 20, centerY - 50);\n        ctx.lineTo(centerX, centerY - 70);\n        ctx.closePath();\n        ctx.fill();\n        const change = angleCurrent + Math.PI / 2;\n        let i = segments.length - Math.floor((change / (Math.PI * 2)) * segments.length) - 1;\n        if (i < 0) {\n            i = i + segments.length;\n        }\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.font = 'bold 1.5em ' + fontFamily;\n        currentSegment = segments[i];\n\n        // prevent displaying 'undefined' as the selected label\n        currentSegmentLabel = currentSegment || '';\n        if (isStarted) {\n            ctx.fillText(currentSegmentLabel, centerX + 10, centerY + size + 50);\n        }\n    };\n    const clear = () => {\n        const ctx = canvasContext;\n        ctx.clearRect(0, 0, wheelWidth, wheelHeight);\n    };\n\n    let pointerEvents = 'auto';\n    if (isFinished && isOnlyOnce) {\n        pointerEvents = 'none'\n    }\n\n    return (\n        <div id=\"wheel\" style={{position: 'relative'}}>\n            <canvas id=\"canvas\" width={wheelWidth} height={wheelHeight} style={{pointerEvents}}/>\n        </div>\n    );\n};\nexport default WheelComponent;\n","import {Component} from 'react';\nimport {Button, Modal} from 'react-bootstrap';\nimport ChatActivity, { ActivityStatus } from '../ChatActivity';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport GameRequest from '../components/GameRequest'\nimport MessageHandler from '../MessageHandler';\nimport OptionsMenu from './OptionsMenu';\nimport PlayerSelect from '../components/PlayerSelect';\nimport Sidebar from './Sidebar'\nimport WheelComponent from '../WheelComponent'; //'react-wheel-of-prizes'\nimport * as fakeStates from '../example-states';\n\nimport './MainScreen.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nconst randomColor = require('randomcolor');\n\n\nexport default class MainScreen extends Component {\n    constructor(props){\n        super(props);\n        this.chatActivity = new ChatActivity(this.props.channel)\n        this.state = {\n            allowGameRequests: true,\n            gameSelected: null,\n            messages: {},\n            colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\n            counter: 0,\n            history: [],\n            nextGameIdx: 0,\n            showOptionsMenu: false,\n            showOptionsModal: false,\n            showPlayerSelect: false\n        };\n\n        this.playerSelector = null;\n        this.messageHandler = null;\n\n        this.changeNextGameIdx = this.changeNextGameIdx.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.addGameRequest = this.addGameRequest.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.setNextGame = this.setNextGame.bind(this);\n        this.addGameToQueue = this.addGameToQueue.bind(this);\n        this.onWheelSpun = this.onWheelSpun.bind(this);\n        this.removeGame = this.removeGame.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.toggleAllowGameRequests = this.toggleAllowGameRequests.bind(this);\n        this.togglePlayerSelect = this.togglePlayerSelect.bind(this);\n        this.routePlayRequest = this.routePlayRequest.bind(this);\n        this.routeLeaveRequest = this.routeLeaveRequest.bind(this);\n        this.routeOpenQueueRequest = this.routeOpenQueueRequest.bind(this);\n        this.routeCloseQueueRequest = this.routeCloseQueueRequest.bind(this);\n        this.routeClearQueueRequest = this.routeClearQueueRequest.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.setMessageHandlerRef = this.setMessageHandlerRef.bind(this);\n        this.setPlayerSelectRef = this.setPlayerSelectRef.bind(this);\n    }\n\n    componentDidMount() {\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\n            if (window.location.hash.indexOf('playerselect=true') !== -1) {\n                this.setState(\n                    Object.assign({}, fakeStates.MainScreen, {\n                        showPlayerSelect: true\n                    })\n                );\n            } else {\n                this.setState(fakeStates.MainScreen);\n            }\n        }\n    }\n\n    changeNextGameIdx = (delta = 1) => {\n        if (this.state.nextGameIdx + delta > this.state.history.length) return false;\n        if (this.state.nextGameIdx + delta < 0) return false;\n        this.setState((state) => {\n            return {\n                nextGameIdx: state.nextGameIdx + delta\n            }\n        });\n        return true;\n    }\n\n    changeGameOrder = (history, nextGameIdx) => {\n        if (nextGameIdx > history.length) return false;\n        this.setState({\n            history,\n            nextGameIdx\n        });\n        return true;\n    }\n\n    moveNextGameFwd = () => {\n        return this.changeNextGameIdx();\n    }\n\n    moveNextGameBack = () => {\n        return this.changeNextGameIdx(-1);\n    }\n\n    addGameRequest = (gameObj, user) => {\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: {\n                    ...this.state.messages,\n                    [gameObj.longName]: {\n                        ...gameObj,\n                        username: user,\n                        time: Date.now(),\n                        locked: false,\n                        chosen: false\n                    }\n                },\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    toggleLock = (game) => {\n        const stateCopy = {...this.state.messages[game]};\n        stateCopy.locked = !stateCopy.locked\n\n        this.setState(() => {\n            return {\n                ...this.state,\n                messages: {\n                    ...this.state.messages,\n                    [game]: stateCopy\n                }\n            }\n        });\n    }\n\n    // @return: the number of games ahead of this one, after successfully inserting in queue\n    // (i.e. if it's the very next game, return 0; if there's one ahead, return 1; etc)\n    setNextGame = (gameObj) => {\n        let idx = this.state.nextGameIdx;\n\n        // insert next game at next up position by default, but\n        //      *after* any other manually inserted games\n        while (idx < this.state.history.length && this.state.history[idx]?.override) {\n            idx++;\n        }\n\n        this.setState((state) => {\n            return {\n                ...state,\n                history: [\n                    ...state.history.slice(0, Math.max(0, idx)),\n                    {\n                        ...gameObj,\n                        override: true,\n                        time: Date.now()\n                    },\n                    ...state.history.slice(idx)\n                ]\n            }\n        });\n\n        return idx - this.state.nextGameIdx;\n    }\n\n    addGameToQueue = (gameObj) => {\n        // update history + game card highlight color\n        this.setState((state) => {\n            return {\n                ...state,\n                gameSelected: gameObj,\n                history: [\n                    ...this.state.history,\n                    {\n                        ...gameObj,\n                        override: false\n                    }\n                ],\n                messages: {\n                    ...state.messages,\n                    [gameObj.longName]: {\n                        ...state.messages[gameObj.longName],\n                        chosen: true\n                    }\n                }\n            }\n        });\n    }\n\n    clearModal = () => {\n        this.setState({\n            gameSelected: null\n        });\n    }\n\n    getGamesList = () => {\n        return {\n            allowedGames: this.messageHandler?.state.allowedGames,\n            validGames: this.messageHandler?.state.validGames\n        }\n    }\n    getOptionsDebugMenu = () => {\n        return [{\n            label: 'Load Mock Game Requests',\n            onClick: () => {\n                return this.setState(\n                    Object.assign({}, fakeStates.MainScreen)\n                );\n            }\n        },{\n            label: 'Load Mock Game & Player Requests',\n            onClick: () => {\n                return this.setState(\n                    Object.assign({}, fakeStates.MainScreen, {\n                        showPlayerSelect: true\n                    }),\n                    () => {\n                        this.playerSelector?.setState(fakeStates.PlayerSelect);\n                    }\n                );\n            }\n        }, {\n            label: 'Debug Env',\n            onClick: () => {\n                console.log('process.env.NODE_ENV:', process.env.NODE_ENV);\n                console.log('process.env.REACT_APP_REDIRECT_URI:', process.env.REACT_APP_REDIRECT_URI);\n            }\n        }];\n    }\n\n    getOptionsMenu = () => {\n        return [{\n            label: 'Reload Game List',\n            onClick: this.messageHandler?.reloadGameList\n        }];\n    }\n\n    onWheelSpun = (gameLongName) => {\n        const gameRequestObj = this.state.messages?.[gameLongName];\n        if (!gameRequestObj) return;\n\n        // send confirmation message in chat\n        const requester = gameRequestObj.username;\n\n        this.addGameToQueue(gameRequestObj);\n\n        // remove card unless it's locked\n        if (!this.state.messages[gameLongName].locked) {\n            setTimeout(() => {\n                this.removeGame(gameLongName);\n                this.clearModal();\n            }, 4000);\n        }\n\n        return this.chatActivity.getStatusPromise(requester).then((status) => {\n            let msg = \"\";\n            switch(status) {\n                case ActivityStatus.DISCONNECTED:\n                    msg = `/me ${gameRequestObj.name} just won the spin, but it doesn't seem like @${requester} is still around. Hope someone else wants to play!`\n                    break;\n\n                case ActivityStatus.ACTIVE:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin!`;\n                    break;\n\n                case ActivityStatus.IDLE:\n                default:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin! (I hope you're still around!)`;\n            }\n            return this.messageHandler.sendMessage(msg);\n        })\n\n    }\n\n    removeGame = (gameLongName) => {\n        const newMessageObj = {...this.state.messages};\n        delete newMessageObj[gameLongName];\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: newMessageObj,\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    removeSelectedGameFromHistory = () => {\n        let {history, nextGameIdx} = this.state;\n        if (!history[nextGameIdx]) {\n            return false;\n        }\n        let currGame = history[nextGameIdx];\n        delete history[nextGameIdx];\n        this.setState({\n            history: history.filter(h => !!h),\n            nextGameIdx: Math.max(-1, Math.min(nextGameIdx, history.length))\n        });\n        return currGame;\n    }\n\n    onMessage = (message, user, metadata) => {\n        this.chatActivity.updateLastMessageTime(user);\n    }\n\n    toggleAllowGameRequests = (allow=null) => {\n        let {allowGameRequests} = this.state;\n        if (allow !== null && typeof allow !== 'object') {\n            allowGameRequests = !allow;\n        }\n        this.setState((state) => {\n            return {\n                allowGameRequests: !allowGameRequests\n            }\n        })\n    }\n\n    toggleOptionsMenu = () => {\n        this.setState((state) => {\n            return {\n                showOptionsMenu: !state.showOptionsMenu\n            }\n        })\n    }\n\n    toggleOptionsModal = () => {\n        this.setState((state) => {\n            return {\n                showOptionsModal: !state.showOptionsModal\n            }\n        })\n    }\n\n    togglePlayerSelect = () => {\n        this.setState((state) => {\n            return {\n                showPlayerSelect: !state.showPlayerSelect\n            }\n        })\n    }\n\n    routePlayRequest = (user, {sendConfirmationMsg = true, isPrioritySeat = false}) => {\n        const msg = this.state.showPlayerSelect\n            ? this.playerSelector?.handleNewPlayerRequest(user, {isPrioritySeat})\n            : 'sign-ups are currently closed; try again after this game wraps up!'\n\n        if (sendConfirmationMsg) {\n            this.messageHandler?.sendMessage(`/me @${user}, ${msg}`);\n        }\n    }\n\n    routeLeaveRequest = (user) => {\n        this.playerSelector?.removeUser(user);\n    }\n\n    routeOpenQueueRequest = () => {\n        this.setState((state) => {\n            return {\n                ...state,\n                showPlayerSelect: true\n            }\n        })\n        this.playerSelector?.openQueue();\n    }\n\n    routeCloseQueueRequest = () => {\n        this.playerSelector?.closeQueue();\n    }\n\n    routeClearQueueRequest = () => {\n        this.playerSelector?.clearQueue();\n    }\n\n    startGame = () => {\n        if (this.state.showPlayerSelect) {\n            this.togglePlayerSelect();\n            this.moveNextGameFwd();\n            return true;\n        }\n        return false;\n    }\n\n    setMessageHandlerRef = (ps) => {\n        this.messageHandler = ps;\n    };\n\n    setPlayerSelectRef = (mh) => {\n        this.playerSelector = mh;\n    };\n\n    renderGameChosenModal(gameObj) {\n        let confettiProps = {\n            force: 0.6,\n            duration: 3500,\n            particleCount: 100,\n            floorHeight: Math.max(window.outerWidth, window.outerHeight),\n            floorWidth: Math.max(window.outerWidth, window.outerHeight)\n        };\n        let requestedBy;\n        if (gameObj.username) {\n            requestedBy = (<h4>requested by @{gameObj.username}</h4>);\n        }\n        return (\n            <>\n                <div className=\"overlay fade-in-out\">\n                    <div className=\"confetti-wrapper\">\n                        <ConfettiExplosion {...confettiProps} />\n                    </div>\n                </div>\n                <div className=\"confetti-modal modal-game-chosen fade-in-out\" onClick={()=>this.removeGame(gameObj.longName)}>\n                    <h1>{gameObj.name}</h1>\n                    {requestedBy}\n                </div>\n            </>\n        );\n    }\n\n    renderOptionsModal() {\n        let {allowedGames, validGames} = this.messageHandler.state;\n        let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n            return Object.keys(packData[1]).map(gameData => {\n                let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n                return {\n                    id: gameId,\n                    game: gameData,\n                    pack: packData[0]\n                }\n            })\n        }))\n        // let gamesList = gamePackList.map(g => g.game);\n        console.log('gamePackList:', gamePackList, allowedGames);\n\n        return (\n            <Modal\n                show={this.state.showOptionsModal}\n                onHide={()=>this.toggleOptionsModal(false)}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Options\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Options</h4>\n                    <div className=\"options-list\">\n                        <ul>\n                            {gamePackList.map(({id, game, pack}, idx) => {\n                                // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n                                return (\n                                    <li key={id}>\n                                        <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n                                    </li>\n                                )}\n                            )}\n                        </ul>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button data-bs-dismiss=\"modal\">Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    render() {\n        const gameRequestArray = Object.keys(this.state.messages);\n\n\n        let gameSelectedModal;\n        if (this.state.showOptionsModal) {\n            gameSelectedModal = this.renderOptionsModal();\n        } else if (this.state.gameSelected) {\n            gameSelectedModal = this.renderGameChosenModal(this.state.gameSelected);\n        }\n\n        let mainClassName = this.state.showPlayerSelect ? 'player-select' : 'game-select';\n\n        let subheading = this.state.showPlayerSelect ? (\n            <span className=\"subheading-player fade-in-delay\">\n                Type <b>!new</b> in {this.props.channel}'s chat if you want to join the next game\n            </span>\n        ) : (\n            <span\n                className={`subheading-game ${(this.state.allowGameRequests === true ? 'fade-in-delay' : 'fade-out')}`} \n                title={`Click to ${this.state.allowGameRequests === true ? 'disable' : 'enable'} game requests.`} \n                onClick={this.toggleAllowGameRequests}>\n                Type e.g. <b>\"!request Blather Round\"</b> in {this.props.channel}'s chat to add\n            </span>\n        );\n\n        let innerContent;\n        let rightColumn;\n\n        if (this.state.showPlayerSelect) {\n            innerContent = (\n                <PlayerSelect\n                    game={this.state.history?.[this.state.nextGameIdx]}\n                    startGame={this.startGame}\n                    ref={this.setPlayerSelectRef}\n                />\n            );\n        } else {\n            innerContent = gameRequestArray.map((gameName, i) =>\n                <GameRequest\n                    key={i}\n                    gameName={gameName}\n                    metadata={this.state.messages[gameName]}\n                    onDelete={this.removeGame}\n                    toggleLock={this.toggleLock.bind(gameName)}\n                    getActivity={this.chatActivity.getStatusPromise}\n                />\n            );\n            // reduce spin time for large number of game requests\n            let upDuration = (gameRequestArray.length < 5) ? 100 : (500 / gameRequestArray.length);\n            let downDuration = (gameRequestArray.length < 5) ? 1000 : (5000 / gameRequestArray.length);\n\n            rightColumn = (\n                <div className=\"right-column\" width=\"50px\">\n                    <div className=\"wheel-wrapper fade-in\">\n                         <WheelComponent\n                            key={this.state.counter}\n                            segments={gameRequestArray}\n                            segColors={this.state.colors}\n                            onFinished={this.onWheelSpun}\n                            isOnlyOnce={false}\n                            size={250}\n                            upDuration={upDuration}\n                            downDuration={downDuration}\n                            primaryColor={\"white\"}\n                            contrastColor={\"black\"}\n                            fontFamily={\"Arial\"}\n                            multilineDelimiter={' ('}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        let gamesList = this.getGamesList();\n\n        return (\n            <div id=\"main-screen\" className={mainClassName}>\n                <nav className=\"main-screen-nav navbar-dark\">\n                    <button className=\"btn btn-toggle-options float-end navbar-toggler\" type=\"button\" onClick={this.toggleOptionsMenu}>\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                </nav>\n                <MessageHandler\n                    access_token={this.props.access_token}\n                    addGameRequest={this.addGameRequest}\n                    allowGameRequests={this.state.allowGameRequests}\n                    caniplayHandler={this.routePlayRequest}\n                    changeNextGameIdx={this.changeNextGameIdx}\n                    channel={this.props.channel}\n                    clearQueueHandler={this.routeClearQueueRequest}\n                    closeQueueHandler={this.routeCloseQueueRequest}\n                    messages={this.state.messages}\n                    modList={this.props.modList}\n                    onDelete={this.removeGame}\n                    onMessage={this.onMessage}\n                    openQueueHandler={this.routeOpenQueueRequest}\n                    playerExitHandler={this.routeLeaveRequest}\n                    previousGames={this.state.history.slice(0, this.state.nextGameIdx)}\n                    ref={this.setMessageHandlerRef}\n                    removeSelectedGameFromHistory={this.removeSelectedGameFromHistory}\n                    setNextGame={this.setNextGame}\n                    startGame={this.startGame}\n                    toggleAllowGameRequests={this.toggleAllowGameRequests}\n                    upcomingGames={this.state.history.slice(this.state.nextGameIdx)}\n                />\n                <div className=\"left-column fade-in\">\n\n                    <h1>{this.state.showPlayerSelect ? 'Seat Requests' : 'Game Requests'}</h1>\n                    <h4>{subheading}</h4>\n\n                    <div className=\"left-column-body\">\n                        <Sidebar\n                            changeGameOrder={this.changeGameOrder}\n                            parentState={this.state}\n                            history={this.state.history}\n                            nextGameIdx={this.state.nextGameIdx}\n                            changeNextGameIdx={this.changeNextGameIdx}\n                            moveNextGameFwd={this.moveNextGameFwd}\n                            moveNextGameBack={this.moveNextGameBack}\n                            togglePlayerSelect={this.togglePlayerSelect}\n                            requestMode={this.state.showPlayerSelect ? 'seat' : 'game'}\n                            removeSelectedGameFromHistory={this.removeSelectedGameFromHistory}\n                        />\n                        <div className=\"left-column-inner-body\">\n                            {innerContent}\n                        </div>\n                    </div>\n                </div>\n                {rightColumn}\n                {gameSelectedModal}\n                <OptionsMenu\n                    gamesList={gamesList}\n                    parentState={this.state}\n                    debugItems={this.getOptionsDebugMenu()}\n                    items={this.getOptionsMenu()}\n                    reloadGameList={this.messageHandler?.reloadGameList}\n                    onHide={this.toggleOptionsMenu}\n                    onLogout={this.props.onLogout}\n                    showOptionsMenu={this.state.showOptionsMenu} />\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport MainScreen from './landing/MainScreen';\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport queryString from 'query-string'\nconst fetch = require('node-fetch');\n\nclass AuthenticatedApp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: localStorage.getItem('__username'),\n            access_token: localStorage.getItem('__access_token'),\n            failed_login: false\n        }\n        this.getAuth = this.getAuth.bind(this);\n        this.getUsers = this.getUsers.bind(this);\n        this.logOut = this.logOut.bind(this);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (!this.state.access_token) {\n            return this.getAuth();\n        }\n        return this.getUsers(this.state.access_token).catch(e => {\n            console.error(e);\n            return this.getAuth(e);\n        });\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    async getAuth(e) {\n        if (e) {\n            console.error(e);\n        }\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__access_token');\n\n        const queryParams = queryString.parse(this.props.location.search);\n        const requestParams = new URLSearchParams({\n            grant_type: 'authorization_code',\n            code: queryParams.code,\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n        return await fetch(`https://id.twitch.tv/oauth2/token?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        })\n        .then(r => r.json())\n        .then((oauth) => {\n            //console.log(oauth);  access_token, refresh_token, expires_in, scope ['...']\n            if (this._isMounted) {\n                if (!oauth.access_token) {\n                    return this.setState({\n                        failed_login: true\n                    });\n                }\n\n                localStorage.setItem('__access_token', oauth.access_token);\n\n                this.setState({\n                    access_token: oauth.access_token\n                });\n\n                return this.getUsers(oauth.access_token);\n            }\n            return;\n        })\n        .catch(e => {\n            console.error(e);\n            if (this._isMounted) {\n                return this.setState({\n                    failed_login: true\n                });\n            }\n            return;\n        });\n    }\n\n    getUsers(access_token) {\n        return fetch('https://api.twitch.tv/helix/users', {\n            headers: {\n                'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                Authorization: `Bearer ${this.state.access_token}`\n            }\n        })\n        .then(r => r.json())\n        .then(userInfo => {\n            //console.log(userInfo); login [aka lowercase username?], display_name, profile_image_url, description\n            localStorage.setItem('__username', userInfo.data[0].login);\n            return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\n                headers: {\n                    'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                    Authorization: `Bearer ${this.state.access_token}`\n                }\n            })\n            .then(r => r.json())\n            .then(modInfo => {\n                const modList = (!modInfo.data)\n                    ? null\n                    : modInfo.data.map((modObj) => (!modObj.user_name) ? null : modObj.user_name.toLowerCase()).filter(user => user);\n                if (this._isMounted) {\n                    return this.setState({\n                        username: userInfo.data[0].login,\n                        modList\n                    });\n                }\n                return;\n            });\n        });\n    }\n\n    logOut() {\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__access_token');\n\n        const requestParams = new URLSearchParams({\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            token: this.state.access_token,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n\n        return fetch(`https://id.twitch.tv/oauth2/revoke?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        }).then(() => {\n            return window.location.reload();\n        });\n    }\n\n    render() {\n        if (this.state.failed_login) {\n            return (<Redirect to=\"/login\"/>);\n        }\n        let mainContent;\n        let classNames = ['authenticated-app'];\n        if (this.state.username) {\n            mainContent = (\n                <MainScreen\n                    channel={this.state.username}\n                    modList={this.state.modList}\n                    access_token={this.state.access_token}\n                    onLogout={this.logOut}\n                />\n            );\n        }\n\n        return (\n            <div id={classNames.join(' ')}>\n                {mainContent}\n            </div>\n        );\n    }\n}\n\nexport {AuthenticatedApp};\n\nexport default withRouter(AuthenticatedApp);\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './JackboxGameList.css';\nconst fetch = require('node-fetch');\n\nconst PartyPackCard = function (props) {\n  const gameList = Object.keys(props.metadata);\n  return (\n    <div className=\"partyPackCard\">\n      <p className=\"partyPackName\">{props.partyPackName} </p>\n      {gameList.map((gameName, i) =>\n        <GameCard\n          key={i}\n          gameName={gameName}\n          possibleMatches={props.metadata?.[gameName]?.Variants}\n        />\n      )}\n    </div>\n  );\n}\n\n\n// <p> {props.gameName} <p>\n\nconst GameCard = function(props) {\n  return (\n    <div className=\"mt-2 lh-sm\">\n      <p className=\"gameName\">{props.gameName} </p>\n      {props.possibleMatches.map((possibleMatch, i) =>\n        <li className=\"possibleGameMatch\" key={`${props.gameName}-${i}`}>!request {possibleMatch}</li>\n      )}\n    </div>\n  );\n}\n\nexport default class JackboxGameList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validGames: []\n    };\n  }\n\n  componentDidMount(props) {\n    fetch(rawJackboxGameList)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            validGames: YAML.parse(text)\n          };\n        });\n      })\n    }\n\n\n\n    render() {\n      const partyPackList = Object.keys(this.state.validGames);\n      return (\n        <div className=\"partyPackList\">\n          {partyPackList.map((partyPackName, i) =>\n            <PartyPackCard\n              key={i}\n              partyPackName={partyPackName}\n              metadata={this.state.validGames[partyPackName]}\n            />\n          )}\n        </div>\n      );\n    }\n\n}\n","import React, {Component} from 'react';\nimport {version} from '../package.json';\n\nimport './LoginScreen.css';\n\nconst scopes = 'chat:read chat:edit moderation:read';\nconst loginUrl = 'https://id.twitch.tv/oauth2/authorize'\n    + `?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}`\n    + `&response_type=code&scope=${scopes}`\n    + `&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\n\nclass LoginScreen extends Component {\n\n    render() {\n        return (\n            <div id=\"login-screen\" className=\"fade-in\">\n                <a href={loginUrl} className=\"btn btn-sm fs-2\">\n                    Log In With <strong>Twitch</strong>\n                </a>\n                <br/>\n                <small>\n                    {`v${version}`}\n                </small>\n            </div>\n        );\n    }\n}\n\nexport default LoginScreen;\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './OptionsList.css';\nconst fetch = require('node-fetch');\n\nexport default class OptionsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowedGames: [],\n            validGames: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawJackboxGameList)\n            .then(r => r.text())\n            .then(text => {\n                let validGames = YAML.parse(text);\n                // this.setState({validGames});\n                this.setAllowedGames(validGames);\n            });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.allowedGames || this.state.validGames.length === 0 || this.state.allowedGames.length === 0) return;\n        localStorage.setItem('__allowedGames', JSON.stringify(this.state.allowedGames));\n    }\n\n    getAllowedGames = function(validGames) {\n        let __allowedGames = localStorage.getItem('__allowedGames');\n        let allowedGames = (__allowedGames) ? JSON.parse(__allowedGames) : {};\n\n\n        // let output = {};\n        //\n        // // return list of valid games merged with existing allowedGames\n        // Object.entries(validGames).forEach(([pack, packGames]) => {\n        //     // get valid games within each pack\n        //     Object.keys(packGames).forEach(game => {\n        //         let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n        //         output[gameId] = (allowedGames[gameId])\n        //             ? allowedGames[gameId]\n        //             : {\n        //                 id: gameId,\n        //                 game,\n        //                 pack,\n        //                 enabled: true\n        //             };\n        //         output[gameId] = allowedGames[gameId];\n        //     });\n        // });\n        // return output;\n\n        // return list of valid games merged with existing allowedGames\n        return Object.assign({},\n            ...[].concat(\n                ...Object.entries(validGames).map(([pack, packGames]) => {\n                    // get valid games within each pack\n                    return Object.assign({},\n                        ...Object.keys(packGames).map(game => {\n                            let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n                            if (gameId in allowedGames && allowedGames[gameId].id !== undefined) {\n                                return {\n                                    [gameId]: allowedGames[gameId]\n                                };\n                            }\n                            // add entry with default value\n                            // console.log(`Adding ${gameId}`);\n                            return {\n                                [gameId]: {\n                                    id: gameId,\n                                    game,\n                                    pack,\n                                    enabled: true\n                                }\n                            }\n                        })\n                    );\n                })\n            )\n        )\n    }\n\n    setAllowedGames = function(validGames) {\n        let allowedGames = this.getAllowedGames(validGames);\n        this.setState({\n            allowedGames,\n            validGames\n        });\n        localStorage.setItem('__allowedGames', JSON.stringify(allowedGames));\n    }\n\n    onCheckHandler = ({target}) => {\n        let {id, checked} = target;\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                [id]: {\n                    ...prevState.allowedGames[id],\n                    enabled: checked\n                }\n            }\n        }));\n    }\n\n    onGroupCheckHandler = ({target}) => {\n        let {value, checked} = target;\n        // console.log({value, checked});\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === value);\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                ...Object.assign(\n                    ...packGames.map(g => ({\n                        [g.id]: {\n                            ...g,\n                            enabled: checked\n                        }\n                    })\n                ))\n            }\n        }));\n    }\n\n    renderGameCard = function(props) {\n        let {id, game, pack} = props;\n        let {allowedGames} = this.state;\n        let checked = allowedGames[id]?.enabled || false;\n        return (\n            <li className=\"gameName\" key={id}>\n                <input type=\"checkbox\" id={id} name={id} value={id} checked={checked} onChange={this.onCheckHandler} />\n                {' '}\n                <label htmlFor={id} title={`${pack}: ${game}`}>\n                    {game}\n                </label>\n            </li>\n        );\n    }\n\n    renderPackCheckbox = function(pack) {\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === pack);\n        let isChecked = packGames.filter(g => g.enabled === true).length === packGames.length;\n        return (\n            <input type=\"checkbox\" id={pack} name={pack} value={pack} checked={isChecked} onChange={this.onGroupCheckHandler} />\n        );\n    }\n\n    renderPartyPack = function (props) {\n        const gameList = Object.keys(props.metadata);\n\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === props.partyPackName);\n        let gamesEnabled = packGames.filter(g => g.enabled === true)\n        let isChecked = gamesEnabled.length === packGames.length;\n        let isIndeterminate = (!isChecked && gamesEnabled.length !== 0)\n        return (\n            <div className=\"partyPackCard\" key={props.key}>\n                <p className=\"partyPackName\">\n                    {props.partyPackName} <input type=\"checkbox\" id={props.partyPackName} name={props.partyPackName} value={props.partyPackName} checked={isChecked} onChange={this.onGroupCheckHandler} ref={el => el && (el.indeterminate = isIndeterminate)} />\n                </p>\n                <ul className=\"partyPackGameList\">\n                    {gameList.map(\n                        (gameName, i) => this.renderGameCard({\n                            game: gameName,\n                            id: `${props.partyPackName} ${gameName}`.replace(/\\W/ig, '_'),\n                            pack: props.partyPackName\n                        })\n                    )}\n                </ul>\n            </div>\n        );\n    }\n\n    render() {\n        let {validGames} = this.state;\n        const partyPackList = Object.keys(validGames);\n\n        return (\n            <div className=\"partyPackList\">\n                {partyPackList.map(\n                    (partyPackName, i) => this.renderPartyPack({\n                        key: i,\n                        partyPackName,\n                        metadata: this.state.validGames[partyPackName]\n                    })\n                )}\n            </div>\n        );\n    }\n\n}\n","import AuthenticatedApp from './AuthenticatedApp';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport JackboxGameList from './JackboxGameList';\nimport LoginScreen from './LoginScreen';\nimport OptionsList from './OptionsList';\nimport React, {Component} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n\n        let classNames = ['App'];\n        if (window.location.hash.indexOf('legacy=true') !== -1) {\n            classNames.push('legacy');\n        }\n\n        return (\n            <HashRouter basename='/'>\n                <div className={classNames.join(' ')}>\n                    <Switch>\n                        <Route exact path=\"/login\" component={LoginScreen} />\n                        <Route exact path=\"/gamelist\" component={JackboxGameList}/>\n                        <Route exact path=\"/options\" component={OptionsList}/>\n                        <Route path=\"/\" component={AuthenticatedApp}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n\nexport {LoginScreen};\n","import { ReportHandler } from 'web-vitals';\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from 'react';\nimport {render} from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nrender(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}