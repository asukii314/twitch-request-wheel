{"version":3,"sources":["ChatActivity.js","images/lock.svg","components/GameRequest.js","JackboxGames.yaml","MessageHandler.js","example-states.js","images/dice.svg","images/star.svg","components/PlayerSelect.js","landing/Sidebar.js","WheelComponent.js","landing/MainScreen.js","AuthenticatedApp.js","JackboxGameList.js","LoginScreen.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","ActivityStatus","ChatActivity","channel","updateLastMessageTime","user","lastMessageTimes","Date","now","minsSinceLastChatMessage","Math","floor","getChatters","then","r","json","res","chatters","moderators","viewers","staff","admins","global_mods","catch","e","this","getStatusPromise","bind","a","includes","GameRequest","props","deleteRequest","onDelete","gameName","getFormattedTimeDiff","timestamp","unit","timeDiff","getTooltipContents","statusClass","state","activityStatus","className","metadata","username","toggleLock","updateStatus","getActivity","setState","time","lockClassName","locked","cardStatus","chosen","OverlayTrigger","placement","overlay","Tooltip","id","onEnter","src","lock","alt","onClick","type","Component","tmi","GAME_REQUEST_COMMAND","easterEggRequests","RequestName","Response","Variants","MessageHandler","componentDidMount","client","getTwitchClient","on","onMessage","connect","getGameList","rawJackboxGameList","componentWillUnmount","disconnect","console","log","yamlGameList","text","validGames","YAML","parse","warn","identity","password","access_token","channels","isModOrBroadcaster","modList","toLowerCase","checkForMiscCommands","message","startsWith","sendMessage","process","requestedGame","replace","trim","gameObj","findGame","name","partyPack","toggleAllowGameRequests","changeNextGameIdx","upcomingGames","length","numGamesAhead","setNextGame","caniplayHandler","sendConfirmationMsg","redeemingUser","isPrioritySeat","exitingUser","playerExitHandler","clearQueueHandler","openQueueHandler","closeQueueHandler","startGame","requestEntry","partyPackName","partyPackObj","Object","entries","formalGameName","longName","checkForGameCommand","target","tags","msg","self","cleanedMsg","messages","allowGameRequests","prevRequestedGameName","values","addGameRequest","previousGames","previous","i","upcoming","say","stateMainScreen","statePlayerSelect","PlayerSelect","updateColumnSizes","columnWidth","firstColumn","current","offsetWidth","handleNewPlayerRequest","column","isQueueOpen","updateColumnForUser","interested","map","uObj","playing","joined","userObj","newColumn","removeUser","filter","iObj","pObj","jObj","clearQueue","openQueue","closeQueue","playerCount","streamerSeat","toggleStreamerSeat","canStartGame","game","randomizePlayers","randIdx","randUsername","numPlayersToAdd","min","randIdxArray","randUsernameArray","random","push","renderPlayerCard","curColumn","star","style","maxWidth","renderStreamerSeatToggle","for","role","defaultChecked","onChange","renderPlayerCount","React","createRef","window","location","hash","indexOf","fakeStates","addEventListener","removeEventListener","startGameClass","disabled","ref","dice","Sidebar","getHistoryList","history","droppableId","provided","droppableProps","innerRef","index","draggableId","draggableProps","dragHandleProps","printGame","placeholder","getNextGameName","hasNextGame","nextGameIdx","getNextGamePartyPack","handleOnDragEnd","result","destination","_items","Array","from","fill","splice","source","_reorderedItem","newNextGameIdx","findIndex","items","reorderedItem","changeGameOrder","moveNextGameFwd","moveNextGameBack","idx","buttonPlayerSelect","nextGame","requestMode","togglePlayerSelect","onDragEnd","WheelComponent","segments","segColors","winningSegment","onStart","onSpinProgress","onFinished","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","wheelHeight","wheelWidth","enableScrollTop","multilineDelimiter","currentSegment","currentSegmentLabel","isStarted","useState","isFinished","setFinished","timerHandle","timerDelay","angleCurrent","angleDelta","canvasContext","maxSpeed","PI","upTime","downTime","spinStart","frames","centerX","round","centerY","useEffect","wheelInit","setTimeout","scrollTo","initCanvas","wheelDraw","canvas","document","getElementById","navigator","appVersion","createElement","setAttribute","appendChild","spin","getContext","event","getTime","setInterval","onTimerTick","draw","duration","progress","finished","sin","clearInterval","clear","drawWheel","drawNeedle","drawSegment","key","lastAngle","angle","ctx","value","save","beginPath","moveTo","arc","lineTo","closePath","fillStyle","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","fileStyle","change","clearRect","pointerEvents","position","width","height","randomColor","MainScreen","delta","counter","stateCopy","override","slice","max","addGameToQueue","gameSelected","clearModal","getGamesList","allowedGames","messageHandler","onWheelSpun","gameLongName","gameRequestObj","requester","removeGame","chatActivity","status","newMessageObj","allow","toggleOptionsModal","showOptionsModal","showPlayerSelect","routePlayRequest","playerSelector","routeLeaveRequest","routeOpenQueueRequest","routeCloseQueueRequest","routeClearQueueRequest","setMessageHandlerRef","ps","setPlayerSelectRef","mh","renderOptionsModal","gamePackList","concat","packData","keys","gameData","pack","Modal","show","onHide","centered","Header","closeButton","Title","Body","htmlFor","Footer","Button","colors","count","luminosity","hue","assign","requestedBy","confettiProps","force","particleCount","floorHeight","outerWidth","outerHeight","floorWidth","gameSelectedModal","logOutBtn","optionsBtn","gameRequestArray","renderGameChosenModal","onLogout","innerContent","rightColumn","mainClassName","subheading","title","AuthenticatedApp","localStorage","getItem","failed_login","getAuth","getUsers","logOut","_isMounted","error","removeItem","queryParams","queryString","search","requestParams","URLSearchParams","grant_type","code","client_id","client_secret","redirect_uri","method","headers","Accept","oauth","setItem","Authorization","userInfo","data","login","modInfo","modObj","user_name","token","reload","to","mainContent","join","withRouter","PartyPackCard","gameList","possibleMatches","GameCard","possibleMatch","JackboxGameList","partyPackList","loginUrl","LoginScreen","href","version","App","classNames","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.a57c1885.chunk.js","sourcesContent":["const fetch = require('node-fetch');\n\nexport const ActivityStatus = {\n    ACTIVE: 1,\n    IDLE: 2,\n    DISCONNECTED: 3\n};\n\nconst MAX_IDLE_TIME_MINUTES = 10;\n\nexport default class ChatActivity {\n    constructor(channel) {\n        this.channel = channel;\n        this.lastMessageTimes = {};\n        this.getStatusPromise = this.getStatusPromise.bind(this);\n    }\n\n    updateLastMessageTime = (user) => {\n        this.lastMessageTimes = {\n            ...this.lastMessageTimes,\n            [user]: Date.now()\n        };\n    }\n\n    minsSinceLastChatMessage = (user) => {\n        return Math.floor((Date.now() - this.lastMessageTimes[user]) / 60000);\n    }\n\n    // returns a PROMISE, don't just assign the value again like a dweeb. :/\n    //\n    // not just active chatters - anyone with an active connnection to twitch chat.\n    // (thank the lord almighty for free open proxy sites. CORB is annoying.)\n    // note that results are fairly heavily cached, and the API may break\n    // eventually (is undocumented), but this is what twitch themselves\n    // uses to display the list of people connected to chat - best we got.\n    getChatters = () => {\n        return fetch(`https://thingproxy.freeboard.io/fetch/https://tmi.twitch.tv/group/user/${this.channel}/chatters`)\n            .then(r => r.json())\n            .then(res => {\n                if (!res || !res.chatters) return null;\n                return [\n                  ...res.chatters.moderators,\n                  ...res.chatters.viewers,\n                  ...res.chatters.staff,\n                  ...res.chatters.admins,\n                  ...res.chatters.global_mods\n                ];\n            }).catch((e) => {\n                // don't normally like swallowing errors like this,\n                // but it's a noncritical feature built off an\n                // undocumented api, sooo....\n                return null;\n            });\n    }\n\n    async getStatusPromise(user) {\n        // broadcaster always counts as active\n        if (user === this.channel) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        // sent a chat message in the last X mins?\n        if (this.lastMessageTimes[user] && this.minsSinceLastChatMessage(user) < MAX_IDLE_TIME_MINUTES) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        return this.getChatters().then((chatters) =>\n            !chatters || !chatters.includes(user)\n                ? ActivityStatus.DISCONNECTED\n                : ActivityStatus.IDLE\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/lock.6857c469.svg\";","import {ActivityStatus} from '../ChatActivity';\nimport React, {Component} from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport lock from '../images/lock.svg';\n\nimport './GameRequest.css';\n\nclass GameRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeDiff: 0,\n            activityStatus: null\n        };\n\n        this.deleteRequest = this.deleteRequest.bind(this);\n        this.getFormattedTimeDiff = this.getFormattedTimeDiff.bind(this);\n        this.getTooltipContents = this.getTooltipContents.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.updateStatus = this.updateStatus.bind(this);\n    }\n\n    deleteRequest = (e) => {\n        this.props.onDelete(this.props.gameName)\n    }\n\n    getFormattedTimeDiff = (timestamp) => {\n        let unit = \"minute\";\n        let timeDiff = Math.floor((Date.now() - timestamp) / 60000);\n        if (timeDiff === 0) {\n            return \"just now\";\n        }\n        if (timeDiff >= 60) {\n            unit = \"hour\";\n            timeDiff = Math.floor(timeDiff / 60);\n\n            if (timeDiff >= 24) {\n                unit = \"day\";\n                timeDiff = Math.floor(timeDiff / 24);\n            }\n        }\n        return `${timeDiff} ${unit}${timeDiff === 1 ? \"\" : \"s\"} ago`;\n    }\n\n    getTooltipContents = () => {\n        let statusClass = \"\";\n        switch (this.state.activityStatus) {\n            case ActivityStatus.ACTIVE:\n                statusClass = \"active\";\n                break;\n            case ActivityStatus.IDLE:\n                statusClass = \"idle\";\n                break;\n            case ActivityStatus.DISCONNECTED:\n                statusClass = \"disconnected\";\n                break;\n            default:\n                // no data back yet; don't show an activity status indicator at all\n                break;\n        }\n\n        // return (`\n        //     <div class=\"tooltip\">\n        //         <p class=\"tooltipText\">\n        //             Requested ${this.state.timeDiff} by ${this.props.metadata.username}\n        //         </p>\n        //         <div class=\"status ${statusClass}\" />\n        //     </div>`\n        // );\n        return (\n            <div className=\"tooltip\">\n                <p className=\"tooltipText\">\n                    Requested {this.state.timeDiff} by {this.props.metadata.username}\n                </p>\n                <div className={`status ${statusClass}`} />\n            </div>\n        );\n    }\n\n    toggleLock = () => {\n        this.props.toggleLock(this.props.gameName)\n    }\n\n    updateStatus = async () => {\n        // return Date.now();\n        let activityStatus;\n        try {\n            activityStatus = await this.props.getActivity(this.props.metadata.username);\n            return this.setState({\n                timeDiff: this.getFormattedTimeDiff(this.props.metadata.time),\n                activityStatus\n            });\n        } catch(err) {\n            throw err;\n        }\n    }\n\n    render() {\n        const lockClassName = this.props.metadata.locked ? 'lock locked' : 'lock unlocked';\n        const cardStatus = this.props.metadata.chosen ? 'chosen' : 'pending';\n\n        const renderTooltip = (props) => (\n            <Tooltip id=\"game-request-tooltip\" {...props}>\n                <span className=\"tooltipText\">Requested {this.state.timeDiff} by {this.props.metadata.username}</span>\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                placement=\"left\"\n                overlay={renderTooltip}\n                onEnter={this.updateStatus}>\n                <div className=\"game-request-wrapper fade-in\">\n                \t<div id=\"baseDiv\" className={`game-request ${cardStatus}`}>\n                \t\t<div className=\"game-request-body\">\n                \t\t    {this.props.gameName}\n                \t\t\t<div className=\"options\">\n                \t\t\t\t<img src={lock} alt=\"lock\" className={lockClassName} onClick={this.toggleLock} />\n                \t\t\t\t<button type='button' className=\"deleteButton\" onClick={this.deleteRequest}>X</button>\n                \t\t\t</div>\n                \t\t</div>\n                \t</div>\n                </div>\n            </OverlayTrigger>\n        );\n    }\n}\nexport default GameRequest;\n","export default __webpack_public_path__ + \"static/media/JackboxGames.1733bebb.yaml\";","import {Component} from 'react';\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport YAML from 'yaml'\nconst fetch = require('node-fetch');\nconst tmi = require('tmi.js');\n\nconst GAME_REQUEST_COMMAND = \"!request\";\n\nconst easterEggRequests = [\n    {\n        RequestName: 'Affection',\n        Response: 'there there, it\\'s going to be okay. VirtualHug',\n        Variants: [\n            'a friend',\n            'a hug',\n            'a kiss',\n            'friend',\n            'hug',\n            'kiss',\n            'affection',\n            'a shoulder to cry on',\n            'shoulder to cry on'\n        ]\n    }, {\n        RequestName: 'Goose',\n        Response: 'please don\\'t taunt the wheel. Honk.',\n        Variants: [\n            'goose',\n            'honk',\n            'meow',\n            'mrow',\n            'woof',\n            'bark',\n            'nugs',\n            'chicken nugs'\n        ]\n    }, {\n        RequestName: 'Lewmon',\n        Response: 'please don\\'t taunt the wheel. sirfar3Lewmon sirfar3Lewmon sirfar3Lewmon',\n        Variants: [\n            'lewmon',\n            'sirfar3lewmon'\n        ]\n    }, {\n        RequestName: 'DoTheDew',\n        Response: 'dewinbDTD dewinbDance dewinbGIR dewinbDance dewinbGIR dewinbDance dewinbDTD',\n        Variants: [\n            'dothedew',\n            'dewinblack'\n        ]\n    }\n];\n\nexport default class MessageHandler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            client: null,\n            validGames: []\n        };\n        this.getTwitchClient = this.getTwitchClient.bind(this);\n        this.isModOrBroadcaster = this.isModOrBroadcaster.bind(this);\n        this.checkForMiscCommands = this.checkForMiscCommands.bind(this);\n        this.findGame = this.findGame.bind(this);\n        this.checkForGameCommand = this.checkForGameCommand.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n    }\n\n    componentDidMount = (props) => {\n        const client = this.getTwitchClient(this.props);\n        this.client = client;\n\n        client.on('message', this.onMessage);\n        client.connect();\n\n        return this.getGameList(rawJackboxGameList, client);\n    }\n\n    componentWillUnmount = (props) => {\n        try {\n            if (this.client) {\n                this.client.disconnect();\n            }\n        } catch(e) {\n            console.log('Error', e);\n        }\n    }\n\n    getGameList = async (yamlGameList, client) => {\n        return await fetch(yamlGameList)\n            .then(r => r.text())\n            .then(text => {\n                return this.setState({\n                    client,\n                    validGames: YAML.parse(text)\n                });\n            }).catch(e => {\n                console.warn(e);\n            });\n    }\n\n    getTwitchClient = (props) => {\n        return new tmi.client({\n            identity: {\n                username: props.channel,\n                password: props.access_token\n            },\n            channels: [\n                props.channel\n            ]\n        });\n    }\n\n    isModOrBroadcaster = (username) => {\n        return (this.props.channel === username || this.props.modList.includes(username.toLowerCase()));\n    }\n\n    // returns true iff a known command was found & responded to\n    checkForMiscCommands = (message, username) => {\n        //========= general =========\n        if (message.startsWith(\"!gamelist\") || message.startsWith(\"!gameslist\")) {\n            this.sendMessage(`/me @${username}, click here for a list of valid Jackbox games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n            return true;\n        }\n\n        if (message === \"!wheelcommands\") {\n            this.sendMessage(`/me @${username}, click here to read about all supported commands: https://github.com/asukii314/twitch-request-wheel/blob/master/src/Commands.yaml`);\n            return true;\n        }\n\n        if (message.startsWith(\"!whichpack\")) {\n            const requestedGame = message.replace(\"!whichpack\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to look up the party pack for: e.g. !whichpack TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                this.sendMessage(`/me @${username}, ${gameObj.name} is a ${gameObj.partyPack} game.`);\n            }\n            return true;\n        }\n\n        //========= enable / disable requests =========\n        if ( message.startsWith(\"!enablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(true);\n            this.sendMessage(`/me @${username}, requests have now been enabled! Type \"!request\" followed by the game you want to play.`);\n            return true;\n        }\n        if ( message.startsWith(\"!disablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(false);\n            this.sendMessage(`/me @${username}, requests have now been disabled.`);\n            return true;\n        }\n\n        //========= advance next game =========\n        if (message === \"!advancenextgame\" || message === \"!nextgamefwd\" || message === \"!nextgameforward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(1)) {\n                if (this.props.upcomingGames.length > 0) {\n                    // console.log(this.props.upcomingGames)\n                    this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n                } else {\n                    this.sendMessage(`/me @${username}, the next game has been marked as \"TBD\".`);\n                }\n            } else {\n                this.sendMessage(`/me @${username}, there are no more games in the queue to advance to!`);\n            }\n            return true;\n        }\n\n        //========= advance prev game =========\n        if (message === \"!nextgameback\" || message === \"!nextgamebackward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(-1)) {\n                this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n            } else {\n                this.sendMessage(`/me @${username}, there are no previous games in the queue to go back to!`);\n            }\n            return true;\n        }\n\n        //========= set next game =========\n        if (message.startsWith(\"!setnextgame\") || message.startsWith(\"!redeemgame\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use the ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} command.`);\n                return true;\n            }\n\n            const requestedGame = message.replace(\"!setnextgame\", \"\").replace(\"!redeemgame\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to insert in the queue: for example, ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                const numGamesAhead = this.props.setNextGame(gameObj);\n                if (numGamesAhead === 0) {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted as the next game in the queue.`);\n                } else {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted in the queue following ${numGamesAhead} other manual game request${numGamesAhead > 1 ? 's' : ''}.`);\n                }\n\n            }\n            return true;\n        }\n\n        //========= player queue management =========\n        if (message === \"!caniplay\" || message === \"!new\") {\n            this.props?.caniplayHandler(username, {\n                sendConfirmationMsg: message !== \"!new\"\n            });\n            return true;\n        }\n\n        if (message.startsWith(\"!priorityseat\") || message.startsWith(\"!redeemseat\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const redeemingUser = message.replace(\"!priorityseat\", \"\").replace(\"!redeemseat\", \"\").replace(\"@\", \"\").trim();\n            if (redeemingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who has redeemed a priority seat in the next game: for example, ${message.startsWith(\"!p\") ? \"!priorityseat\" : \"!redeemseat\"} @asukii314`);\n                return true;\n            }\n            this.props?.caniplayHandler(redeemingUser, {\n                sendConfirmationMsg: true,\n                isPrioritySeat: true\n            });\n            return true;\n        }\n\n        if ( message.startsWith(\"!removeuser\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const exitingUser = message.replace(\"!removeuser\", \"\").replace(\"@\", \"\").trim();\n            if (exitingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who will be removed in the next game: for example, !removeuser @dewinblack`);\n                return true;\n            }\n            this.props?.playerExitHandler(exitingUser);\n            return true;\n        }\n\n        if (message === \"!leave\" || message === \"!murd\") {\n            this.props?.playerExitHandler(username);\n            return true;\n        }\n\n        if (message === \"!clear\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!open\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!clearopen\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!close\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.closeQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!startgame\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.startGame()) {\n                this.sendMessage(`/me @${username}, the game has been started.`);\n            } else {\n                this.sendMessage(`/me @${username}, the game was already started.`);\n            }\n            return true;\n        }\n\n        if (message.startsWith(\"!redeem\")) {\n            this.sendMessage(`/me @${username}, this command is no longer supported: please specify either !redeemgame or !redeemseat.`);\n            return true;\n        }\n        return;\n    }\n\n    findGame = (requestedGame, username) => {\n        // easter egg responses\n        for (let requestEntry of easterEggRequests) {\n            if (requestEntry?.Variants?.includes(requestedGame)) {\n                this.sendMessage(`/me @${username} ${requestEntry.Response}`);\n                return null;\n            }\n        }\n        // check against games\n        for (let partyPackName in this.state.validGames) {\n            const partyPackObj = this.state.validGames[partyPackName]\n            for (const [formalGameName, metadata] of Object.entries(partyPackObj)) {\n                if (metadata?.Variants?.includes(requestedGame)) {\n                    return {\n                        name: formalGameName,\n                        longName: `${formalGameName} (${partyPackName})`,\n                        partyPack: partyPackName,\n                        ...metadata\n                    };\n                }\n            }\n        }\n        this.sendMessage(`/me @${username}, ${requestedGame} could not be found in the list of valid Jackbox games. Click here for a list of valid games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n        return;\n    }\n\n    checkForGameCommand = (message, username) => {\n        if (!message.startsWith(GAME_REQUEST_COMMAND)) return;\n\n        const requestedGame = message.replace(GAME_REQUEST_COMMAND, \"\").trim();\n\n        if (requestedGame === \"\") {\n            this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\n            return null;\n        }\n\n        return this.findGame(requestedGame, username);\n    }\n\n    onMessage = (target, tags, msg, self) => {\n        if (self) return;\n        this.props.onMessage(msg, tags.username, tags)\n\n        if (msg.trim() === \"!nextgame\") {\n            if (this.props.upcomingGames && this.props.upcomingGames.length > 0) {\n                let upcoming = this.props.upcomingGames[0].name;\n                if (this.props.upcomingGames.length > 1) {\n                    upcoming += `, followed by ${this.props.upcomingGames[1].name}`\n                    for (let i = 2; i < this.props.upcomingGames.length; i++) {\n                        upcoming += `, and ${this.props.upcomingGames[i].name}`\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the next game up is ${upcoming}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, the next game hasn't been decided yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        if (msg.trim() === \"!lastgame\") {\n            if (this.props.previousGames && this.props.previousGames.length > 0) {\n                let previous = this.props.previousGames[0].name;\n                if (this.props.previousGames.length > 1) {\n                    previous += `, followed by ${this.props.previousGames[1].name}`\n                    for (let i = 2; i < this.props.previousGames.length; i++) {\n                        previous += `, and ${this.props.previousGames[i].name}`\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the last game played was ${previous}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, no games have been played yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        const cleanedMsg = msg.trim().toLowerCase();\n        if (this.checkForMiscCommands(cleanedMsg, tags.username)) return;\n        const gameObj = this.checkForGameCommand(cleanedMsg, tags.username);\n        if (!gameObj) return;\n\n        if (this.props.messages[gameObj.longName]) {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has already been requested!`);\n            return;\n        }\n\n        if (this.props.allowGameRequests !== true) {\n            this.sendMessage(`/me @${tags.username}, game requests are currently paused at the moment, please try again later.`);\n            return;\n        }\n\n\n        let prevRequestedGameName = null;\n        for (const metadata of Object.values(this.props.messages)) {\n            if (metadata.username === tags.username) {\n                prevRequestedGameName = metadata.longName;\n                break;\n            }\n        }\n\n        if (prevRequestedGameName) {\n            if (this.props.channel === tags.username) {\n                this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue. Your previous game request(s) weren't deleted, since you have special broadcaster privilege :P`);\n            } else {\n                this.props.onDelete(prevRequestedGameName);\n                this.sendMessage(`/me @${tags.username}, your previous request of ${prevRequestedGameName} has been replaced with ${gameObj.name}.`);\n            }\n        } else {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue.`);\n        }\n\n        this.props.addGameRequest(gameObj, tags.username);\n        return;\n    }\n\n    sendMessage = (msg) => {\n        this.state.client.say(this.props.channel, msg)\n    }\n\n    render() {\n        return null;\n    }\n}\n","const stateMainScreen = {\n    \"gameSelected\": null,\n    \"messages\": {\n        \"Survive The Internet (Party Pack 4)\": {\n            \"name\": \"Survive The Internet\",\n            \"longName\": \"Survive The Internet (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"survive\",\n                \"survive the internet\",\n                \"sti\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628112883959,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash (Any Version)\": {\n            \"name\": \"Quiplash\",\n            \"longName\": \"Quiplash (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"quiplash\",\n                \"quip\",\n                \"ql\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628113055677,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"You Don't Know Jack (Party Pack 5)\": {\n            \"name\": \"You Don't Know Jack\",\n            \"longName\": \"You Don't Know Jack (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ydkj 2\",\n                \"ydkj fs\",\n                \"ydkjfs\",\n                \"you dont know jack 2\",\n                \"you don't know jack 2\",\n                \"you don't know jack full stream\",\n                \"you don't know jack full steam\",\n                \"you don't know jack: full stream\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114634007,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Mad Verse City (Party Pack 5)\": {\n            \"name\": \"Mad Verse City\",\n            \"longName\": \"Mad Verse City (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"mvc\",\n                \"madverse\",\n                \"mad verse\",\n                \"madversecity\",\n                \"mad verse city\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114645263,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Monster Seeking Monster (Party Pack 4)\": {\n            \"name\": \"Monster Seeking Monster\",\n            \"longName\": \"Monster Seeking Monster (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 7,\n            \"Variants\": [\n                \"msm\",\n                \"monster seeking monster\",\n                \"monster seeking monsters\",\n                \"monsters seeking monsters\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114646991,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Blather 'Round (Party Pack 7)\": {\n            \"name\": \"Blather 'Round\",\n            \"longName\": \"Blather 'Round (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 2,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"blather\",\n                \"blather round\",\n                \"blather 'round\",\n                \"blatherround\",\n                \"blatheround\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114733155,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Talking Points (Party Pack 7)\": {\n            \"name\": \"Talking Points\",\n            \"longName\": \"Talking Points (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"talking points\",\n                \"talkingpoints\",\n                \"talk points\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114749438,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic Phone (Standalone)\": {\n            \"name\": \"Gartic Phone\",\n            \"longName\": \"Gartic Phone (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min players\": 4,\n            \"Max players\": 30,\n            \"Variants\": [\n                \"gartic phone\",\n                \"garticphone\",\n                \"garlic phone\",\n                \"garlicphone\",\n                \"gartic\",\n                \"garlic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114761558,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Drawful (Any Version)\": {\n            \"name\": \"Drawful\",\n            \"longName\": \"Drawful (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"drawful\",\n                \"drawfull\",\n                \"draw full\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114769626,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Words on Stream (Standalone)\": {\n            \"name\": \"Words on Stream\",\n            \"longName\": \"Words on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"words on stream\",\n                \"word on stream\",\n                \"words stream\",\n                \"word stream\",\n                \"words\",\n                \"wos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114772430,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic on Stream (Standalone)\": {\n            \"name\": \"Gartic on Stream\",\n            \"longName\": \"Gartic on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"gartic on stream\",\n                \"garlic on stream\",\n                \"garlic stream\",\n                \"gartic stream\",\n                \"gos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114776310,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"The Devils and the Details (Party Pack 7)\": {\n            \"name\": \"The Devils and the Details\",\n            \"longName\": \"The Devils and the Details (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"devils\",\n                \"devils in details\",\n                \"devils and details\",\n                \"devils & details\",\n                \"devil's in details\",\n                \"devil's and details\",\n                \"devil's & details\",\n                \"devils in the details\",\n                \"devils and the details\",\n                \"devils & the details\",\n                \"devil's in the details\",\n                \"devil's and the details\",\n                \"devil's & the details\",\n                \"the devils in the details\",\n                \"the devils and the details\",\n                \"the devils & the details\",\n                \"the devil's in the details\",\n                \"the devil's and the details\",\n                \"the devil's & the details\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114937776,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Fibbage: Enough About You (Party Pack 4)\": {\n            \"name\": \"Fibbage: Enough About You\",\n            \"longName\": \"Fibbage: Enough About You (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"eay\",\n                \"enough about you\",\n                \"feay\",\n                \"fibbage eay\",\n                \"fibbage: eay\",\n                \"fibbage enough about you\",\n                \"fibbage: enough about you\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114942915,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Champ'd Up (Party Pack 7)\": {\n            \"name\": \"Champ'd Up\",\n            \"longName\": \"Champ'd Up (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"champd\",\n                \"champed\",\n                \"champd up\",\n                \"champ'd\",\n                \"champ'd up\",\n                \"champed up\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114981572,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Civic Doodle (Party Pack 4)\": {\n            \"name\": \"Civic Doodle\",\n            \"longName\": \"Civic Doodle (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"civic doodle\",\n                \"civicdoodle\",\n                \"civic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628115017116,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 2 (Party Pack 6)\": {\n            \"name\": \"Trivia Murder Party 2\",\n            \"longName\": \"Trivia Murder Party 2 (Party Pack 6)\",\n            \"partyPack\": \"Party Pack 6\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp2\",\n                \"tmp 2\",\n                \"trivia murder party 2\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628118545790,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash 3 (Party Pack 7)\": {\n            \"name\": \"Quiplash 3\",\n            \"longName\": \"Quiplash 3 (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ql3\",\n                \"ql 3\",\n                \"quip 3\",\n                \"quip3\",\n                \"quiplash 3\",\n                \"quiplash3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628121075780,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 1 (Party Pack 3)\": {\n            \"name\": \"Trivia Murder Party 1\",\n            \"longName\": \"Trivia Murder Party 1 (Party Pack 3)\",\n            \"partyPack\": \"Party Pack 3\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp1\",\n                \"tmp 1\",\n                \"trivia murder party 1\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628122719930,\n            \"locked\": false,\n            \"chosen\": false\n        }\n    },\n    \"colors\": [\n        \"#75a5e5\",\n        \"#847cef\",\n        \"#74aee0\",\n        \"#86efed\",\n        \"#63bbd8\",\n        \"#c9d8ff\",\n        \"#97ecef\",\n        \"#bcefff\",\n        \"#9caff4\",\n        \"#b9a4f2\",\n        \"#9fbbfc\",\n        \"#affffc\",\n        \"#a1bef4\",\n        \"#7ee7fc\",\n        \"#97c1ef\",\n        \"#a4a4fc\",\n        \"#a4a5f4\",\n        \"#b7f1ff\",\n        \"#79bdfc\",\n        \"#6885dd\",\n        \"#98e1f2\",\n        \"#aac1ff\",\n        \"#a583fc\",\n        \"#8991e5\",\n        \"#6edddd\",\n        \"#a7b7ef\",\n        \"#74e2e8\",\n        \"#9c9af9\",\n        \"#9dd5f2\",\n        \"#6a73ed\",\n        \"#b19df9\",\n        \"#88eaea\",\n        \"#6b91ef\",\n        \"#9de1f9\",\n        \"#7691fc\",\n        \"#d0c4fc\",\n        \"#c9d7ff\",\n        \"#84a7ed\",\n        \"#809bfc\",\n        \"#63d0d8\",\n        \"#b8cbfc\",\n        \"#a3a0ff\",\n        \"#b4f4f7\",\n        \"#9c9efc\",\n        \"#8ae8f7\",\n        \"#7985ea\",\n        \"#7876e8\",\n        \"#cfc2fc\",\n        \"#bfcfff\",\n        \"#92a9f4\",\n        \"#d0c2fc\",\n        \"#adc9f7\",\n        \"#767ce0\",\n        \"#95a1f9\",\n        \"#a286f4\",\n        \"#8085ed\",\n        \"#c4c9fc\",\n        \"#7c8ff9\",\n        \"#7079f9\",\n        \"#aaa5ff\",\n        \"#8db7e8\",\n        \"#9e94e8\",\n        \"#a5ffff\",\n        \"#76ade8\",\n        \"#a9f5fc\",\n        \"#a0a5ff\",\n        \"#9cbffc\",\n        \"#8fa2e8\",\n        \"#8eeeff\",\n        \"#88ccf7\",\n        \"#b0f2f4\",\n        \"#8e7fef\",\n        \"#aef9f8\",\n        \"#8beef9\",\n        \"#7a8ef4\",\n        \"#c7c4fc\",\n        \"#7b87f2\",\n        \"#7b77ea\",\n        \"#859be5\",\n        \"#7191e8\",\n        \"#aadaef\",\n        \"#b1aaf7\",\n        \"#80bff7\",\n        \"#95e0f4\",\n        \"#a3e5ed\",\n        \"#91a1f2\",\n        \"#c0c4f9\",\n        \"#7a90f4\",\n        \"#85def2\",\n        \"#87f2ee\",\n        \"#cac6ff\",\n        \"#76c3f7\",\n        \"#c2dcfc\",\n        \"#a2a2f9\",\n        \"#ccd7ff\",\n        \"#978fef\",\n        \"#8d77e5\",\n        \"#bad0fc\",\n        \"#ccf7ff\"\n    ],\n    \"counter\": 26,\n    \"history\": [\n        {\n            \"name\": \"Zeeple Dome\",\n            \"longName\": \"Zeeple Dome (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"zeeple\",\n                \"zeeple dome\",\n                \"zeepledome\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114757634,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Split the Room\",\n            \"longName\": \"Split the Room (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"split the room\",\n                \"splittheroom\",\n                \"split room\",\n                \"room split\",\n                \"split\",\n                \"str\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114989864,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Fibbage 3\",\n            \"longName\": \"Fibbage 3 (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"fibbage 3\",\n                \"fibbage3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114666823,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Trivia Murder Party\",\n            \"longName\": \"Trivia Murder Party (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp\",\n                \"trivia murder party\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628106145996,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        }\n    ],\n    \"nextGameIdx\": 0,\n    \"showPlayerSelect\": false\n};\n\nconst statePlayerSelect = {\n    \"interested\": [\n        {\n            \"username\": \"player6\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player3\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player9\"\n        },\n        {\n            \"username\": \"dcpesses\"\n        }\n    ],\n    \"playing\": [\n        {\n            \"username\": \"player1\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player7\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player8\"\n        },\n        {\n            \"username\": \"player5\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player2\",\n            \"isPrioritySeat\": true\n        }\n    ],\n    \"joined\": [],\n    \"streamerSeat\": true,\n    \"isQueueOpen\": true,\n    \"columnWidth\": 634\n}\n\nexport {\n    stateMainScreen as MainScreen,\n    statePlayerSelect as PlayerSelect\n};\n","export default __webpack_public_path__ + \"static/media/dice.021a7158.svg\";","export default __webpack_public_path__ + \"static/media/star.de82f684.svg\";","import React, { Component } from 'react';\r\nimport * as fakeStates from '../example-states';\r\n\r\nimport dice from '../images/dice.svg';\r\nimport star from '../images/star.svg';\r\n\r\nimport './PlayerSelect.css';\r\n\r\nexport default class PlayerSelect extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.firstColumn = React.createRef();\r\n        this.state = {\r\n            interested: [],\r\n            playing: [],\r\n            joined: [],\r\n            streamerSeat: false,\r\n            isQueueOpen: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\r\n            this.setState(fakeStates.PlayerSelect);\r\n        }\r\n        this.updateColumnSizes();\r\n        window.addEventListener(\"resize\", this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    updateColumnSizes = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                columnWidth: this.firstColumn.current.offsetWidth\r\n            };\r\n        })\r\n    }\r\n\r\n    handleNewPlayerRequest = (username, {isPrioritySeat=false}) => {\r\n        if (isPrioritySeat) {\r\n            // even if the queue is closed, still add them to the interested column for consideration\r\n            const column = (this.state.isQueueOpen ? 'playing' : 'interested');\r\n\r\n            return this.updateColumnForUser({username, isPrioritySeat}, column)\r\n                ? 'you have been successfully added to the lobby.'\r\n                : 'there was an error adding you to the lobby.';\r\n        }\r\n\r\n        if (this.state?.interested?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.playing?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.joined?.map((uObj) => uObj.username)?.includes(username)) {\r\n            return 'you are already in the lobby.';\r\n        }\r\n\r\n        if (!this.state.isQueueOpen) {\r\n            return 'the queue is currently closed; users have already been selected for this game.';\r\n        }\r\n        return this.updateColumnForUser({username}, 'interested')\r\n            ? 'you have successfully joined the lobby.'\r\n            : 'there was an error adding you to the lobby.';\r\n    }\r\n\r\n    updateColumnForUser = (userObj, newColumn) => {\r\n        if (!this.state || !this.state[newColumn]) return false;\r\n\r\n        this.removeUser(userObj.username);\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [newColumn]: [\r\n                    ...state[newColumn],\r\n                    userObj\r\n                ]\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    removeUser = (username) => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: state.interested.filter((iObj) => iObj.username !== username),\r\n                playing: state.playing.filter((pObj) => pObj.username !== username),\r\n                joined:  state.joined.filter((jObj) => jObj.username !== username)\r\n            }\r\n        });\r\n    }\r\n\r\n    clearQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            }\r\n        })\r\n    }\r\n\r\n    openQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: true\r\n            }\r\n        })\r\n    }\r\n\r\n    closeQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: false\r\n            }\r\n        })\r\n    }\r\n\r\n    playerCount = () => {\r\n        return this.state.playing.length + this.state.joined.length +\r\n                        (this.state.streamerSeat ? 1 : 0);\r\n    }\r\n\r\n    toggleStreamerSeat = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                streamerSeat: !state.streamerSeat\r\n            }\r\n        });\r\n    }\r\n\r\n    canStartGame = () => {\r\n        return this.props.game?.['Max players'] >= this.playerCount() &&\r\n                     this.props.game?.['Min players'] <= this.playerCount();\r\n    }\r\n\r\n    startGame = () => {\r\n        // clear for now; eventually, save elsewhere to report on user play history for that session\r\n        this.setState ((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            };\r\n        })\r\n        this.props.startGame();\r\n    }\r\n\r\n    randomizePlayers = () => {\r\n        const numPlayersToAdd = Math.min(\r\n            this.props.game['Max players'] - this.playerCount(),\r\n            this.state.interested.length\r\n        );\r\n\r\n        let randIdx, randUsername;\r\n        let randIdxArray = [], randUsernameArray = [];\r\n        // let interested = this.state.interested;\r\n        let playing = this.state.playing;\r\n\r\n        while(randIdxArray.length < numPlayersToAdd) {\r\n            randIdx = Math.floor(Math.random() * this.state.interested.length);\r\n            if (!randIdxArray.includes(randIdx)) {\r\n                randIdxArray.push(randIdx);\r\n                randUsername = this.state.interested[randIdx].username;\r\n                randUsernameArray.push(randUsername);\r\n                playing = [\r\n                    ...playing,\r\n                    this.state.interested[randIdx]\r\n                ];\r\n            }\r\n        }\r\n        this.setState((state) => {\r\n            return {\r\n                interested: state.interested.filter((uObj) => !randUsernameArray.includes(uObj.username)),\r\n                playing\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPlayerCard = (userObj, id, curColumn) => {\r\n        return (\r\n            <div key={id} className=\"player-card lh-sm fs-6\">\r\n                <div className=\"player-card-username\">\r\n                    {userObj.isPrioritySeat === true && <img src={star} alt=\"Priority seat redemption\"/>}\r\n                    <p className='player-name' style={{\r\n                        maxWidth: this.state.columnWidth - 25\r\n                    }}>{userObj.username}</p>\r\n                </div>\r\n                <div className=\"change-col-buttons-container\">\r\n                    {curColumn !== 'interested' && <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'interested')}>Interested</button>}\r\n                    {curColumn !== 'playing' && <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'playing')}>Playing</button>}\r\n                    {/*curColumn !== 'joined' && <button className='change-col' onClick={this.updateColumnForUser.bind(this, userObj, 'joined')}>Joined</button>*/}\r\n                    <button className=\"change-col\" onClick={this.removeUser.bind(this, userObj.username)}>X</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStreamerSeatToggle = () => {\r\n        return (\r\n            <div className=\"toggle-streamer-seat\">\r\n                <label className=\"toggle-label form-check-label\" for=\"reserve-seat-for-streamer\">\r\n                    Reserve seat for streamer?\r\n                </label>\r\n                <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"reserve-seat-for-streamer\" defaultChecked={this.state.streamerSeat} onChange={this.toggleStreamerSeat} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPlayerCount = () => {\r\n        let className = 'player-count';\r\n        if (this.props.game?.['Max players'] < this.playerCount()) {\r\n            className += ' overlimit';\r\n        }\r\n        return (\r\n            <div className={className}>\r\n                {this.playerCount()} of {this.props.game?.['Max players']} seats claimed\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let startGameClass = 'btn btn-sm start-game';\r\n        if (this.playerCount() < this.props.game?.['Min players']){\r\n            startGameClass += ' disabled';\r\n        }\r\n\r\n        return (\r\n            <div className=\"card player-select-container\">\r\n                <div className=\"card-header d-flex justify-content-between\">\r\n                    {this.renderStreamerSeatToggle()}\r\n                    <div className=\"fs-2 lh-sm game-name\">\r\n                        <b>{this.props.game?.name ?? \"TBD\"}</b>\r\n                        {this.renderPlayerCount()}\r\n                    </div>\r\n                    <button className={startGameClass} onClick={this.startGame} disabled={!this.canStartGame()}>Start Game</button>\r\n                </div>\r\n                <div className=\"card-body player-card-container\">\r\n                    <div ref={this.firstColumn} className='player-card-column interested'>\r\n                        <p className=\"player-card-column-header\">Interested</p>\r\n                        {this.state.interested.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                        {this.state.interested.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                    </div>\r\n\r\n                    <div className='player-card-column playing'>\r\n                        <p className=\"player-card-column-header\">Playing\r\n                        <button className=\"dice\" onClick={this.randomizePlayers}>\r\n                            <img src={dice} alt=\"dice icon\"/>\r\n                        </button>\r\n                        </p>\r\n                        {this.state.playing.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                        {this.state.playing.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                    </div>\r\n\r\n                    {/*<div className='player-card-column joined'>\r\n                        <p className=\"player-card-column-header\">Joined</p>\r\n                        {this.state.joined.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                        {this.state.joined.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                    </div>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: 0\n        }\n\n        this.getHistoryList = this.getHistoryList.bind(this);\n        this.getNextGameName = this.getNextGameName.bind(this);\n        this.getNextGamePartyPack = this.getNextGamePartyPack.bind(this);\n        this.hasNextGame = this.hasNextGame.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.printGame = this.printGame.bind(this);\n    }\n\n    getHistoryList = (history) => {\n        if (history.length === 0) {\n            return (\n                <span className=\"history-placeholder\" key='placeholder'>No games yet</span>\n            );\n        }\n        return (\n            <Droppable droppableId=\"historyList\">\n                {(provided) => (\n                    <span className=\"historyList\" {...provided.droppableProps} ref={provided.innerRef}>\n                        {history.map(({name, time}, index) => {\n                            return (\n                                <Draggable key={`${time}`} draggableId={`${time}`} index={index}>\n                                    {(provided) => (\n                                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                            {this.printGame(index)}\n                                        </li>\n                                    )}\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </span>\n                )}\n            </Droppable>\n        );\n    }\n\n    getNextGameName = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].name\n            : 'not yet decided';\n    }\n\n    getNextGamePartyPack = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].partyPack\n            : null;\n    }\n\n    handleOnDragEnd = (result) => {\n        if (!result.destination) return;\n\n        const _items = Array.from(this.props.history).fill();\n        _items[this.props.nextGameIdx] = true;\n        const [_reorderedItem] = _items.splice(result.source.index, 1);\n        _items.splice(result.destination.index, 0, _reorderedItem);\n\n        const newNextGameIdx = _items.findIndex(i => i);\n\n        const items = Array.from(this.props.history);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        this.props.changeGameOrder(items, newNextGameIdx);\n    }\n\n    hasNextGame = () => {\n        return this.props.history.length > this.props.nextGameIdx;\n    }\n\n    moveNextGameFwd = () => {\n        return this.props.changeNextGameIdx(1);\n    }\n\n    moveNextGameBack = () => {\n        return this.props.changeNextGameIdx(-1);\n    }\n\n    printGame = (idx) => {\n        if (idx === this.props.nextGameIdx) {\n            return (\n                <b>{this.props.history[idx].name}</b>\n            );\n        }\n        return this.props.history[idx].name;\n    }\n\n    render() {\n        let nextGame = this.hasNextGame();\n\n        let buttonPlayerSelect;\n        switch (this.props.requestMode) {\n            case 'game':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"open-seat-requests\" disabled={!nextGame} onClick={this.props.togglePlayerSelect}>\n                        OPEN SEAT REQUESTS\n                    </button>\n                )\n                break;\n            case 'seat':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"return-to-wheel\" onClick={this.props.togglePlayerSelect}>\n                        RETURN TO WHEEL\n                    </button>\n                )\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <div id=\"sidebar\" className={this.props.requestMode}>\n                <div className=\"card sidebar-panel\">\n                    <div className=\"card-header fw-bolder\">\n                        Up Next\n                    </div>\n                    <div className=\"card-body sidebar-up-next-panel\">\n                        <h6 className=\"card-title mb-2 fw-bolder\">\n                            {this.getNextGameName()}\n                        </h6>\n                        <div className=\"card-subtitle mb-2 fs-7 fst-italic text-light\"\n                            style={{'--bs-text-opacity': '0.75'}}>\n                            {this.getNextGamePartyPack()}\n                        </div>\n\n                        {buttonPlayerSelect}\n                    </div>\n                </div>\n\n                <div className=\"nav-wrapper py-2\">\n                    <button className=\"btn-sm move-next-game-back\" onClick={this.moveNextGameBack}> &#8678; </button>\n                    <button className=\"btn-sm move-next-game-fwd\" onClick={this.moveNextGameFwd}> &#8680; </button>\n                </div>\n\n                <div className=\"card sidebar-panel\">\n                    <DragDropContext onDragEnd={this.handleOnDragEnd}>\n                        <div className=\"card-header fw-bolder\">\n                            History\n                        </div>\n                        <div className=\"card-body sidebar-history-list-panel\">\n                            {this.getHistoryList(this.props.history)}\n                        </div>\n                    </DragDropContext>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {useEffect, useState} from 'react';\n\nconst WheelComponent = ({\n    segments,\n    segColors,\n    winningSegment,\n    onStart = ()=>{},\n    onSpinProgress,\n    onFinished,\n    primaryColor,\n    contrastColor,\n    buttonText,\n    isOnlyOnce = true,\n    size = 290,\n    upDuration = 100,\n    downDuration = 1000,\n    fontFamily = 'proxima-nova',\n    wheelHeight = 720,\n    wheelWidth = 600,\n    enableScrollTop = true,\n    multilineDelimiter = null\n}) => {\n    let currentSegment = '';\n    let currentSegmentLabel = '';\n    let isStarted = false;\n    const [isFinished, setFinished] = useState(false);\n    let timerHandle = 0;\n    const timerDelay = segments.length;\n    let angleCurrent = 0;\n    let angleDelta = 0;\n    let canvasContext = null;\n    let maxSpeed = Math.PI / `${segments.length}`;\n    const upTime = segments.length * upDuration;\n    const downTime = segments.length * downDuration;\n    let spinStart = 0;\n    let frames = 0;\n    const centerX = Math.round(wheelWidth/2);\n    const centerY = Math.round(wheelHeight/2.5);\n\n    useEffect(() => {\n        wheelInit();\n        if (enableScrollTop) {\n            setTimeout(() => {\n                window.scrollTo(0, 1);\n            }, 0);\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // const spinButton = new Path2D();\n    // TODO: fix scope issues with button\n    // canvasContext.beginPath();\n    // spinButton.arc(centerX, centerY, 50, 0, 2 * Math.PI, false);\n    // canvasContext.fill(rectangle);\n    // canvasContext.beginPath();\n    // canvasContext.arc(centerX, centerY, 50, 0, PI2, false);\n    // canvasContext.closePath();\n\n    const wheelInit = () => {\n        initCanvas();\n        wheelDraw();\n    };\n\n    const initCanvas = () => {\n        let canvas = document.getElementById('canvas');\n        if (navigator.appVersion.indexOf('MSIE') !== -1) {\n            canvas = document.createElement('canvas');\n            canvas.setAttribute('width', wheelWidth);\n            canvas.setAttribute('height', wheelHeight);\n            canvas.setAttribute('id', 'canvas');\n            document.getElementById('wheel').appendChild(canvas);\n        }\n        canvas.addEventListener('click', spin, false);\n        canvasContext = canvas.getContext('2d');\n    };\n    const spin = (event) => {\n        // if (!canvasContext.isPointInPath(spinButton, event.offsetX, event.offsetY)) {\n        //     return;\n        // }\n        isStarted = true;\n        if (timerHandle === 0) {\n            spinStart = new Date().getTime();\n            // maxSpeed = Math.PI / ((segments.length*2) + Math.random())\n            maxSpeed = Math.PI / segments.length;\n            frames = 0;\n            timerHandle = setInterval(onTimerTick, timerDelay);\n        }\n        console.log({maxSpeed});\n        onStart();\n    };\n    const onTimerTick = () => {\n        frames++;\n        draw();\n        const duration = new Date().getTime() - spinStart;\n        let progress = 0;\n        let finished = false;\n        if (duration < upTime) {\n            progress = duration / upTime;\n            angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2);\n        } else {\n            if (winningSegment) {\n                if (currentSegment === winningSegment && frames > segments.length) {\n                    progress = duration / upTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                    progress = 1;\n                } else {\n                    progress = duration / downTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                }\n            } else {\n                progress = duration / downTime;\n                angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n            }\n            if (progress >= 1) {\n                finished = true;\n            }\n        }\n\n        angleCurrent += angleDelta;\n        while (angleCurrent >= Math.PI * 2) {\n            angleCurrent -= Math.PI * 2;\n        }\n        if (finished) {\n            setFinished(true);\n            onFinished(currentSegment);\n            clearInterval(timerHandle);\n            timerHandle = 0;\n            angleDelta = 0;\n        }\n        onSpinProgress && onSpinProgress({finished, progress, frames})\n    };\n\n    const wheelDraw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const draw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const drawSegment = (key, lastAngle, angle) => {\n        const ctx = canvasContext;\n        const value = segments[key];\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.arc(centerX, centerY, size, lastAngle, angle, false);\n        ctx.lineTo(centerX, centerY);\n        ctx.closePath();\n        ctx.fillStyle = segColors[key];\n        ctx.fill();\n        ctx.stroke();\n        ctx.save();\n        ctx.translate(centerX, centerY);\n        ctx.rotate((lastAngle + angle) / 2);\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.font = 'bold 1em ' + fontFamily;\n        // ctx.fillText(value.substr(0, 21), size / 2 + 20, 0);\n        if (multilineDelimiter && value.indexOf(multilineDelimiter) !== -1) {\n            ctx.fillText(value.substr(0, value.indexOf(multilineDelimiter)), size / 2 + 25, -3);\n            ctx.font = '0.75em ' + fontFamily;\n            ctx.fillText(value.substr(value.indexOf(multilineDelimiter) + 1, 21), size / 2 + 25, 11);\n        } else {\n            ctx.fillText(value.substr(0, 21), size / 2 + 25, 0)\n        }\n        ctx.restore();\n    };\n\n    const drawWheel = () => {\n        const ctx = canvasContext;\n        let lastAngle = angleCurrent;\n        const len = segments.length;\n        const PI2 = Math.PI * 2;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        ctx.font = '1em ' + fontFamily;\n        for (let i = 1; i <= len; i++) {\n            const angle = PI2 * (i / len) + angleCurrent;\n            drawSegment(i - 1, lastAngle, angle);\n            lastAngle = angle;\n        }\n\n        // Draw a center circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, 50, 0, PI2, false);\n        ctx.closePath();\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fill();\n        ctx.font = 'bold 1em ' + fontFamily;\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.textAlign = 'center';\n        ctx.fillText(buttonText || 'Spin', centerX, centerY + 3);\n        ctx.stroke();\n\n        // Draw outer circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, size, 0, PI2, false);\n        ctx.closePath();\n\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.stroke();\n    };\n\n    const drawNeedle = () => {\n        const ctx = canvasContext;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fileStyle = contrastColor || 'white';\n        ctx.beginPath();\n        ctx.moveTo(centerX + 20, centerY - 50);\n        ctx.lineTo(centerX - 20, centerY - 50);\n        ctx.lineTo(centerX, centerY - 70);\n        ctx.closePath();\n        ctx.fill();\n        const change = angleCurrent + Math.PI / 2;\n        let i = segments.length - Math.floor((change / (Math.PI * 2)) * segments.length) - 1;\n        if (i < 0) {\n            i = i + segments.length;\n        }\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.font = 'bold 1.5em ' + fontFamily;\n        currentSegment = segments[i];\n\n        // prevent displaying 'undefined' as the selected label\n        currentSegmentLabel = currentSegment || '';\n        if (isStarted) {\n            ctx.fillText(currentSegmentLabel, centerX + 10, centerY + size + 50);\n        }\n    };\n    const clear = () => {\n        const ctx = canvasContext;\n        ctx.clearRect(0, 0, wheelWidth, wheelHeight);\n    };\n\n    let pointerEvents = 'auto';\n    if (isFinished && isOnlyOnce) {\n        pointerEvents = 'none'\n    }\n\n    return (\n        <div id=\"wheel\" style={{position: 'relative'}}>\n            <canvas id=\"canvas\" width={wheelWidth} height={wheelHeight} style={{pointerEvents}}/>\n        </div>\n    );\n};\nexport default WheelComponent;\n","import {Component} from 'react';\nimport {Button, Modal} from 'react-bootstrap';\nimport ChatActivity, { ActivityStatus } from '../ChatActivity';\nimport ConfettiExplosion from '@reonomy/react-confetti-explosion';\nimport GameRequest from '../components/GameRequest'\nimport MessageHandler from '../MessageHandler';\nimport PlayerSelect from '../components/PlayerSelect';\nimport Sidebar from './Sidebar'\nimport WheelComponent from '../WheelComponent'; //'react-wheel-of-prizes'\nimport * as fakeStates from '../example-states';\n\nimport './MainScreen.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nconst randomColor = require('randomcolor');\n\n\nexport default class MainScreen extends Component {\n    constructor(props){\n        super(props);\n        this.chatActivity = new ChatActivity(this.props.channel)\n        this.state = {\n            allowGameRequests: true,\n            gameSelected: null,\n            messages: {},\n            colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\n            counter: 0,\n            history: [],\n            nextGameIdx: 0,\n            showPlayerSelect: false,\n            showOptionsModal: false\n        };\n\n        this.playerSelector = null;\n        this.messageHandler = null;\n\n        this.changeNextGameIdx = this.changeNextGameIdx.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.addGameRequest = this.addGameRequest.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.setNextGame = this.setNextGame.bind(this);\n        this.addGameToQueue = this.addGameToQueue.bind(this);\n        this.onWheelSpun = this.onWheelSpun.bind(this);\n        this.removeGame = this.removeGame.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.toggleAllowGameRequests = this.toggleAllowGameRequests.bind(this);\n        this.togglePlayerSelect = this.togglePlayerSelect.bind(this);\n        this.routePlayRequest = this.routePlayRequest.bind(this);\n        this.routeLeaveRequest = this.routeLeaveRequest.bind(this);\n        this.routeOpenQueueRequest = this.routeOpenQueueRequest.bind(this);\n        this.routeCloseQueueRequest = this.routeCloseQueueRequest.bind(this);\n        this.routeClearQueueRequest = this.routeClearQueueRequest.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.setMessageHandlerRef = this.setMessageHandlerRef.bind(this);\n        this.setPlayerSelectRef = this.setPlayerSelectRef.bind(this);\n    }\n\n    componentDidMount() {\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\n            if (window.location.hash.indexOf('playerselect=true') !== -1) {\n                this.setState(\n                    Object.assign({}, fakeStates.MainScreen, {\n                        showPlayerSelect: true\n                    })\n                );\n            } else {\n                this.setState(fakeStates.MainScreen);\n            }\n        }\n    }\n\n    changeNextGameIdx = (delta = 1) => {\n        if (this.state.nextGameIdx + delta > this.state.history.length) return false;\n        if (this.state.nextGameIdx + delta < 0) return false;\n        this.setState((state) => {\n            return {\n                nextGameIdx: state.nextGameIdx + delta\n            }\n        });\n        return true;\n    }\n\n    changeGameOrder = (history, nextGameIdx) => {\n        if (nextGameIdx > history.length) return false;\n        this.setState({\n            history,\n            nextGameIdx\n        });\n        return true;\n    }\n\n    moveNextGameFwd = () => {\n        return this.changeNextGameIdx();\n    }\n\n    moveNextGameBack = () => {\n        return this.changeNextGameIdx(-1);\n    }\n\n    addGameRequest = (gameObj, user) => {\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: {\n                    ...this.state.messages,\n                    [gameObj.longName]: {\n                        ...gameObj,\n                        username: user,\n                        time: Date.now(),\n                        locked: false,\n                        chosen: false\n                    }\n                },\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    toggleLock = (game) => {\n        const stateCopy = {...this.state.messages[game]};\n        stateCopy.locked = !stateCopy.locked\n\n        this.setState(() => {\n            return {\n                ...this.state,\n                messages: {\n                    ...this.state.messages,\n                    [game]: stateCopy\n                }\n            }\n        });\n    }\n\n    // @return: the number of games ahead of this one, after successfully inserting in queue\n    // (i.e. if it's the very next game, return 0; if there's one ahead, return 1; etc)\n    setNextGame = (gameObj) => {\n        let idx = this.state.nextGameIdx;\n\n        // insert next game at next up position by default, but\n        //      *after* any other manually inserted games\n        while (idx < this.state.history.length && this.state.history[idx]?.override) {\n            idx++;\n        }\n\n        this.setState((state) => {\n            return {\n                ...state,\n                history: [\n                    ...state.history.slice(0, Math.max(0, idx)),\n                    {\n                        ...gameObj,\n                        override: true,\n                        time: Date.now()\n                    },\n                    ...state.history.slice(idx)\n                ]\n            }\n        });\n\n        return idx - this.state.nextGameIdx;\n    }\n\n    addGameToQueue = (gameObj) => {\n        // update history + game card highlight color\n        this.setState((state) => {\n            return {\n                ...state,\n                gameSelected: gameObj,\n                history: [\n                    ...this.state.history,\n                    {\n                        ...gameObj,\n                        override: false\n                    }\n                ],\n                messages: {\n                    ...state.messages,\n                    [gameObj.longName]: {\n                        ...state.messages[gameObj.longName],\n                        chosen: true\n                    }\n                }\n            }\n        });\n    }\n\n    clearModal = () => {\n        this.setState({\n            gameSelected: null\n        });\n    }\n\n    getGamesList = () => {\n        return {\n            allowedGames: this.messageHandler?.state.allowedGames,\n            validGames: this.messageHandler?.state.validGames\n        }\n    }\n\n    onWheelSpun = (gameLongName) => {\n        const gameRequestObj = this.state.messages?.[gameLongName];\n        if (!gameRequestObj) return;\n\n        // send confirmation message in chat\n        const requester = gameRequestObj.username;\n\n        this.addGameToQueue(gameRequestObj);\n\n        // remove card unless it's locked\n        if (!this.state.messages[gameLongName].locked) {\n            setTimeout(() => {\n                this.removeGame(gameLongName);\n                this.clearModal();\n            }, 4000);\n        }\n\n        return this.chatActivity.getStatusPromise(requester).then((status) => {\n            let msg = \"\";\n            switch(status) {\n                case ActivityStatus.DISCONNECTED:\n                    msg = `/me ${gameRequestObj.name} just won the spin, but it doesn't seem like @${requester} is still around. Hope someone else wants to play!`\n                    break;\n\n                case ActivityStatus.ACTIVE:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin!`;\n                    break;\n\n                case ActivityStatus.IDLE:\n                default:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin! (I hope you're still around!)`;\n            }\n            return this.messageHandler.sendMessage(msg);\n        })\n\n    }\n\n    removeGame = (gameLongName) => {\n        const newMessageObj = {...this.state.messages};\n        delete newMessageObj[gameLongName];\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: newMessageObj,\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    onMessage = (message, user, metadata) => {\n        this.chatActivity.updateLastMessageTime(user);\n    }\n\n    toggleAllowGameRequests = (allow=null) => {\n        let {allowGameRequests} = this.state;\n        if (allow !== null) {\n            allowGameRequests = !allow;\n        }\n        this.setState((state) => {\n            return {\n                allowGameRequests: !allowGameRequests\n            }\n        })\n    }\n\n    toggleOptionsModal = () => {\n        this.setState((state) => {\n            return {\n                showOptionsModal: !state.showOptionsModal\n            }\n        })\n    }\n\n    togglePlayerSelect = () => {\n        this.setState((state) => {\n            return {\n                showPlayerSelect: !state.showPlayerSelect\n            }\n        })\n    }\n\n    routePlayRequest = (user, {sendConfirmationMsg = true, isPrioritySeat = false}) => {\n        const msg = this.state.showPlayerSelect\n            ? this.playerSelector?.handleNewPlayerRequest(user, {isPrioritySeat})\n            : 'sign-ups are currently closed; try again after this game wraps up!'\n\n        if (sendConfirmationMsg) {\n            this.messageHandler?.sendMessage(`/me @${user}, ${msg}`);\n        }\n    }\n\n    routeLeaveRequest = (user) => {\n        this.playerSelector?.removeUser(user);\n    }\n\n    routeOpenQueueRequest = () => {\n        this.setState((state) => {\n            return {\n                ...state,\n                showPlayerSelect: true\n            }\n        })\n        this.playerSelector?.openQueue();\n    }\n\n    routeCloseQueueRequest = () => {\n        this.playerSelector?.closeQueue();\n    }\n\n    routeClearQueueRequest = () => {\n        this.playerSelector?.clearQueue();\n    }\n\n    startGame = () => {\n        if (this.state.showPlayerSelect) {\n            this.togglePlayerSelect();\n            this.moveNextGameFwd();\n            return true;\n        }\n        return false;\n    }\n\n    setMessageHandlerRef = (ps) => {\n        this.messageHandler = ps;\n    };\n\n    setPlayerSelectRef = (mh) => {\n        this.playerSelector = mh;\n    };\n\n    renderGameChosenModal(gameObj) {\n        let confettiProps = {\n            force: 0.6,\n            duration: 3500,\n            particleCount: 100,\n            floorHeight: Math.max(window.outerWidth, window.outerHeight),\n            floorWidth: Math.max(window.outerWidth, window.outerHeight)\n        };\n        let requestedBy;\n        if (gameObj.username) {\n            requestedBy = (<h4>requested by @{gameObj.username}</h4>);\n        }\n        return (\n            <>\n                <div className=\"overlay fade-in-out\">\n                    <div className=\"confetti-wrapper\">\n                        <ConfettiExplosion {...confettiProps} />\n                    </div>\n                </div>\n                <div className=\"confetti-modal modal-game-chosen fade-in-out\" onClick={()=>this.removeGame(gameObj.longName)}>\n                    <h1>{gameObj.name}</h1>\n                    {requestedBy}\n                </div>\n            </>\n        );\n    }\n\n    renderOptionsModal = () => {\n        let {allowedGames, validGames} = this.messageHandler.state;\n        let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n            return Object.keys(packData[1]).map(gameData => {\n                let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n                return {\n                    id: gameId,\n                    game: gameData,\n                    pack: packData[0]\n                }\n            })\n        }))\n        // let gamesList = gamePackList.map(g => g.game);\n        console.log('gamePackList:', gamePackList, allowedGames);\n\n        // return (\n        //     <>\n        //         <div className=\"overlay fade-in\" onClick={this.toggleOptionsModal}></div>\n        //         <div className=\"modal modal-options fade-in\">\n        //             <h2>Options</h2>\n        //             <div className=\"options-list\">\n        //                 <ul>\n        //                     {gamePackList.map(({id, game, pack}, idx) => {\n        //                         // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n        //                         return (\n        //                             <li key={id}>\n        //                                 <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n        //                             </li>\n        //                         )}\n        //                     )}\n        //                 </ul>\n        //             </div>\n        //         </div>\n        //     </>\n        // );\n        return (\n\n            <Modal\n                show={this.state.showOptionsModal}\n                onHide={this.toggleOptionsModal}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Modal heading\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Options</h4>\n                    <div className=\"options-list\">\n                        <ul>\n                            {gamePackList.map(({id, game, pack}, idx) => {\n                                // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n                                return (\n                                    <li key={id}>\n                                        <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n                                    </li>\n                                )}\n                            )}\n                        </ul>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={this.toggleOptionsModal}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n\n        );\n    }\n\n    render() {\n        const gameRequestArray = Object.keys(this.state.messages);\n\n\n        let gameSelectedModal;\n        if (this.state.gameSelected) {\n            gameSelectedModal = this.renderGameChosenModal(this.state.gameSelected);\n        } else if (this.state.showOptionsModal) {\n            gameSelectedModal = this.renderOptionsModal();\n        }\n\n        let logOutBtn;\n        if (typeof this.props.onLogout === 'function') {\n            logOutBtn = (\n                <button className=\"btn btn-sm float-end logout\" onClick={this.props.onLogout}>Logout &#10151;</button>\n            );\n        }\n        let optionsBtn;\n        if (window.location.hash.indexOf('options=true') !== -1)\n        optionsBtn = (\n            <button className=\"btn btn-sm float-start options\" onClick={this.toggleOptionsModal}>Options</button>\n        );\n\n        let mainClassName = this.state.showPlayerSelect ? 'player-select' : 'game-select';\n\n        let subheading = this.state.showPlayerSelect ? (\n            <span className=\"subheading-player fade-in-delay\">\n                Type <b>!new</b> in {this.props.channel}'s chat if you want to join the next game\n            </span>\n        ) : (\n            <span className={`subheading-game ${(this.state.allowGameRequests === true ? 'fade-in-delay' : 'fade-out')}`} title={`Click to ${this.state.allowGameRequests === true ? 'disable' : 'enable'} game requests.`} onClick={this.toggleAllowGameRequests}>\n                Type e.g. <b>\"!request Blather Round\"</b> in {this.props.channel}'s chat to add\n            </span>\n        );\n\n        let innerContent;\n        let rightColumn;\n\n        if (this.state.showPlayerSelect) {\n            innerContent = (\n                <PlayerSelect\n                    game={this.state.history?.[this.state.nextGameIdx]}\n                    startGame={this.startGame}\n                    ref={this.setPlayerSelectRef}\n                />\n            );\n        } else {\n            innerContent = gameRequestArray.map((gameName, i) =>\n                <GameRequest\n                    key={i}\n                    gameName={gameName}\n                    metadata={this.state.messages[gameName]}\n                    onDelete={this.removeGame}\n                    toggleLock={this.toggleLock.bind(gameName)}\n                    getActivity={this.chatActivity.getStatusPromise}\n                />\n            );\n            rightColumn = (\n                <div className=\"right-column\" width=\"50px\">\n                    <div className=\"wheel-wrapper fade-in\">\n                         <WheelComponent\n                            key={this.state.counter}\n                            segments={gameRequestArray}\n                            segColors={this.state.colors}\n                            onFinished={this.onWheelSpun}\n                            isOnlyOnce={false}\n                            size={250}\n                            upDuration={100}\n                            downDuration={1000}\n                            primaryColor={\"white\"}\n                            contrastColor={\"black\"}\n                            fontFamily={\"Arial\"}\n                            multilineDelimiter={' ('}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n\n        return (\n            <div id=\"main-screen\" className={mainClassName}>\n                <nav className=\"main-screen-nav\">\n                    {optionsBtn}\n                    {logOutBtn}\n                </nav>\n                <MessageHandler\n                    addGameRequest={this.addGameRequest}\n                    allowGameRequests={this.state.allowGameRequests}\n                    setNextGame={this.setNextGame}\n                    changeNextGameIdx={this.changeNextGameIdx}\n                    startGame={this.startGame}\n                    messages={this.state.messages}\n                    channel={this.props.channel}\n                    modList={this.props.modList}\n                    access_token={this.props.access_token}\n                    onMessage={this.onMessage}\n                    onDelete={this.removeGame}\n                    previousGames={this.state.history.slice(0, this.state.nextGameIdx)}\n                    upcomingGames={this.state.history.slice(this.state.nextGameIdx)}\n                    caniplayHandler={this.routePlayRequest}\n                    playerExitHandler={this.routeLeaveRequest}\n                    openQueueHandler={this.routeOpenQueueRequest}\n                    closeQueueHandler={this.routeCloseQueueRequest}\n                    clearQueueHandler={this.routeClearQueueRequest}\n                    toggleAllowGameRequests={this.toggleAllowGameRequests}\n                    ref={this.setMessageHandlerRef}\n                />\n                <div className=\"left-column fade-in\">\n\n                    <h1>{this.state.showPlayerSelect ? 'Seat Requests' : 'Game Requests'}</h1>\n                    <h4>{subheading}</h4>\n\n                    <div className=\"left-column-body\">\n                        <Sidebar\n                            changeGameOrder={this.changeGameOrder}\n                            history={this.state.history}\n                            nextGameIdx={this.state.nextGameIdx}\n                            changeNextGameIdx={this.changeNextGameIdx}\n                            moveNextGameFwd={this.moveNextGameFwd}\n                            moveNextGameBack={this.moveNextGameBack}\n                            togglePlayerSelect={this.togglePlayerSelect}\n                            requestMode={this.state.showPlayerSelect ? 'seat' : 'game'}\n                        />\n                        <div className=\"left-column-inner-body\">\n                            {innerContent}\n                        </div>\n                    </div>\n                </div>\n                {rightColumn}\n                {gameSelectedModal}\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport MainScreen from './landing/MainScreen';\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport queryString from 'query-string'\nconst fetch = require('node-fetch');\n\nclass AuthenticatedApp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: localStorage.getItem('__username'),\n            access_token: localStorage.getItem('__access_token'),\n            failed_login: false\n        }\n        this.getAuth = this.getAuth.bind(this);\n        this.getUsers = this.getUsers.bind(this);\n        this.logOut = this.logOut.bind(this);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (!this.state.access_token) {\n            return this.getAuth();\n        }\n        return this.getUsers(this.state.access_token).catch(e => {\n            console.error(e);\n            return this.getAuth(e);\n        });\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    async getAuth(e) {\n        if (e) {\n            console.error(e);\n        }\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__access_token');\n\n        const queryParams = queryString.parse(this.props.location.search);\n        const requestParams = new URLSearchParams({\n            grant_type: 'authorization_code',\n            code: queryParams.code,\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n        return await fetch(`https://id.twitch.tv/oauth2/token?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        })\n        .then(r => r.json())\n        .then((oauth) => {\n            //console.log(oauth);  access_token, refresh_token, expires_in, scope ['...']\n            if (this._isMounted) {\n                if (!oauth.access_token) {\n                    return this.setState({\n                        failed_login: true\n                    });\n                }\n\n                localStorage.setItem('__access_token', oauth.access_token);\n\n                this.setState({\n                    access_token: oauth.access_token\n                });\n\n                return this.getUsers(oauth.access_token);\n            }\n            return;\n        })\n        .catch(e => {\n            console.error(e);\n            if (this._isMounted) {\n                return this.setState({\n                    failed_login: true\n                });\n            }\n            return;\n        });\n    }\n\n    getUsers(access_token) {\n        return fetch('https://api.twitch.tv/helix/users', {\n            headers: {\n                'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                Authorization: `Bearer ${this.state.access_token}`\n            }\n        })\n        .then(r => r.json())\n        .then(userInfo => {\n            //console.log(userInfo); login [aka lowercase username?], display_name, profile_image_url, description\n            localStorage.setItem('__username', userInfo.data[0].login);\n            return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\n                headers: {\n                    'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                    Authorization: `Bearer ${this.state.access_token}`\n                }\n            })\n            .then(r => r.json())\n            .then(modInfo => {\n                const modList = (!modInfo.data)\n                    ? null\n                    : modInfo.data.map((modObj) => (!modObj.user_name) ? null : modObj.user_name.toLowerCase()).filter(user => user);\n                if (this._isMounted) {\n                    return this.setState({\n                        username: userInfo.data[0].login,\n                        modList\n                    });\n                }\n                return;\n            });\n        });\n    }\n\n    logOut() {\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__access_token');\n\n        const requestParams = new URLSearchParams({\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            token: this.state.access_token,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n\n        return fetch(`https://id.twitch.tv/oauth2/revoke?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        }).then(() => {\n            return window.location.reload();\n        });\n    }\n\n    render() {\n        if (this.state.failed_login) {\n            return (<Redirect to=\"/login\"/>);\n        }\n        let mainContent;\n        let classNames = ['authenticated-app'];\n        if (this.state.username) {\n            mainContent = (\n                <MainScreen\n                    channel={this.state.username}\n                    modList={this.state.modList}\n                    access_token={this.state.access_token}\n                    onLogout={this.logOut}\n                />\n            );\n        }\n\n        return (\n            <div id={classNames.join(' ')}>\n                {mainContent}\n            </div>\n        );\n    }\n}\n\nexport {AuthenticatedApp};\n\nexport default withRouter(AuthenticatedApp);\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './JackboxGameList.css';\nconst fetch = require('node-fetch');\n\nconst PartyPackCard = function (props) {\n  const gameList = Object.keys(props.metadata);\n  return (\n    <div className=\"partyPackCard\">\n      <p className=\"partyPackName\">{props.partyPackName} </p>\n      {gameList.map((gameName, i) =>\n        <GameCard\n          key={i}\n          gameName={gameName}\n          possibleMatches={props.metadata?.[gameName]?.Variants}\n        />\n      )}\n    </div>\n  );\n}\n\n\n// <p> {props.gameName} <p>\n\nconst GameCard = function(props) {\n  return (\n    <div className=\"mt-2 lh-sm\">\n      <p className=\"gameName\">{props.gameName} </p>\n      {props.possibleMatches.map((possibleMatch, i) =>\n        <li className=\"possibleGameMatch\" key={`${props.gameName}-${i}`}>!request {possibleMatch}</li>\n      )}\n    </div>\n  );\n}\n\nexport default class JackboxGameList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validGames: []\n    };\n  }\n\n  componentDidMount(props) {\n    fetch(rawJackboxGameList)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            validGames: YAML.parse(text)\n          };\n        });\n      })\n    }\n\n\n\n    render() {\n      const partyPackList = Object.keys(this.state.validGames);\n      return (\n        <div className=\"partyPackList\">\n          {partyPackList.map((partyPackName, i) =>\n            <PartyPackCard\n              key={i}\n              partyPackName={partyPackName}\n              metadata={this.state.validGames[partyPackName]}\n            />\n          )}\n        </div>\n      );\n    }\n\n}\n","import React, {Component} from 'react';\nimport {version} from '../package.json';\n\nimport './LoginScreen.css';\n\nconst scopes = 'chat:read chat:edit moderation:read';\nconst loginUrl = 'https://id.twitch.tv/oauth2/authorize'\n    + `?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}`\n    + `&response_type=code&scope=${scopes}`\n    + `&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\n\nclass LoginScreen extends Component {\n\n    render() {\n        return (\n            <div id=\"login-screen\" className=\"fade-in\">\n                <a href={loginUrl} className=\"btn btn-sm fs-2\">\n                    Log In With <strong>Twitch</strong>\n                </a>\n                <br/>\n                <small>\n                    {`v${version}`}\n                </small>\n            </div>\n        );\n    }\n}\n\nexport default LoginScreen;\n","import AuthenticatedApp from './AuthenticatedApp';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport JackboxGameList from './JackboxGameList';\nimport LoginScreen from './LoginScreen';\nimport React, {Component} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n\n        let classNames = ['App'];\n        if (window.location.hash.indexOf('legacy=true') !== -1) {\n            classNames.push('legacy');\n        }\n\n        return (\n            <HashRouter basename='/'>\n                <div className={classNames.join(' ')}>\n                    <Switch>\n                        <Route exact path=\"/login\" component={LoginScreen} />\n                        <Route exact path=\"/gamelist\" component={JackboxGameList}/>\n                        <Route path=\"/\" component={AuthenticatedApp}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n\nexport {LoginScreen};\n","import { ReportHandler } from 'web-vitals';\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from 'react';\nimport {render} from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nrender(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}