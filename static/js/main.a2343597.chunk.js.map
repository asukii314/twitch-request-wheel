{"version":3,"sources":["ChatActivity.js","images/lock.svg","components/GameRequest.js","JackboxGames.yaml","MessageHandler.js","landing/OptionsGameList.js","landing/OptionsMenu.js","example-states.js","images/dice.svg","images/star.svg","components/PlayerSelect.js","landing/Sidebar.js","WheelComponent.js","landing/MainScreen.js","components/LoadSpinner/index.js","AuthenticatedApp.js","JackboxGameList.js","LoginScreen.js","OptionsList.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","ActivityStatus","ChatActivity","channel","updateLastMessageTime","user","lastMessageTimes","Date","now","minsSinceLastChatMessage","Math","floor","getChatters","then","r","json","res","chatters","moderators","viewers","staff","admins","global_mods","catch","e","this","getStatusPromise","bind","includes","GameRequest","props","deleteRequest","onDelete","gameName","getFormattedTimeDiff","timestamp","unit","timeDiff","getTooltipContent","Tooltip","id","className","state","metadata","username","getTooltipActivityStatusClassName","activityStatus","toggleLock","updateStatus","getActivity","setState","time","lockClassName","locked","cardStatus","chosen","OverlayTrigger","placement","overlay","onEnter","name","partyPack","replace","src","lock","alt","onClick","type","Component","tmi","GAME_REQUEST_COMMAND","GAME_SUBREQUEST_COMMAND","easterEggRequests","RequestName","Response","version","Variants","MessageHandler","componentDidMount","client","getTwitchClient","on","onMessage","connect","getGameList","rawJackboxGameList","componentWillUnmount","disconnect","console","log","yamlGameList","text","validGames","YAML","parse","warn","identity","password","access_token","channels","options","skipUpdatingEmotesets","updateEmotesetsTimer","isModOrBroadcaster","modList","toLowerCase","checkForMiscCommands","message","startsWith","sendMessage","process","requestedGame","trim","gameObj","findGame","pipe","settings","customDelimiter","requests","Object","values","messages","map","m","sort","join","toggleAllowGameRequests","prevSelectedGame","removeSelectedGameFromHistory","changeNextGameIdx","upcomingGames","length","numGamesAhead","setNextGame","clearSeatsAfterRedeem","clearQueueHandler","caniplayHandler","sendConfirmationMsg","redeemingUser","isPrioritySeat","exitingUser","playerExitHandler","openQueueHandler","closeQueueHandler","startGame","requestEntry","partyPackName","partyPackObj","entries","formalGameName","longName","checkForGameCommand","checkForSubrequest","subscriber","target","tags","msg","self","logUserMessages","cleanedMsg","isSubRequest","enableSubRequests","requestedBy","allowGameRequests","prevRequestedGameName","enableSubRequestLimit","allowedGames","filter","g","game","pack","enabled","addGameRequest","previousGames","previous","i","upcoming","say","setAllowedGames","reloadGameList","gameList","PropTypes","bool","func","OptionsGameList","getAllowedGames","__allowedGames","localStorage","getItem","JSON","assign","concat","packGames","keys","gameId","undefined","setItem","stringify","onCheckHandler","checked","prevState","onGroupCheckHandler","value","renderGameCard","onChange","htmlFor","title","renderPackCheckbox","isChecked","renderPartyPack","gamesEnabled","isIndeterminate","Accordion","Item","eventKey","key","Header","Body","ref","el","indeterminate","partyPackList","flush","OptionsMenu","createDebugMenuItems","items","idx","label","test","Dropdown","Divider","href","createMenuItems","listItemClassNames","listItemClassName","split","n","btnClassNames","btnClassName","Button","variant","toggleGameList","showGameList","toggleSettingsMenu","showSettingsMenu","debugItems","onSettingsUpdate","optionMenuItems","debugMenuItems","Offcanvas","onHide","show","showOptionsMenu","closeButton","closeVariant","Title","as","onLogout","Collapse","in","role","readOnly","disabled","defaultValue","gamesList","drop","Toggle","size","Menu","array","object","stateMainScreen","statePlayerSelect","PlayerSelect","updateColumnSizes","columnWidth","firstColumn","current","offsetWidth","handleNewPlayerRequest","column","isQueueOpen","updateColumnForUser","interested","uObj","playing","joined","userObj","newColumn","removeUser","iObj","pObj","jObj","clearQueue","openQueue","closeQueue","playerCount","streamerSeat","toggleStreamerSeat","canStartGame","randomizePlayers","randIdx","randUsername","numPlayersToAdd","min","randIdxArray","randUsernameArray","random","push","renderPlayerCard","curColumn","star","style","maxWidth","renderStreamerSeatToggle","defaultChecked","renderPlayerCount","React","createRef","window","location","hash","indexOf","fakeStates","addEventListener","removeEventListener","startGameClass","dice","Sidebar","getHistoryList","history","droppableId","provided","droppableProps","innerRef","index","draggableId","draggableProps","dragHandleProps","printGame","placeholder","getNextGameName","hasNextGame","nextGameIdx","getNextGamePartyPack","handleOnDragEnd","result","destination","_items","Array","from","fill","splice","source","_reorderedItem","newNextGameIdx","findIndex","reorderedItem","changeGameOrder","moveNextGameFwd","moveNextGameBack","buttonPlayerSelect","nextGame","requestMode","togglePlayerSelect","onDragEnd","WheelComponent","segments","segColors","winningSegment","onStart","onSpinProgress","onFinished","primaryColor","contrastColor","buttonText","isOnlyOnce","upDuration","downDuration","fontFamily","wheelHeight","wheelWidth","enableScrollTop","multilineDelimiter","currentSegment","currentSegmentLabel","isStarted","useState","isFinished","setFinished","timerHandle","timerDelay","angleCurrent","angleDelta","canvasContext","maxSpeed","PI","upTime","downTime","spinStart","frames","centerX","round","centerY","useEffect","wheelInit","setTimeout","scrollTo","initCanvas","wheelDraw","canvas","document","getElementById","navigator","appVersion","createElement","setAttribute","appendChild","spin","getContext","event","getTime","max","setInterval","onTimerTick","draw","duration","progress","finished","sin","clearInterval","clear","drawWheel","drawNeedle","drawSegment","lastAngle","angle","ctx","save","beginPath","moveTo","arc","lineTo","closePath","fillStyle","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","fileStyle","change","clearRect","pointerEvents","position","width","height","randomColor","MainScreen","delta","counter","stateCopy","override","slice","addGameToQueue","gameSelected","clearModal","getGamesList","messageHandler","getOptionsDebugMenu","showPlayerSelect","playerSelector","getOptionsMenu","onWheelSpun","gameLongName","gameRequestObj","requester","removeGame","chatActivity","status","newMessageObj","currGame","h","nextSettings","allow","toggleOptionsMenu","toggleOptionsModal","showOptionsModal","routePlayRequest","routeLeaveRequest","routeOpenQueueRequest","routeCloseQueueRequest","routeClearQueueRequest","setMessageHandlerRef","ps","setPlayerSelectRef","mh","isJestEnv","JEST_WORKER_ID","savedSettings","colors","count","luminosity","hue","confettiProps","force","particleCount","floorHeight","outerWidth","outerHeight","floorWidth","gamePackList","packData","gameData","Modal","centered","Footer","gameSelectedModal","gameRequestArray","renderOptionsModal","renderGameChosenModal","innerContent","rightColumn","mainClassName","subheading","parentState","LoadSpinner","AuthenticatedApp","failed_login","getAuth","getUsers","logOut","_isMounted","error","removeItem","queryParams","queryString","search","requestParams","URLSearchParams","grant_type","code","client_id","client_secret","redirect_uri","method","headers","Accept","oauth","Authorization","userInfo","data","login","modInfo","modObj","user_name","token","reload","to","mainContent","withRouter","PartyPackCard","possibleMatches","GameCard","possibleMatch","JackboxGameList","loginUrl","LoginScreen","OptionsList","App","classNames","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.a2343597.chunk.js","sourcesContent":["const fetch = require('node-fetch');\n\nexport const ActivityStatus = {\n    ACTIVE: 1,\n    IDLE: 2,\n    DISCONNECTED: 3\n};\n\nconst MAX_IDLE_TIME_MINUTES = 10;\n\nexport default class ChatActivity {\n    constructor(channel) {\n        this.channel = channel;\n        this.lastMessageTimes = {};\n        this.getStatusPromise = this.getStatusPromise.bind(this);\n    }\n\n    updateLastMessageTime = (user) => {\n        this.lastMessageTimes = {\n            ...this.lastMessageTimes,\n            [user]: Date.now()\n        };\n    }\n\n    minsSinceLastChatMessage = (user) => {\n        return Math.floor((Date.now() - this.lastMessageTimes[user]) / 60000);\n    }\n\n    // returns a PROMISE, don't just assign the value again like a dweeb. :/\n    //\n    // not just active chatters - anyone with an active connnection to twitch chat.\n    // (thank the lord almighty for free open proxy sites. CORB is annoying.)\n    // note that results are fairly heavily cached, and the API may break\n    // eventually (is undocumented), but this is what twitch themselves\n    // uses to display the list of people connected to chat - best we got.\n    getChatters = () => {\n        return fetch(`https://thingproxy.freeboard.io/fetch/https://tmi.twitch.tv/group/user/${this.channel}/chatters`)\n            .then(r => r.json())\n            .then(res => {\n                if (!res || !res.chatters) return null;\n                return [\n                  ...res.chatters.moderators,\n                  ...res.chatters.viewers,\n                  ...res.chatters.staff,\n                  ...res.chatters.admins,\n                  ...res.chatters.global_mods\n                ];\n            }).catch((e) => {\n                // don't normally like swallowing errors like this,\n                // but it's a noncritical feature built off an\n                // undocumented api, sooo....\n                return null;\n            });\n    }\n\n    async getStatusPromise(user) {\n        // broadcaster always counts as active\n        if (user === this.channel) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        // sent a chat message in the last X mins?\n        if (this.lastMessageTimes[user] && this.minsSinceLastChatMessage(user) < MAX_IDLE_TIME_MINUTES) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        return this.getChatters().then((chatters) =>\n            !chatters || !chatters.includes(user)\n                ? ActivityStatus.DISCONNECTED\n                : ActivityStatus.IDLE\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/lock.6857c469.svg\";","import {ActivityStatus} from '../ChatActivity';\nimport React, {Component} from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport lock from '../images/lock.svg';\n\nimport './GameRequest.css';\n\nclass GameRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeDiff: 0,\n            activityStatus: null\n        };\n\n        this.deleteRequest = this.deleteRequest.bind(this);\n        this.getFormattedTimeDiff = this.getFormattedTimeDiff.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.updateStatus = this.updateStatus.bind(this);\n    }\n\n    deleteRequest = (e) => {\n        this.props.onDelete(this.props.gameName)\n    }\n\n    getFormattedTimeDiff = (timestamp) => {\n        let unit = \"minute\";\n        let timeDiff = Math.floor((Date.now() - timestamp) / 60000);\n        if (timeDiff === 0) {\n            return \"just now\";\n        }\n        if (timeDiff >= 60) {\n            unit = \"hour\";\n            timeDiff = Math.floor(timeDiff / 60);\n\n            if (timeDiff >= 24) {\n                unit = \"day\";\n                timeDiff = Math.floor(timeDiff / 24);\n            }\n        }\n        return `${timeDiff} ${unit}${timeDiff === 1 ? \"\" : \"s\"} ago`;\n    };\n\n    getTooltipContent = (props) => (\n        <Tooltip id=\"game-request-tooltip\" {...props}>\n            <span className=\"tooltipText\">\n                Requested {this.state.timeDiff} by {this.props.metadata.username}\n                <span className={`status ${this.getTooltipActivityStatusClassName()}`} />\n            </span>\n        </Tooltip>\n    );\n\n    getTooltipActivityStatusClassName = () => {\n        switch (this.state.activityStatus) {\n            case ActivityStatus.ACTIVE:\n                return \"active\";\n            case ActivityStatus.IDLE:\n                return \"idle\";\n            case ActivityStatus.DISCONNECTED:\n                return \"disconnected\";\n            default:\n                // no data back yet; don't show an activity status indicator at all\n                return '';\n        }\n    }\n\n    toggleLock = () => {\n        return this.props.toggleLock(this.props.gameName);\n    }\n\n    updateStatus = async () => {\n        // return Date.now();\n        let activityStatus;\n        try {\n            activityStatus = await this.props.getActivity(this.props.metadata.username);\n            return this.setState({\n                timeDiff: this.getFormattedTimeDiff(this.props.metadata.time),\n                activityStatus\n            });\n        } catch(err) {\n            throw err;\n        }\n    }\n\n    render() {\n        const lockClassName = this.props.metadata.locked ? 'lock locked' : 'lock unlocked';\n        const cardStatus = this.props.metadata.chosen ? 'chosen' : 'pending';\n\n        return (\n            <OverlayTrigger\n                placement=\"left\"\n                overlay={this.getTooltipContent}\n                onEnter={this.updateStatus}>\n                <div className=\"game-request-wrapper fade-in\">\n                \t<div id=\"baseDiv\" className={`game-request ${cardStatus}`}>\n                \t\t<div className=\"game-request-body\">\n                \t\t    <div className=\"text-truncate\">\n                                <b>\n                                    {this.props.metadata.name}\n                                </b>\n                                {' '}\n                                <small>\n                                    {\n                                        !!this.props.metadata.partyPack &&\n                                        `(${this.props.metadata.partyPack.replace('Party Pack', 'Pack')})`\n                                    }\n                                </small>\n                            </div>\n                \t\t\t<div className=\"options\">\n                \t\t\t\t<img src={lock} alt=\"lock\" className={lockClassName} onClick={this.toggleLock} />\n                \t\t\t\t<button type='button' className=\"deleteButton\" onClick={this.deleteRequest}>X</button>\n                \t\t\t</div>\n                \t\t</div>\n                \t</div>\n                </div>\n            </OverlayTrigger>\n        );\n    }\n}\nexport default GameRequest;\n","export default __webpack_public_path__ + \"static/media/JackboxGames.6eee71ce.yaml\";","import {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport YAML from 'yaml'\nimport {version} from '../package.json';\nconst fetch = require('node-fetch');\nconst tmi = require('tmi.js');\n\nconst GAME_REQUEST_COMMAND = \"!request\";\nconst GAME_SUBREQUEST_COMMAND = \"!subrequest\";\n\nconst easterEggRequests = [\n    {\n        RequestName: 'Version',\n        Response: `is using Twitch Request Wheel, v${version}`,\n        Variants: [\n            'version',\n            'v',\n            'info'\n        ]\n    }, {\n        RequestName: 'Affection',\n        Response: () => 'there there, it\\'s going to be okay. VirtualHug',\n        Variants: [\n            'a friend',\n            'a hug',\n            'a kiss',\n            'friend',\n            'hug',\n            'kiss',\n            'affection',\n            'a shoulder to cry on',\n            'shoulder to cry on'\n        ]\n    }, {\n        RequestName: 'Goose',\n        Response: 'please don\\'t taunt the wheel. Honk.',\n        Variants: [\n            'goose',\n            'honk',\n            'meow',\n            'mrow',\n            'woof',\n            'bark',\n            'nugs',\n            'chicken nugs'\n        ]\n    }, {\n        RequestName: 'Lewmon',\n        Response: 'please don\\'t taunt the wheel. sirfar3Lewmon sirfar3Lewmon sirfar3Lewmon',\n        Variants: [\n            'lewmon',\n            'sirfar3lewmon'\n        ]\n    }, {\n        RequestName: 'DoTheDew',\n        Response: 'dewinbDTD dewinbDance dewinbGIR dewinbDance dewinbGIR dewinbDance dewinbDTD',\n        Variants: [\n            'dothedew',\n            'dewinblack'\n        ]\n    }\n];\n\nexport default class MessageHandler extends Component {\n    static get propTypes() {\n        return {\n            logUserMessages: PropTypes.bool,\n            toggleAllowGameRequests: PropTypes.func,\n        };\n    }\n    static get defaultProps() {\n        return {\n            logUserMessages: false,\n            toggleAllowGameRequests: () => void 0,\n        };\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            client: null,\n            allowedGames: {},\n            validGames: []\n        };\n        this.getTwitchClient = this.getTwitchClient.bind(this);\n        this.isModOrBroadcaster = this.isModOrBroadcaster.bind(this);\n        this.checkForMiscCommands = this.checkForMiscCommands.bind(this);\n        this.findGame = this.findGame.bind(this);\n        this.checkForGameCommand = this.checkForGameCommand.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n    }\n\n    componentDidMount = (props) => {\n        const client = this.getTwitchClient(this.props);\n        this.client = client;\n\n        client.on('message', this.onMessage);\n        client.connect();\n\n        return this.getGameList(rawJackboxGameList, client);\n    }\n\n    componentWillUnmount = (props) => {\n        try {\n            if (this.client) {\n                this.client.disconnect();\n            }\n        } catch(e) {\n            console.log('Error', e);\n        }\n    }\n\n    getGameList = async (yamlGameList, client) => {\n        return await fetch(yamlGameList)\n            .then(r => r.text())\n            .then(text => {\n                return this.setState({\n                    client,\n                    validGames: YAML.parse(text)\n                });\n            }).catch(e => {\n                console.warn(e);\n            });\n    }\n\n    getTwitchClient = (props) => {\n        return new tmi.client({\n            identity: {\n                username: props.channel,\n                password: props.access_token\n            },\n            channels: [\n                props.channel\n            ],\n            options: {\n                skipUpdatingEmotesets: true,\n                updateEmotesetsTimer: 0\n            }\n        });\n    }\n\n    isModOrBroadcaster = (username) => {\n        return (this.props.channel === username || this.props.modList.includes(username.toLowerCase()));\n    }\n\n    // returns true iff a known command was found & responded to\n    checkForMiscCommands = (message, username) => {\n        //========= general =========\n        if (message.startsWith(\"!gamelist\") || message.startsWith(\"!gameslist\")) {\n            this.sendMessage(`/me @${username}, click here for a list of available games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n            return true;\n        }\n\n        if (message === \"!wheelcommands\") {\n            this.sendMessage(`/me @${username}, click here to read about all supported commands: https://github.com/asukii314/twitch-request-wheel/blob/master/src/Commands.yaml`);\n            return true;\n        }\n\n        if (message.startsWith(\"!whichpack\")) {\n            const requestedGame = message.replace(\"!whichpack\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to look up the party pack for: e.g. !whichpack TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                this.sendMessage(`/me @${username}, ${gameObj.name} is a ${gameObj.partyPack} game.`);\n            }\n            return true;\n        }\n\n        //========= list requested games =========\n        if (message === \"!onthewheel\" || message.startsWith(\"!gamesqueue\") || message === \"!listrequests\") {\n            let pipe = (this.props.settings?.customDelimiter)\n                ? ` ${this.props.settings.customDelimiter} `\n                : ' ⋆ ';\n            let requests = Object.values(this.props.messages).map(m => m.name).sort();\n            try {\n                this.sendMessage(`/me @${username}, Requested: ${requests.join(pipe)}.`);\n            } catch(e) {\n                this.sendMessage(`/me @${username}, Sorry, there are waaaaaaaaay too many games to list and something went wrong. :p`);\n                console.log(e);\n            }\n\n            // TODO: handle if over character count\n            // TODO: determine if this is actually necessary\n            /* this.sendMessage(`/me @${username}, NOTE: There are a loooooot of games to list, but hopefully this next message won't break:`);\n            this.sendMessage(`/me @${username}, Requested: ${requests}.`);\n            requestsArr.reduce((list, str) => {\n                const last = list[list.length-1];\n                if (last && last.total + str.length <= 480) {\n                    last.total += str.length;\n                    last.words.push(str);\n                } else {\n                    list.push({\n                        total: str.length,\n                        words: [str]\n                    });\n                }\n                return list;\n            }, [])\n            .map(({ words }) => words.join(pipe));*/\n            return true;\n        }\n\n        //========= enable / disable requests =========\n        if ( message.startsWith(\"!enablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(true);\n            this.sendMessage(`/me @${username}, requests have now been enabled! Type \"!request\" followed by the game you want to play.`);\n            return true;\n        }\n        if ( message.startsWith(\"!disablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(false);\n            this.sendMessage(`/me @${username}, requests have now been disabled.`);\n            return true;\n        }\n\n        //========= remove selected game =========\n\n        if ( message.startsWith(\"!removegame\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            let prevSelectedGame = this.props?.removeSelectedGameFromHistory()\n            if (prevSelectedGame === false) {\n                this.sendMessage(`/me @${username}, a game must be selected before you can remove it.`);\n            } else {\n                this.sendMessage(`/me @${username}, the next game, ${prevSelectedGame.name}, has been removed.`);\n            }\n            return true;\n        }\n\n        //========= advance next game =========\n        if (message === \"!advancenextgame\" || message === \"!nextgamefwd\" || message === \"!nextgameforward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(1)) {\n                if (this.props.upcomingGames.length > 0) {\n                    // console.log(this.props.upcomingGames)\n                    this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n                } else {\n                    this.sendMessage(`/me @${username}, the next game has been marked as \"TBD\".`);\n                }\n            } else {\n                this.sendMessage(`/me @${username}, there are no more games in the queue to advance to!`);\n            }\n            return true;\n        }\n\n        //========= advance prev game =========\n        if (message === \"!advanceprevgame\" || message === \"!nextgameback\" || message === \"!nextgamebackward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(-1)) {\n                this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n            } else {\n                this.sendMessage(`/me @${username}, there are no previous games in the queue to go back to!`);\n            }\n            return true;\n        }\n\n        //========= set next game =========\n        if (message.startsWith(\"!setnextgame\") || message.startsWith(\"!sng\") || message.startsWith(\"!redeemgame\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use the ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} command.`);\n                return true;\n            }\n\n            const requestedGame = message.replace(\"!setnextgame\", \"\").replace(\"!sng\", \"\").replace(\"!redeemgame\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to insert in the queue: for example, ${message.startsWith(\"!s\") ? \"!setnextgame\" : \"!redeemgame\"} TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                const numGamesAhead = this.props.setNextGame(gameObj);\n                if (numGamesAhead === 0) {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted as the next game in the queue.`);\n                } else {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted in the queue following ${numGamesAhead} other manual game request${numGamesAhead > 1 ? 's' : ''}.`);\n                }\n                if (this.props.settings?.clearSeatsAfterRedeem === true) {\n                    this.props?.clearQueueHandler();\n                }\n            }\n            return true;\n        }\n\n        //========= player queue management =========\n        if (message === \"!caniplay\" || message.startsWith(\"!new\") || (message.toLowerCase().startsWith(\"!dew\") && this.props?.channel?.toLowerCase() === 'dewinblack')) {\n            this.props?.caniplayHandler(username, {\n                sendConfirmationMsg: message === \"!caniplay\"\n            });\n            return true;\n        }\n\n        if (message.startsWith(\"!priorityseat\") || message.startsWith(\"!redeemseat\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const redeemingUser = message.replace(\"!priorityseat\", \"\").replace(\"!redeemseat\", \"\").replace(\"@\", \"\").trim();\n            if (redeemingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who has redeemed a priority seat in the next game: for example, ${message.startsWith(\"!p\") ? \"!priorityseat\" : \"!redeemseat\"} @asukii314`);\n                return true;\n            }\n            this.props?.caniplayHandler(redeemingUser, {\n                sendConfirmationMsg: true,\n                isPrioritySeat: true\n            });\n            return true;\n        }\n\n        if ( message.startsWith(\"!removeuser\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const exitingUser = message.replace(\"!removeuser\", \"\").replace(\"@\", \"\").trim();\n            if (exitingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who will be removed in the next game: for example, !removeuser @dewinblack`);\n                return true;\n            }\n            this.props?.playerExitHandler(exitingUser);\n            return true;\n        }\n\n        if (message === \"!leave\" || message === \"!murd\") {\n            this.props?.playerExitHandler(username);\n            return true;\n        }\n\n        if (message === \"!clear\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!open\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!clearopen\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!close\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.closeQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!startgame\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.startGame()) {\n                this.sendMessage(`/me @${username}, the game has been started.`);\n            } else {\n                this.sendMessage(`/me @${username}, the game was already started.`);\n            }\n            return true;\n        }\n\n        if (message.startsWith(\"!redeem\")) {\n            this.sendMessage(`/me @${username}, this command is no longer supported: please specify either !redeemgame or !redeemseat.`);\n            return true;\n        }\n        return;\n    }\n\n    findGame = (requestedGame, username) => {\n        // easter egg responses\n        for (let requestEntry of easterEggRequests) {\n            if (requestEntry?.Variants?.includes(requestedGame)) {\n                if (typeof requestEntry.Response === 'function') {\n                    this.sendMessage(`/me @${username} ${requestEntry.Response()}`);\n                } else {\n                    this.sendMessage(`/me @${username} ${requestEntry.Response}`);\n                }\n                return null;\n            }\n        }\n        // check against games\n        for (let partyPackName in this.state.validGames) {\n            const partyPackObj = this.state.validGames[partyPackName]\n            for (const [formalGameName, metadata] of Object.entries(partyPackObj)) {\n                if (metadata?.Variants?.includes(requestedGame)) {\n                    return {\n                        name: formalGameName,\n                        longName: `${formalGameName} (${partyPackName})`,\n                        partyPack: partyPackName,\n                        ...metadata\n                    };\n                }\n            }\n        }\n        this.sendMessage(`/me @${username}, ${requestedGame} could not be found in the list of available games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n        return;\n    }\n\n    checkForGameCommand = (message, username) => {\n        if (!message.startsWith(GAME_REQUEST_COMMAND)) return;\n\n        const requestedGame = message.replace(GAME_REQUEST_COMMAND, \"\").trim();\n\n        if (requestedGame === \"\") {\n            this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\n            return null;\n        }\n\n        return this.findGame(requestedGame, username);\n    }\n\n    checkForSubrequest = (message, username, subscriber) => {\n        if (!message.startsWith(GAME_SUBREQUEST_COMMAND)) return;\n        if (subscriber !== true && this.props.channel !== username) {\n            this.sendMessage(`/me @${username}, you must be a subscriber to use this command.`);\n            return null;\n        }\n\n        const requestedGame = message.replace(GAME_SUBREQUEST_COMMAND, \"\").trim();\n\n        if (requestedGame === \"\") {\n            this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\n            return null;\n        }\n\n        return this.findGame(requestedGame, username);\n    }\n\n    onMessage = (target, tags, msg, self) => {\n        if (this.props.logUserMessages) {\n            console.log({target, tags, msg, self});\n        }\n        if (self) return;\n        this.props.onMessage(msg, tags.username, tags)\n\n        if (msg.trim() === \"!nextgame\") {\n            if (this.props.upcomingGames && this.props.upcomingGames.length > 0) {\n                let upcoming = this.props.upcomingGames[0].name;\n                if (this.props.upcomingGames.length > 1) {\n                    upcoming += `, followed by ${this.props.upcomingGames[1].name}`\n                    for (let i = 2; i < this.props.upcomingGames.length; i++) {\n                        upcoming += `, and ${this.props.upcomingGames[i].name}`\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the next game up is ${upcoming}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, the next game hasn't been decided yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        if (msg.trim() === \"!lastgame\") {\n            if (this.props.previousGames && this.props.previousGames.length > 0) {\n                let previous = this.props.previousGames[0].name;\n                if (this.props.previousGames.length > 1) {\n                    previous += `, followed by ${this.props.previousGames[1].name}`\n                    for (let i = 2; i < this.props.previousGames.length; i++) {\n                        previous += (i+1 === this.props.previousGames.length)\n                            ? `, ${this.props.previousGames[i].name}`\n                            : `, and ${this.props.previousGames[i].name}`; // oxford comma, y'all\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the last game played was ${previous}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, no games have been played yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        const cleanedMsg = msg.trim().toLowerCase();\n        if (this.checkForMiscCommands(cleanedMsg, tags.username)) return;\n        let gameObj = this.checkForGameCommand(cleanedMsg, tags.username);\n        let isSubRequest = false;\n        if (!gameObj && this.props.settings?.enableSubRequests) {\n            isSubRequest = true;\n            gameObj = this.checkForSubrequest(cleanedMsg, tags.username, tags.subscriber);\n        }\n        if (!gameObj) return;\n\n        if (this.props.messages[gameObj.longName]) {\n            let requestedBy = (this.props.messages[gameObj.longName].username === tags.username) ? 'yourself, silly' : this.props.messages[gameObj.longName].username;\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has already been requested by ${requestedBy}!`);\n            return;\n        }\n\n        if (this.props.allowGameRequests !== true) {\n            this.sendMessage(`/me @${tags.username}, game requests are currently paused at the moment, please try again later.`);\n            return;\n        }\n\n\n        let prevRequestedGameName = null;\n        for (const metadata of Object.values(this.props.messages)) {\n            if (metadata.username === tags.username) {\n                prevRequestedGameName = metadata.longName;\n                break;\n            }\n        }\n\n        if (prevRequestedGameName) {\n            if (this.props.channel === tags.username) {\n                this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue. Your previous game request(s) weren't deleted, since you have special broadcaster privilege :P`);\n            } else if (isSubRequest && !this.props.settings?.enableSubRequestLimit) {\n                this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue via a subrequest.`);\n            } else {\n                this.props.onDelete(prevRequestedGameName);\n                this.sendMessage(`/me @${tags.username}, your previous request of ${prevRequestedGameName} has been replaced with ${gameObj.name}.`);\n            }\n        } else if (Object.values(this.state.allowedGames).filter(g => g.game === gameObj.name && g.pack === gameObj.partyPack && g.enabled !== true).length === 1) {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} is not currently enabled and was not added to the queue.`);\n            return;\n        } else {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue.`);\n        }\n\n        this.props.addGameRequest(gameObj, tags.username, isSubRequest);\n        return;\n    }\n\n    sendMessage = (msg) => {\n        this.state.client.say(this.props.channel, msg)\n    }\n\n    setAllowedGames = (allowedGames) => {\n        this.setState({\n            allowedGames\n        });\n    }\n    reloadGameList = () => {\n        let gameList = `${rawJackboxGameList}?${Date.now()}`;\n        return this.getGameList(gameList, this.client);\n    }\n\n    render() {\n        return null;\n    }\n}\n","import {Component} from 'react';\nimport {Accordion} from 'react-bootstrap';\nimport YAML from 'yaml'\nimport rawJackboxGameList from '../JackboxGames.yaml';\nimport './OptionsGameList.css';\nconst fetch = require('node-fetch');\n\nclass OptionsGameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowedGames: [],\n            validGames: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawJackboxGameList)\n            .then(r => r.text())\n            .then(text => {\n                let validGames = YAML.parse(text);\n                // this.setState({validGames});\n                this.setAllowedGames(validGames);\n            });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.allowedGames || this.state.validGames.length === 0 || this.state.allowedGames.length === 0) return;\n        localStorage.setItem('__allowedGames', JSON.stringify(this.state.allowedGames));\n    }\n\n    getAllowedGames = function(validGames) {\n        let __allowedGames = localStorage.getItem('__allowedGames');\n        let allowedGames = (__allowedGames) ? JSON.parse(__allowedGames) : {};\n\n\n        // let output = {};\n        //\n        // // return list of valid games merged with existing allowedGames\n        // Object.entries(validGames).forEach(([pack, packGames]) => {\n        //     // get valid games within each pack\n        //     Object.keys(packGames).forEach(game => {\n        //         let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n        //         output[gameId] = (allowedGames[gameId])\n        //             ? allowedGames[gameId]\n        //             : {\n        //                 id: gameId,\n        //                 game,\n        //                 pack,\n        //                 enabled: true\n        //             };\n        //         output[gameId] = allowedGames[gameId];\n        //     });\n        // });\n        // return output;\n\n        // return list of valid games merged with existing allowedGames\n        return Object.assign({},\n            ...[].concat(\n                ...Object.entries(validGames).map(([pack, packGames]) => {\n                    // get valid games within each pack\n                    return Object.assign({},\n                        ...Object.keys(packGames).map(game => {\n                            let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n                            if (gameId in allowedGames && allowedGames[gameId].id !== undefined) {\n                                return {\n                                    [gameId]: allowedGames[gameId]\n                                };\n                            }\n                            // add entry with default value\n                            // console.log(`Adding ${gameId}`);\n                            return {\n                                [gameId]: {\n                                    id: gameId,\n                                    game,\n                                    pack,\n                                    enabled: true\n                                }\n                            }\n                        })\n                    );\n                })\n            )\n        )\n    }\n\n    setAllowedGames = function(validGames) {\n        let allowedGames = this.getAllowedGames(validGames);\n        this.setState({\n            allowedGames,\n            validGames\n        });\n        localStorage.setItem('__allowedGames', JSON.stringify(allowedGames));\n    }\n\n    onCheckHandler = ({target}) => {\n        let {id, checked} = target;\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                [id]: {\n                    ...prevState.allowedGames[id],\n                    enabled: checked\n                }\n            }\n        }));\n    }\n\n    onGroupCheckHandler = ({target}) => {\n        let {value, checked} = target;\n        // console.log({value, checked});\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === value);\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                ...Object.assign(\n                    ...packGames.map(g => ({\n                        [g.id]: {\n                            ...g,\n                            enabled: checked\n                        }\n                    })\n                ))\n            }\n        }));\n    }\n\n    renderGameCard = function(props) {\n        let {id, game, pack} = props;\n        let {allowedGames} = this.state;\n        let checked = allowedGames[id]?.enabled || false;\n        return (\n            <li className=\"gameName\" key={id}>\n                <input type=\"checkbox\" id={id} name={id} value={id} checked={checked} onChange={this.onCheckHandler} />\n                {' '}\n                <label htmlFor={id} title={`${pack}: ${game}`}>\n                    {game}\n                </label>\n            </li>\n        );\n    }\n\n    renderPackCheckbox = function(pack) {\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === pack);\n        let isChecked = packGames.filter(g => g.enabled === true).length === packGames.length;\n        return (\n            <input type=\"checkbox\" id={pack} name={pack} value={pack} checked={isChecked} onChange={this.onGroupCheckHandler} />\n        );\n    }\n\n    renderPartyPack = function (props) {\n        const gameList = Object.keys(props.metadata);\n\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === props.partyPackName);\n        let gamesEnabled = packGames.filter(g => g.enabled === true)\n        let isChecked = gamesEnabled.length === packGames.length;\n        let isIndeterminate = (!isChecked && gamesEnabled.length !== 0)\n        return (\n            <Accordion.Item eventKey={props.key} className=\"party-pack-card\" key={props.key}>\n                <Accordion.Header className=\"bg-darker text-white\">\n                    {props.partyPackName}\n                </Accordion.Header>\n                <Accordion.Body>\n                    <div className=\"float-end\">\n                        <small>Select All</small>\n                        {` `}\n                        <input type=\"checkbox\" id={props.partyPackName} name={props.partyPackName} value={props.partyPackName} checked={isChecked} onChange={this.onGroupCheckHandler} ref={el => el && (el.indeterminate = isIndeterminate)} />\n                    </div>\n                    <ul className=\"party-pack-game-list\">\n                        {gameList.map(\n                            (gameName, i) => this.renderGameCard({\n                                game: gameName,\n                                id: `${props.partyPackName} ${gameName}`.replace(/\\W/ig, '_'),\n                                pack: props.partyPackName\n                            })\n                        )}\n                    </ul>\n                </Accordion.Body>\n            </Accordion.Item>\n        );\n    }\n\n    render() {\n        let {validGames} = this.state;\n        const partyPackList = Object.keys(validGames);\n\n        return (\n            <Accordion id=\"options-game-list\" className=\"accordion-dark\" flush>\n                {partyPackList.map(\n                    (partyPackName, i) => this.renderPartyPack({\n                        key: i,\n                        partyPackName,\n                        metadata: this.state.validGames[partyPackName]\n                    })\n                )}\n            </Accordion>\n        );\n    }\n\n}\nexport default OptionsGameList;\n","import {Component} from 'react';\nimport {Button, Collapse, Dropdown, Offcanvas} from 'react-bootstrap';\nimport OptionsGameList from './OptionsGameList';\nimport PropTypes from 'prop-types';\nimport {version} from '../../package.json';\n\nimport './OptionsMenu.css';\n\nexport default class OptionsMenu extends Component {\n    static get propTypes() {\n        return {\n            debugItems: PropTypes.array,\n            gamesList: PropTypes.object,\n            items: PropTypes.array,\n            onHide: PropTypes.func,\n            onLogout: PropTypes.func,\n            showOptionsMenu: PropTypes.bool,\n            showSettingsMenu: PropTypes.bool\n        };\n    }\n    static get defaultProps() {\n        return {\n            debugItems: [],\n            gamesList: {\n                allowedGames: null,\n                validGames: null\n            },\n            items: [],\n            onHide: () => void 0,\n            onLogout: () => void 0,\n            showOptionsMenu: false,\n            showSettingsMenu: false\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGameList: false\n        }\n        this.toggleGameList = this.toggleGameList.bind(this);\n        this.toggleSettingsMenu = this.toggleSettingsMenu.bind(this);\n    }\n\n    /*\n\n    Expects the following object schema:\n    {\n        label: string,  // required\n        onClick: func,\n        listItemClassName: string,\n        btnClassName: string\n    }\n\n\n     */\n    createDebugMenuItems = (items) => {\n        if (!items) {\n            return [];\n        }\n        return items.map((i, idx) => {\n            if (!i || !i.label) {\n                return null;\n            }\n            if (/^[-]+$/i.test(i.label)) {\n                return (\n                    <Dropdown.Divider eventKey={i.idx} />\n                );\n            }\n            return (\n                <Dropdown.Item\n                    eventKey={i.label}\n                    href={i.href || null}\n                    key={`${idx} ${i.label}`}\n                    onClick={i.onClick || null}\n                >\n                    {i.label}\n                </Dropdown.Item>\n            );\n        }).filter(i => i);\n    }\n\n    createMenuItems = (items) => {\n        if (!items) {\n            return [];\n        }\n        return items.map(i => {\n            if (!i.label) {\n                return null;\n            }\n            let liClassName = (!i.listItemClassName)\n                ? i.label.trim().toLowerCase().split(' ').join('-')\n                : i.listItemClassName;\n            let listItemClassNames = ['mb-1 fs-4 d-grid text-start', liClassName || null].filter(n => n).join(' ');\n            let btnClassNames = ['btn', i.btnClassName || null].filter(n => n).join(' ');\n            return (\n                <li className={listItemClassNames} key={i.label}>\n                    <Button variant=\"link\" className={btnClassNames} onClick={i.onClick || null}>\n                        {i.label}\n                    </Button>\n                </li>\n            );\n        }).filter(i => i);\n    }\n\n    toggleGameList = () => {\n        this.setState((state) => {\n            return {\n                showGameList: !state.showGameList\n            }\n        })\n    }\n\n    toggleSettingsMenu = () => {\n        this.setState((state) => {\n            return {\n                showSettingsMenu: !state.showSettingsMenu\n            }\n        })\n    }\n    // renderGameOptions() {\n    //     let {allowedGames, validGames} = this.props.gamesList;\n    //     let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n    //         return Object.keys(packData[1]).map(gameData => {\n    //             let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n    //             return {\n    //                 id: gameId,\n    //                 game: gameData,\n    //                 pack: packData[0]\n    //             }\n    //         })\n    //     }))\n    //\n    //\n    //\n    //     // let gamesList = gamePackList.map(g => g.game);\n    //     console.log('gamePackList:', gamePackList, allowedGames);\n    //\n    //     return (\n    //         <Modal\n    //             show={this.state.showOptionsModal}\n    //             onHide={()=>this.toggleOptionsModal(false)}\n    //             size=\"lg\"\n    //             aria-labelledby=\"contained-modal-title-vcenter\"\n    //             centered>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title id=\"contained-modal-title-vcenter\">\n    //                     Options\n    //                 </Modal.Title>\n    //             </Modal.Header>\n    //             <Modal.Body>\n    //                 <div className=\"options-list\">\n    //                     <ul>\n    //                         {gamePackList.map(({id, game, pack}, idx) => {\n    //                             // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n    //                             return (\n    //                                 <li key={id}>\n    //                                     <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n    //                                 </li>\n    //                             )}\n    //                         )}\n    //                     </ul>\n    //                 </div>\n    //             </Modal.Body>\n    //             <Modal.Footer>\n    //                 <Button data-bs-dismiss=\"modal\">Close</Button>\n    //             </Modal.Footer>\n    //         </Modal>\n    //     );\n    // }\n\n    render() {\n        let {debugItems, items, settings, onSettingsUpdate} = this.props;\n        let optionMenuItems = this.createMenuItems(items);\n        let debugMenuItems = this.createDebugMenuItems(debugItems);\n\n        let toggleSubRequests = () => {\n            let value = typeof settings?.enableSubRequests === 'boolean'\n                ? !settings?.enableSubRequests\n                : true;\n            onSettingsUpdate({enableSubRequests: value});\n        };\n        let toggleSubRequestLimit = () => {\n            let value = typeof settings?.enableSubRequestLimit === 'boolean'\n                ? !settings?.enableSubRequestLimit\n                : true;\n            onSettingsUpdate({enableSubRequestLimit: value});\n        };\n        let toggleClearSeatsAfterRedeem = () => {\n            let value = typeof settings?.clearSeatsAfterRedeem === 'boolean'\n                ? !settings?.clearSeatsAfterRedeem\n                : true;\n            onSettingsUpdate({clearSeatsAfterRedeem: value});\n        };\n        let updateCustomDelimiter = (e) => {\n            let {value} = e.target;\n            if (!value) {\n                value = null;\n            } else {\n                value = value.trim();\n            }\n            onSettingsUpdate({customDelimiter: value});\n        };\n\n        return (\n            <Offcanvas\n                id=\"options-menu\"\n                onHide={this.props.onHide}\n                placement=\"end\"\n                show={this.props.showOptionsMenu}>\n                <Offcanvas.Header closeButton closeVariant=\"white\">\n                    <Offcanvas.Title as=\"h2\" className=\"fw-bold\">\n                        Options\n                    </Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <ul className=\"options-menu-items list-unstyled pb-3 px-4\">\n                        <li className=\"mb-1 fs-4 d-grid text-start\">\n                            <Button variant=\"link\" className=\"btn logout\" onClick={this.props.onLogout}>\n                                Logout\n                            </Button>\n                        </li>\n                        <hr />\n                        <li className=\"mb-1 fs-4 d-grid text-start\">\n                            <Button variant=\"link\" className=\"btn settings-menu\" onClick={this.toggleSettingsMenu}>\n                                Settings\n                            </Button>\n                        </li>\n                        <Collapse in={this.state.showSettingsMenu}>\n                            <div id=\"settings-menu\" className=\"accordion-dark accordion accordion-flush\">\n                                <div className=\"accordion-body\">\n                                    <Button variant=\"link\" className=\"btn settings-menu\"\n                                        onClick={toggleSubRequests}\n                                        title=\"Allows subscribers to make additional game requests when enabled.\"\n                                    >\n                                        <input type=\"checkbox\" role=\"switch\" checked={(settings?.enableSubRequests)} readOnly /> <span>Enable Sub Requests</span>\n                                    </Button>\n                                    <Button variant=\"link\" className=\"btn settings-menu subsetting\"\n                                        onClick={toggleSubRequestLimit}\n                                        title=\"Limit subscribers to one additional game requests when enabled.\"\n                                        disabled={!(settings?.enableSubRequests)}\n                                    >\n                                        <input type=\"checkbox\" role=\"switch\" checked={(settings?.enableSubRequestLimit)} readOnly /> <span>Limit 1 Sub Request</span>\n                                    </Button>\n                                    <Button variant=\"link\" className=\"btn settings-menu\"\n                                        onClick={toggleClearSeatsAfterRedeem}\n                                        title=\"Clears the list of player signups after a game redemption.\"\n                                    >\n                                        <input type=\"checkbox\" role=\"switch\" checked={(settings?.clearSeatsAfterRedeem)} readOnly /> <span>Clear Seats After Redeem</span>\n                                    </Button>\n\n                                    <Button variant=\"link\" className=\"btn settings-menu\"\n                                        title=\"Uses a custom character or emote to separate requests listed in the chat.\"\n                                    >\n                                        <span>Use Custom Delimiter: </span>\n                                        <input type=\"text\" name=\"custom-delimiter\" defaultValue={settings?.customDelimiter}\n                                        onChange={updateCustomDelimiter} />\n                                    </Button>\n                                </div>\n                            </div>\n                        </Collapse>\n                        {optionMenuItems}\n                        <li className=\"mb-1 fs-4 d-grid text-start d-none\">\n                            <Button variant=\"link\" className=\"btn reload-game-list\" onClick={this.props.reloadGameList}>\n                                Refresh Game List\n                            </Button>\n                        </li>\n                        <li className=\"mb-1 fs-4 d-grid text-start d-none\">\n                            <Button variant=\"link\" className=\"btn game-list\" onClick={this.toggleGameList}>\n                                Game List\n                            </Button>\n                        </li>\n                        <Collapse in={this.state.showGameList}>\n                            <div>\n                                <OptionsGameList\n                                    allowedGames={this.props.gamesList?.allowedGames}\n                                    validGames={this.props.gamesList?.validGames} />\n                            </div>\n                        </Collapse>\n                    </ul>\n\n                    <div id=\"options-debug-menu-items\" className=\"position-absolute bottom-0 start-0 end-0 pb-3 text-center\">\n                        <Dropdown id=\"dropdown-debug-menu-items\" drop=\"up-centered\" variant=\"link\">\n                            <Dropdown.Toggle id=\"dropdown-debug-menu-items-toggle\" size=\"sm\" variant=\"link\">\n                                {`version ${version}`}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu variant=\"dark\">\n                                <Dropdown.Header>\n                                    Debug Options\n                                </Dropdown.Header>\n                                {debugMenuItems}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n        );\n    }\n}\n","const stateMainScreen = {\n    \"gameSelected\": null,\n    \"messages\": {\n        \"Survive The Internet (Party Pack 4)\": {\n            \"name\": \"Survive The Internet\",\n            \"longName\": \"Survive The Internet (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"survive\",\n                \"survive the internet\",\n                \"sti\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628112883959,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash (Any Version)\": {\n            \"name\": \"Quiplash\",\n            \"longName\": \"Quiplash (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"quiplash\",\n                \"quip\",\n                \"ql\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628113055677,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"You Don't Know Jack (Party Pack 5)\": {\n            \"name\": \"You Don't Know Jack\",\n            \"longName\": \"You Don't Know Jack (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ydkj 2\",\n                \"ydkj fs\",\n                \"ydkjfs\",\n                \"you dont know jack 2\",\n                \"you don't know jack 2\",\n                \"you don't know jack full stream\",\n                \"you don't know jack full steam\",\n                \"you don't know jack: full stream\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114634007,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Mad Verse City (Party Pack 5)\": {\n            \"name\": \"Mad Verse City\",\n            \"longName\": \"Mad Verse City (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"mvc\",\n                \"madverse\",\n                \"mad verse\",\n                \"madversecity\",\n                \"mad verse city\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114645263,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Monster Seeking Monster (Party Pack 4)\": {\n            \"name\": \"Monster Seeking Monster\",\n            \"longName\": \"Monster Seeking Monster (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 7,\n            \"Variants\": [\n                \"msm\",\n                \"monster seeking monster\",\n                \"monster seeking monsters\",\n                \"monsters seeking monsters\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114646991,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Blather 'Round (Party Pack 7)\": {\n            \"name\": \"Blather 'Round\",\n            \"longName\": \"Blather 'Round (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 2,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"blather\",\n                \"blather round\",\n                \"blather 'round\",\n                \"blatherround\",\n                \"blatheround\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114733155,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Talking Points (Party Pack 7)\": {\n            \"name\": \"Talking Points\",\n            \"longName\": \"Talking Points (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"talking points\",\n                \"talkingpoints\",\n                \"talk points\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114749438,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic Phone (Standalone)\": {\n            \"name\": \"Gartic Phone\",\n            \"longName\": \"Gartic Phone (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min players\": 4,\n            \"Max players\": 30,\n            \"Variants\": [\n                \"gartic phone\",\n                \"garticphone\",\n                \"garlic phone\",\n                \"garlicphone\",\n                \"gartic\",\n                \"garlic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114761558,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Drawful (Any Version)\": {\n            \"name\": \"Drawful\",\n            \"longName\": \"Drawful (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"drawful\",\n                \"drawfull\",\n                \"draw full\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114769626,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Words on Stream (Standalone)\": {\n            \"name\": \"Words on Stream\",\n            \"longName\": \"Words on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"words on stream\",\n                \"word on stream\",\n                \"words stream\",\n                \"word stream\",\n                \"words\",\n                \"wos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114772430,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic on Stream (Standalone)\": {\n            \"name\": \"Gartic on Stream\",\n            \"longName\": \"Gartic on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"gartic on stream\",\n                \"garlic on stream\",\n                \"garlic stream\",\n                \"gartic stream\",\n                \"gos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114776310,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"The Devils and the Details (Party Pack 7)\": {\n            \"name\": \"The Devils and the Details\",\n            \"longName\": \"The Devils and the Details (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"devils\",\n                \"devils in details\",\n                \"devils and details\",\n                \"devils & details\",\n                \"devil's in details\",\n                \"devil's and details\",\n                \"devil's & details\",\n                \"devils in the details\",\n                \"devils and the details\",\n                \"devils & the details\",\n                \"devil's in the details\",\n                \"devil's and the details\",\n                \"devil's & the details\",\n                \"the devils in the details\",\n                \"the devils and the details\",\n                \"the devils & the details\",\n                \"the devil's in the details\",\n                \"the devil's and the details\",\n                \"the devil's & the details\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114937776,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Fibbage: Enough About You (Party Pack 4)\": {\n            \"name\": \"Fibbage: Enough About You\",\n            \"longName\": \"Fibbage: Enough About You (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"eay\",\n                \"enough about you\",\n                \"feay\",\n                \"fibbage eay\",\n                \"fibbage: eay\",\n                \"fibbage enough about you\",\n                \"fibbage: enough about you\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114942915,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Champ'd Up (Party Pack 7)\": {\n            \"name\": \"Champ'd Up\",\n            \"longName\": \"Champ'd Up (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"champd\",\n                \"champed\",\n                \"champd up\",\n                \"champ'd\",\n                \"champ'd up\",\n                \"champed up\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114981572,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Civic Doodle (Party Pack 4)\": {\n            \"name\": \"Civic Doodle\",\n            \"longName\": \"Civic Doodle (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"civic doodle\",\n                \"civicdoodle\",\n                \"civic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628115017116,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 2 (Party Pack 6)\": {\n            \"name\": \"Trivia Murder Party 2\",\n            \"longName\": \"Trivia Murder Party 2 (Party Pack 6)\",\n            \"partyPack\": \"Party Pack 6\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp2\",\n                \"tmp 2\",\n                \"trivia murder party 2\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628118545790,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash 3 (Party Pack 7)\": {\n            \"name\": \"Quiplash 3\",\n            \"longName\": \"Quiplash 3 (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ql3\",\n                \"ql 3\",\n                \"quip 3\",\n                \"quip3\",\n                \"quiplash 3\",\n                \"quiplash3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628121075780,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 1 (Party Pack 3)\": {\n            \"name\": \"Trivia Murder Party 1\",\n            \"longName\": \"Trivia Murder Party 1 (Party Pack 3)\",\n            \"partyPack\": \"Party Pack 3\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp1\",\n                \"tmp 1\",\n                \"trivia murder party 1\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628122719930,\n            \"locked\": false,\n            \"chosen\": false\n        }\n    },\n    \"colors\": [\n        \"#75a5e5\",\n        \"#847cef\",\n        \"#74aee0\",\n        \"#86efed\",\n        \"#63bbd8\",\n        \"#c9d8ff\",\n        \"#97ecef\",\n        \"#bcefff\",\n        \"#9caff4\",\n        \"#b9a4f2\",\n        \"#9fbbfc\",\n        \"#affffc\",\n        \"#a1bef4\",\n        \"#7ee7fc\",\n        \"#97c1ef\",\n        \"#a4a4fc\",\n        \"#a4a5f4\",\n        \"#b7f1ff\",\n        \"#79bdfc\",\n        \"#6885dd\",\n        \"#98e1f2\",\n        \"#aac1ff\",\n        \"#a583fc\",\n        \"#8991e5\",\n        \"#6edddd\",\n        \"#a7b7ef\",\n        \"#74e2e8\",\n        \"#9c9af9\",\n        \"#9dd5f2\",\n        \"#6a73ed\",\n        \"#b19df9\",\n        \"#88eaea\",\n        \"#6b91ef\",\n        \"#9de1f9\",\n        \"#7691fc\",\n        \"#d0c4fc\",\n        \"#c9d7ff\",\n        \"#84a7ed\",\n        \"#809bfc\",\n        \"#63d0d8\",\n        \"#b8cbfc\",\n        \"#a3a0ff\",\n        \"#b4f4f7\",\n        \"#9c9efc\",\n        \"#8ae8f7\",\n        \"#7985ea\",\n        \"#7876e8\",\n        \"#cfc2fc\",\n        \"#bfcfff\",\n        \"#92a9f4\",\n        \"#d0c2fc\",\n        \"#adc9f7\",\n        \"#767ce0\",\n        \"#95a1f9\",\n        \"#a286f4\",\n        \"#8085ed\",\n        \"#c4c9fc\",\n        \"#7c8ff9\",\n        \"#7079f9\",\n        \"#aaa5ff\",\n        \"#8db7e8\",\n        \"#9e94e8\",\n        \"#a5ffff\",\n        \"#76ade8\",\n        \"#a9f5fc\",\n        \"#a0a5ff\",\n        \"#9cbffc\",\n        \"#8fa2e8\",\n        \"#8eeeff\",\n        \"#88ccf7\",\n        \"#b0f2f4\",\n        \"#8e7fef\",\n        \"#aef9f8\",\n        \"#8beef9\",\n        \"#7a8ef4\",\n        \"#c7c4fc\",\n        \"#7b87f2\",\n        \"#7b77ea\",\n        \"#859be5\",\n        \"#7191e8\",\n        \"#aadaef\",\n        \"#b1aaf7\",\n        \"#80bff7\",\n        \"#95e0f4\",\n        \"#a3e5ed\",\n        \"#91a1f2\",\n        \"#c0c4f9\",\n        \"#7a90f4\",\n        \"#85def2\",\n        \"#87f2ee\",\n        \"#cac6ff\",\n        \"#76c3f7\",\n        \"#c2dcfc\",\n        \"#a2a2f9\",\n        \"#ccd7ff\",\n        \"#978fef\",\n        \"#8d77e5\",\n        \"#bad0fc\",\n        \"#ccf7ff\"\n    ],\n    \"counter\": 26,\n    \"history\": [\n        {\n            \"name\": \"Zeeple Dome\",\n            \"longName\": \"Zeeple Dome (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"zeeple\",\n                \"zeeple dome\",\n                \"zeepledome\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114757634,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Split the Room\",\n            \"longName\": \"Split the Room (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"split the room\",\n                \"splittheroom\",\n                \"split room\",\n                \"room split\",\n                \"split\",\n                \"str\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114989864,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Fibbage 3\",\n            \"longName\": \"Fibbage 3 (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"fibbage 3\",\n                \"fibbage3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114666823,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Trivia Murder Party\",\n            \"longName\": \"Trivia Murder Party (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp\",\n                \"trivia murder party\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628106145996,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        }\n    ],\n    \"nextGameIdx\": 0,\n    \"showPlayerSelect\": false\n};\n\nconst statePlayerSelect = {\n    \"interested\": [\n        {\n            \"username\": \"player6\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player3\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player9\"\n        },\n        {\n            \"username\": \"dcpesses\"\n        }\n    ],\n    \"playing\": [\n        {\n            \"username\": \"player1\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player7\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player8\"\n        },\n        {\n            \"username\": \"player5\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player2\",\n            \"isPrioritySeat\": true\n        }\n    ],\n    \"joined\": [],\n    \"streamerSeat\": true,\n    \"isQueueOpen\": true,\n    \"columnWidth\": 634\n}\n\nexport {\n    stateMainScreen as MainScreen,\n    statePlayerSelect as PlayerSelect\n};\n","export default __webpack_public_path__ + \"static/media/dice.021a7158.svg\";","export default __webpack_public_path__ + \"static/media/star.de82f684.svg\";","import React, { Component } from 'react';\r\nimport * as fakeStates from '../example-states';\r\n\r\nimport dice from '../images/dice.svg';\r\nimport star from '../images/star.svg';\r\n\r\nimport './PlayerSelect.css';\r\n\r\nexport default class PlayerSelect extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.firstColumn = React.createRef();\r\n        this.state = {\r\n            interested: [],\r\n            playing: [],\r\n            joined: [],\r\n            streamerSeat: false,\r\n            isQueueOpen: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\r\n            this.setState(fakeStates.PlayerSelect);\r\n        }\r\n        this.updateColumnSizes();\r\n        window.addEventListener(\"resize\", this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    updateColumnSizes = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                columnWidth: this.firstColumn.current.offsetWidth\r\n            };\r\n        })\r\n    }\r\n\r\n    handleNewPlayerRequest = (username, {isPrioritySeat=false}) => {\r\n        if (isPrioritySeat) {\r\n            // even if the queue is closed, still add them to the interested column for consideration\r\n            const column = (this.state.isQueueOpen ? 'playing' : 'interested');\r\n\r\n            return this.updateColumnForUser({username, isPrioritySeat}, column)\r\n                ? 'you have been successfully added to the lobby.'\r\n                : 'there was an error adding you to the lobby.';\r\n        }\r\n\r\n        if (this.state?.interested?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.playing?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.joined?.map((uObj) => uObj.username)?.includes(username)) {\r\n            return 'you are already in the lobby.';\r\n        }\r\n\r\n        if (!this.state.isQueueOpen) {\r\n            return 'the queue is currently closed; users have already been selected for this game.';\r\n        }\r\n        return this.updateColumnForUser({username}, 'interested')\r\n            ? 'you have successfully joined the lobby.'\r\n            : 'there was an error adding you to the lobby.';\r\n    }\r\n\r\n    updateColumnForUser = (userObj, newColumn) => {\r\n        if (!this.state || !this.state[newColumn]) return false;\r\n\r\n        this.removeUser(userObj.username);\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [newColumn]: [\r\n                    ...state[newColumn],\r\n                    userObj\r\n                ]\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    removeUser = (username) => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: state.interested.filter((iObj) => iObj.username !== username),\r\n                playing: state.playing.filter((pObj) => pObj.username !== username),\r\n                joined:  state.joined.filter((jObj) => jObj.username !== username)\r\n            }\r\n        });\r\n    }\r\n\r\n    clearQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            }\r\n        })\r\n    }\r\n\r\n    openQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: true\r\n            }\r\n        })\r\n    }\r\n\r\n    closeQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: false\r\n            }\r\n        })\r\n    }\r\n\r\n    playerCount = () => {\r\n        return this.state.playing.length + this.state.joined.length +\r\n                        (this.state.streamerSeat ? 1 : 0);\r\n    }\r\n\r\n    toggleStreamerSeat = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                streamerSeat: !state.streamerSeat\r\n            }\r\n        });\r\n    }\r\n\r\n    canStartGame = () => {\r\n        return this.props.game?.['Max players'] >= this.playerCount() &&\r\n                     this.props.game?.['Min players'] <= this.playerCount();\r\n    }\r\n\r\n    startGame = () => {\r\n        // clear for now; eventually, save elsewhere to report on user play history for that session\r\n        this.setState ((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            };\r\n        })\r\n        this.props.startGame();\r\n    }\r\n\r\n    randomizePlayers = () => {\r\n        const numPlayersToAdd = Math.min(\r\n            this.props.game['Max players'] - this.playerCount(),\r\n            this.state.interested.length\r\n        );\r\n\r\n        let randIdx, randUsername;\r\n        let randIdxArray = [], randUsernameArray = [];\r\n        // let interested = this.state.interested;\r\n        let playing = this.state.playing;\r\n\r\n        while(randIdxArray.length < numPlayersToAdd) {\r\n            randIdx = Math.floor(Math.random() * this.state.interested.length);\r\n            if (!randIdxArray.includes(randIdx)) {\r\n                randIdxArray.push(randIdx);\r\n                randUsername = this.state.interested[randIdx].username;\r\n                randUsernameArray.push(randUsername);\r\n                playing = [\r\n                    ...playing,\r\n                    this.state.interested[randIdx]\r\n                ];\r\n            }\r\n        }\r\n        this.setState((state) => {\r\n            return {\r\n                interested: state.interested.filter((uObj) => !randUsernameArray.includes(uObj.username)),\r\n                playing\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPlayerCard = (userObj, id, curColumn) => {\r\n        return (\r\n            <div key={id} className=\"player-card lh-sm fs-5\">\r\n                <div className=\"player-card-username\">\r\n                    {userObj.isPrioritySeat === true && <img src={star} alt=\"Priority seat redemption\"/>}\r\n                    <p className='player-name' style={{\r\n                        maxWidth: this.state.columnWidth - 25\r\n                    }}>{userObj.username}</p>\r\n                </div>\r\n                <div className=\"change-col-buttons-container\">\r\n                    {curColumn !== 'interested' && <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'interested')}>Interested</button>}\r\n                    {curColumn !== 'playing' && <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'playing')}>Playing</button>}\r\n                    {/*curColumn !== 'joined' && <button className='change-col' onClick={this.updateColumnForUser.bind(this, userObj, 'joined')}>Joined</button>*/}\r\n                    <button className=\"change-col\" onClick={this.removeUser.bind(this, userObj.username)}>X</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStreamerSeatToggle = () => {\r\n        return (\r\n            <div className=\"toggle-streamer-seat\">\r\n                <label className=\"toggle-label form-check-label\" htmlFor=\"reserve-seat-for-streamer\">\r\n                    Reserve seat for streamer?\r\n                </label>\r\n                <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"reserve-seat-for-streamer\" defaultChecked={this.state.streamerSeat} onChange={this.toggleStreamerSeat} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPlayerCount = () => {\r\n        let className = 'player-count';\r\n        if (this.props.game?.['Max players'] < this.playerCount()) {\r\n            className += ' overlimit';\r\n        }\r\n        return (\r\n            <div className={className}>\r\n                {this.playerCount()} of {this.props.game?.['Max players']} seats claimed\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let startGameClass = 'btn btn-sm start-game';\r\n        if (this.playerCount() < this.props.game?.['Min players']){\r\n            startGameClass += ' disabled';\r\n        }\r\n\r\n        return (\r\n            <div className=\"card player-select-container\">\r\n                <div className=\"card-header d-flex justify-content-between\">\r\n                    {this.renderStreamerSeatToggle()}\r\n                    <div className=\"fs-2 lh-sm game-name\">\r\n                        <b>{this.props.game?.name ?? \"TBD\"}</b>\r\n                        {this.renderPlayerCount()}\r\n                    </div>\r\n                    <button className={startGameClass} onClick={this.startGame} disabled={!this.canStartGame()}>Start Game</button>\r\n                </div>\r\n                <div className=\"card-body player-card-container\">\r\n                    <div ref={this.firstColumn} className='player-card-column interested'>\r\n                        <p className=\"player-card-column-header\">Interested</p>\r\n                        {this.state.interested.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                        {this.state.interested.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                    </div>\r\n\r\n                    <div className='player-card-column playing'>\r\n                        <p className=\"player-card-column-header\">Playing\r\n                        <button className=\"dice\" onClick={this.randomizePlayers}>\r\n                            <img src={dice} alt=\"dice icon\"/>\r\n                        </button>\r\n                        </p>\r\n                        {this.state.playing.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                        {this.state.playing.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                    </div>\r\n\r\n                    {/*<div className='player-card-column joined'>\r\n                        <p className=\"player-card-column-header\">Joined</p>\r\n                        {this.state.joined.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                        {this.state.joined.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                    </div>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: 0\n        }\n\n        this.getHistoryList = this.getHistoryList.bind(this);\n        this.getNextGameName = this.getNextGameName.bind(this);\n        this.getNextGamePartyPack = this.getNextGamePartyPack.bind(this);\n        this.hasNextGame = this.hasNextGame.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.printGame = this.printGame.bind(this);\n    }\n\n    getHistoryList = (history) => {\n        if (history.length === 0) {\n            return (\n                <span className=\"history-placeholder\" key='placeholder'>No games yet</span>\n            );\n        }\n        return (\n            <Droppable droppableId=\"historyList\">\n                {(provided) => (\n                    <span className=\"historyList\" {...provided.droppableProps} ref={provided.innerRef}>\n                        {history.map(({name, time}, index) => {\n                            return (\n                                <Draggable key={`${time}`} draggableId={`${time}`} index={index}>\n                                    {(provided) => (\n                                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                            {this.printGame(index)}\n                                        </li>\n                                    )}\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </span>\n                )}\n            </Droppable>\n        );\n    }\n\n    getNextGameName = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].name\n            : 'not yet decided';\n    }\n\n    getNextGamePartyPack = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].partyPack\n            : null;\n    }\n\n    handleOnDragEnd = (result) => {\n        if (!result.destination) return;\n\n        const _items = Array.from(this.props.history).fill();\n        _items[this.props.nextGameIdx] = true;\n        const [_reorderedItem] = _items.splice(result.source.index, 1);\n        _items.splice(result.destination.index, 0, _reorderedItem);\n\n        const newNextGameIdx = _items.findIndex(i => i);\n\n        const items = Array.from(this.props.history);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        this.props.changeGameOrder(items, newNextGameIdx);\n    }\n\n    hasNextGame = () => {\n        return this.props.history.length > this.props.nextGameIdx;\n    }\n\n    moveNextGameFwd = () => {\n        return this.props.changeNextGameIdx(1);\n    }\n\n    moveNextGameBack = () => {\n        return this.props.changeNextGameIdx(-1);\n    }\n\n    removeSelectedGameFromHistory = () => {\n        return this.props.removeSelectedGameFromHistory();\n    }\n\n    printGame = (idx) => {\n        if (idx === this.props.nextGameIdx) {\n            return (\n                <b>{this.props.history[idx].name}</b>\n            );\n        }\n        return this.props.history[idx].name;\n    }\n\n    render() {\n        let nextGame = this.hasNextGame();\n\n        let buttonPlayerSelect;\n        switch (this.props.requestMode) {\n            case 'game':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"open-seat-requests\" disabled={!nextGame} onClick={this.props.togglePlayerSelect}>\n                        OPEN SEAT REQUESTS\n                    </button>\n                )\n                break;\n            case 'seat':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"return-to-wheel\" onClick={this.props.togglePlayerSelect}>\n                        RETURN TO WHEEL\n                    </button>\n                )\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <div id=\"sidebar\" className={this.props.requestMode}>\n                <div className=\"card sidebar-panel\">\n                    <div className=\"card-header fw-bolder\">\n                        Up Next\n                    </div>\n                    <div className=\"card-body sidebar-up-next-panel\">\n                        <h5 className=\"card-title mb-2 fw-bolder\">\n                            <button className=\"cancel-game\" onClick={this.removeSelectedGameFromHistory}>X</button>\n                            {this.getNextGameName()}\n                        </h5>\n                        <div className=\"card-subtitle mb-2 fs-7 fst-italic text-light\"\n                            style={{'--bs-text-opacity': '0.75'}}>\n                            {this.getNextGamePartyPack()}\n                        </div>\n\n                        {buttonPlayerSelect}\n                    </div>\n                </div>\n\n                <div className=\"nav-wrapper py-2\">\n                    <button className=\"btn-sm move-next-game-back\" onClick={this.moveNextGameBack}> &#8678; </button>\n                    <button className=\"btn-sm move-next-game-fwd\" onClick={this.moveNextGameFwd}> &#8680; </button>\n                </div>\n\n                <div className=\"card sidebar-panel\">\n                    <DragDropContext onDragEnd={this.handleOnDragEnd}>\n                        <div className=\"card-header fw-bolder\">\n                            History\n                        </div>\n                        <div className=\"card-body sidebar-history-list-panel\">\n                            {this.getHistoryList(this.props.history)}\n                        </div>\n                    </DragDropContext>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {useEffect, useState} from 'react';\n\nconst WheelComponent = ({\n    segments,\n    segColors,\n    winningSegment,\n    onStart = ()=>{},\n    onSpinProgress,\n    onFinished,\n    primaryColor,\n    contrastColor,\n    buttonText,\n    isOnlyOnce = true,\n    size = 290,\n    upDuration = 100,\n    downDuration = 1000,\n    fontFamily = 'proxima-nova',\n    wheelHeight = 720,\n    wheelWidth = 600,\n    enableScrollTop = true,\n    multilineDelimiter = null\n}) => {\n    let currentSegment = '';\n    let currentSegmentLabel = '';\n    let isStarted = false;\n    const [isFinished, setFinished] = useState(false);\n    let timerHandle = 0;\n    const timerDelay = segments.length / 2;\n    let angleCurrent = 0;\n    let angleDelta = 0;\n    let canvasContext = null;\n    let maxSpeed = Math.PI / `${segments.length}`* 4;\n    const upTime = segments.length * upDuration;\n    const downTime = segments.length * downDuration;\n    let spinStart = 0;\n    let frames = 0;\n    const centerX = Math.round(wheelWidth/2);\n    const centerY = Math.round(wheelHeight/2.5);\n\n    useEffect(() => {\n        wheelInit();\n        if (enableScrollTop) {\n            setTimeout(() => {\n                window.scrollTo(0, 1);\n            }, 0);\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // const spinButton = new Path2D();\n    // TODO: fix scope issues with button\n    // canvasContext.beginPath();\n    // spinButton.arc(centerX, centerY, 50, 0, 2 * Math.PI, false);\n    // canvasContext.fill(rectangle);\n    // canvasContext.beginPath();\n    // canvasContext.arc(centerX, centerY, 50, 0, PI2, false);\n    // canvasContext.closePath();\n\n    const wheelInit = () => {\n        initCanvas();\n        wheelDraw();\n    };\n\n    const initCanvas = () => {\n        let canvas = document.getElementById('canvas');\n        if (navigator.appVersion.indexOf('MSIE') !== -1) {\n            canvas = document.createElement('canvas');\n            canvas.setAttribute('width', wheelWidth);\n            canvas.setAttribute('height', wheelHeight);\n            canvas.setAttribute('id', 'canvas');\n            document.getElementById('wheel').appendChild(canvas);\n        }\n        canvas.addEventListener('click', spin, false);\n        canvasContext = canvas.getContext('2d');\n    };\n    const spin = (event) => {\n        // if (!canvasContext.isPointInPath(spinButton, event.offsetX, event.offsetY)) {\n        //     return;\n        // }\n        isStarted = true;\n        if (timerHandle === 0) {\n            spinStart = new Date().getTime();\n            // maxSpeed = Math.PI / ((segments.length*2) + Math.random())\n            maxSpeed = Math.max(0.4, Math.PI / segments.length);\n            frames = 0;\n            timerHandle = setInterval(onTimerTick, timerDelay);\n        }\n        console.log({maxSpeed});\n        onStart();\n    };\n    const onTimerTick = () => {\n        frames++;\n        draw();\n        const duration = new Date().getTime() - spinStart;\n        let progress = 0;\n        let finished = false;\n        if (duration < upTime) {\n            progress = duration / upTime;\n            angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2);\n        } else {\n            if (winningSegment) {\n                if (currentSegment === winningSegment && frames > segments.length) {\n                    progress = duration / upTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                    progress = 1;\n                } else {\n                    progress = duration / downTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                }\n            } else {\n                progress = duration / downTime;\n                angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n            }\n            if (progress >= 1) {\n                finished = true;\n            }\n        }\n\n        angleCurrent += angleDelta;\n        while (angleCurrent >= Math.PI * 2) {\n            angleCurrent -= Math.PI * 2;\n        }\n        if (finished) {\n            setFinished(true);\n            onFinished(currentSegment);\n            clearInterval(timerHandle);\n            timerHandle = 0;\n            angleDelta = 0;\n        }\n        onSpinProgress && onSpinProgress({finished, progress, frames})\n    };\n\n    const wheelDraw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const draw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const drawSegment = (key, lastAngle, angle) => {\n        const ctx = canvasContext;\n        const value = segments[key];\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.arc(centerX, centerY, size, lastAngle, angle, false);\n        ctx.lineTo(centerX, centerY);\n        ctx.closePath();\n        ctx.fillStyle = segColors[key];\n        ctx.fill();\n        ctx.stroke();\n        ctx.save();\n        ctx.translate(centerX, centerY);\n        ctx.rotate((lastAngle + angle) / 2);\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.font = 'bold 1em ' + fontFamily;\n        // ctx.fillText(value.substr(0, 21), size / 2 + 20, 0);\n        if (multilineDelimiter && value.indexOf(multilineDelimiter) !== -1) {\n            ctx.fillText(value.substr(0, value.indexOf(multilineDelimiter)), size / 2 + 25, -3);\n            ctx.font = '0.75em ' + fontFamily;\n            ctx.fillText(value.substr(value.indexOf(multilineDelimiter) + 1, 21), size / 2 + 25, 11);\n        } else {\n            ctx.fillText(value.substr(0, 21), size / 2 + 25, 0)\n        }\n        ctx.restore();\n    };\n\n    const drawWheel = () => {\n        const ctx = canvasContext;\n        let lastAngle = angleCurrent;\n        const len = segments.length;\n        const PI2 = Math.PI * 2;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        ctx.font = '1em ' + fontFamily;\n        for (let i = 1; i <= len; i++) {\n            const angle = PI2 * (i / len) + angleCurrent;\n            drawSegment(i - 1, lastAngle, angle);\n            lastAngle = angle;\n        }\n\n        // Draw a center circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, 50, 0, PI2, false);\n        ctx.closePath();\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fill();\n        ctx.font = 'bold 1em ' + fontFamily;\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.textAlign = 'center';\n        ctx.fillText(buttonText || 'Spin', centerX, centerY + 3);\n        ctx.stroke();\n\n        // Draw outer circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, size, 0, PI2, false);\n        ctx.closePath();\n\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.stroke();\n    };\n\n    const drawNeedle = () => {\n        const ctx = canvasContext;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fileStyle = contrastColor || 'white';\n        ctx.beginPath();\n        ctx.moveTo(centerX + 20, centerY - 50);\n        ctx.lineTo(centerX - 20, centerY - 50);\n        ctx.lineTo(centerX, centerY - 70);\n        ctx.closePath();\n        ctx.fill();\n        const change = angleCurrent + Math.PI / 2;\n        let i = segments.length - Math.floor((change / (Math.PI * 2)) * segments.length) - 1;\n        if (i < 0) {\n            i = i + segments.length;\n        }\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.font = 'bold 1.5em ' + fontFamily;\n        currentSegment = segments[i];\n\n        // prevent displaying 'undefined' as the selected label\n        currentSegmentLabel = currentSegment || '';\n        if (isStarted) {\n            ctx.fillText(currentSegmentLabel, centerX + 10, centerY + size + 50);\n        }\n    };\n    const clear = () => {\n        const ctx = canvasContext;\n        ctx.clearRect(0, 0, wheelWidth, wheelHeight);\n    };\n\n    let pointerEvents = 'auto';\n    if (isFinished && isOnlyOnce) {\n        pointerEvents = 'none'\n    }\n\n    return (\n        <div id=\"wheel\" style={{position: 'relative'}}>\n            <canvas id=\"canvas\" width={wheelWidth} height={wheelHeight} style={{pointerEvents}}/>\n        </div>\n    );\n};\nexport default WheelComponent;\n","import {Component} from 'react';\nimport {Button, Modal} from 'react-bootstrap';\nimport ChatActivity, { ActivityStatus } from '../ChatActivity';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport GameRequest from '../components/GameRequest'\nimport MessageHandler from '../MessageHandler';\nimport OptionsMenu from './OptionsMenu';\nimport PlayerSelect from '../components/PlayerSelect';\nimport Sidebar from './Sidebar'\nimport WheelComponent from '../WheelComponent'; //'react-wheel-of-prizes'\nimport * as fakeStates from '../example-states';\n\nimport './MainScreen.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nconst randomColor = require('randomcolor');\n\n\nexport default class MainScreen extends Component {\n    constructor(props){\n        super(props);\n        this.chatActivity = new ChatActivity(this.props.channel)\n        let settings = {};\n        let isJestEnv = (process.env.JEST_WORKER_ID !== undefined);\n        try {\n            let savedSettings = localStorage.getItem('__settings');\n            if (!!savedSettings) {\n                settings = JSON.parse(savedSettings);\n                if (!isJestEnv) {\n                    console.log('Saved settings loaded!');\n                }\n            } else {\n                if (!isJestEnv) {\n                    console.log('No saved settings detected, using defaults.');\n                }\n            }\n        } catch (e) {\n            console.log('Unable to load or read saved settings, using defaults.');\n        }\n        this.state = {\n            allowGameRequests: true,\n            gameSelected: null,\n            messages: {},\n            colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\n            counter: 0,\n            history: [],\n            logUserMessages: false,\n            nextGameIdx: 0,\n            settings,\n            showOptionsMenu: false,\n            showOptionsModal: false,\n            showPlayerSelect: false\n        };\n\n        this.playerSelector = null;\n        this.messageHandler = null;\n\n        this.changeNextGameIdx = this.changeNextGameIdx.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.addGameRequest = this.addGameRequest.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.setNextGame = this.setNextGame.bind(this);\n        this.addGameToQueue = this.addGameToQueue.bind(this);\n        this.onWheelSpun = this.onWheelSpun.bind(this);\n        this.removeGame = this.removeGame.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.toggleAllowGameRequests = this.toggleAllowGameRequests.bind(this);\n        this.togglePlayerSelect = this.togglePlayerSelect.bind(this);\n        this.routePlayRequest = this.routePlayRequest.bind(this);\n        this.routeLeaveRequest = this.routeLeaveRequest.bind(this);\n        this.routeOpenQueueRequest = this.routeOpenQueueRequest.bind(this);\n        this.routeCloseQueueRequest = this.routeCloseQueueRequest.bind(this);\n        this.routeClearQueueRequest = this.routeClearQueueRequest.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.setMessageHandlerRef = this.setMessageHandlerRef.bind(this);\n        this.setPlayerSelectRef = this.setPlayerSelectRef.bind(this);\n    }\n\n    componentDidMount() {\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\n            if (window.location.hash.indexOf('playerselect=true') !== -1) {\n                this.setState(\n                    Object.assign({}, fakeStates.MainScreen, {\n                        showPlayerSelect: true\n                    })\n                );\n            } else {\n                this.setState(fakeStates.MainScreen);\n            }\n        }\n    }\n\n    changeNextGameIdx = (delta = 1) => {\n        if (this.state.nextGameIdx + delta > this.state.history.length) return false;\n        if (this.state.nextGameIdx + delta < 0) return false;\n        this.setState((state) => {\n            return {\n                nextGameIdx: state.nextGameIdx + delta\n            }\n        });\n        return true;\n    }\n\n    changeGameOrder = (history, nextGameIdx) => {\n        if (nextGameIdx > history.length) return false;\n        this.setState({\n            history,\n            nextGameIdx\n        });\n        return true;\n    }\n\n    moveNextGameFwd = () => {\n        return this.changeNextGameIdx();\n    }\n\n    moveNextGameBack = () => {\n        return this.changeNextGameIdx(-1);\n    }\n\n    addGameRequest = (gameObj, user, isSubRequest) => {\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: {\n                    ...this.state.messages,\n                    [gameObj.longName]: {\n                        ...gameObj,\n                        username: user,\n                        isSubRequest,\n                        time: Date.now(),\n                        locked: false,\n                        chosen: false\n                    }\n                },\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    toggleLock = (game) => {\n        const stateCopy = {...this.state.messages[game]};\n        stateCopy.locked = !stateCopy.locked\n\n        this.setState(() => {\n            return {\n                ...this.state,\n                messages: {\n                    ...this.state.messages,\n                    [game]: stateCopy\n                }\n            }\n        });\n    }\n\n    // @return: the number of games ahead of this one, after successfully inserting in queue\n    // (i.e. if it's the very next game, return 0; if there's one ahead, return 1; etc)\n    setNextGame = (gameObj) => {\n        let idx = this.state.nextGameIdx;\n\n        // insert next game at next up position by default, but\n        //      *after* any other manually inserted games\n        while (idx < this.state.history.length && this.state.history[idx]?.override) {\n            idx++;\n        }\n\n        this.setState((state) => {\n            return {\n                ...state,\n                history: [\n                    ...state.history.slice(0, Math.max(0, idx)),\n                    {\n                        ...gameObj,\n                        override: true,\n                        time: Date.now()\n                    },\n                    ...state.history.slice(idx)\n                ]\n            }\n        });\n\n        return idx - this.state.nextGameIdx;\n    }\n\n    addGameToQueue = (gameObj) => {\n        // update history + game card highlight color\n        this.setState((state) => {\n            return {\n                ...state,\n                gameSelected: gameObj,\n                history: [\n                    ...this.state.history,\n                    {\n                        ...gameObj,\n                        override: false\n                    }\n                ],\n                messages: {\n                    ...state.messages,\n                    [gameObj.longName]: {\n                        ...state.messages[gameObj.longName],\n                        chosen: true\n                    }\n                }\n            }\n        });\n    }\n\n    clearModal = () => {\n        this.setState({\n            gameSelected: null\n        });\n    }\n\n    getGamesList = () => {\n        return {\n            allowedGames: this.messageHandler?.state.allowedGames,\n            validGames: this.messageHandler?.state.validGames\n        }\n    }\n    getOptionsDebugMenu = () => {\n        return [{\n            label: 'Load Mock Game Requests',\n            onClick: () => {\n                return this.setState(\n                    Object.assign({}, fakeStates.MainScreen)\n                );\n            }\n        },{\n            label: 'Load Mock Game & Player Requests',\n            onClick: () => {\n                return this.setState(\n                    Object.assign({}, fakeStates.MainScreen, {\n                        showPlayerSelect: true\n                    }),\n                    () => {\n                        this.playerSelector?.setState(fakeStates.PlayerSelect);\n                    }\n                );\n            }\n        }, {\n            label: 'Log Debug Environment',\n            onClick: () => {\n                console.log('NODE_ENV:', process.env.NODE_ENV);\n                console.log('REACT_APP_REDIRECT_URI:', process.env.REACT_APP_REDIRECT_URI);\n            }\n        }, {\n            label: 'Toggle User Message Logging',\n            onClick: () => {\n                return this.setState(prevState => ({\n                    logUserMessages: !prevState.logUserMessages\n                }));\n            }\n        }];\n    }\n\n    getOptionsMenu = () => {\n        return [{\n            label: 'Reload Game List',\n            onClick: this.messageHandler?.reloadGameList\n        }];\n    }\n\n    onWheelSpun = (gameLongName) => {\n        const gameRequestObj = this.state.messages?.[gameLongName];\n        if (!gameRequestObj) return;\n\n        // send confirmation message in chat\n        const requester = gameRequestObj.username;\n\n        this.addGameToQueue(gameRequestObj);\n\n        // remove card unless it's locked\n        if (!this.state.messages[gameLongName].locked) {\n            setTimeout(() => {\n                this.removeGame(gameLongName);\n                this.clearModal();\n            }, 4000);\n        }\n\n        return this.chatActivity.getStatusPromise(requester).then((status) => {\n            let msg = \"\";\n            switch(status) {\n                case ActivityStatus.DISCONNECTED:\n                    msg = `/me ${gameRequestObj.name} just won the spin, but it doesn't seem like @${requester} is still around. Hope someone else wants to play!`\n                    break;\n\n                case ActivityStatus.ACTIVE:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin!`;\n                    break;\n\n                case ActivityStatus.IDLE:\n                default:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin! (I hope you're still around!)`;\n            }\n            return this.messageHandler.sendMessage(msg);\n        })\n\n    }\n\n    removeGame = (gameLongName) => {\n        const newMessageObj = {...this.state.messages};\n        delete newMessageObj[gameLongName];\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: newMessageObj,\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    removeSelectedGameFromHistory = () => {\n        let {history, nextGameIdx} = this.state;\n        if (!history[nextGameIdx]) {\n            return false;\n        }\n        let currGame = history[nextGameIdx];\n        delete history[nextGameIdx];\n        this.setState({\n            history: history.filter(h => !!h),\n            nextGameIdx: Math.max(-1, Math.min(nextGameIdx, history.length))\n        });\n        return currGame;\n    }\n\n    onMessage = (message, user, metadata) => {\n        this.chatActivity.updateLastMessageTime(user);\n    }\n\n    onSettingsUpdate = (nextSettings) => {\n        let {settings} = this.state;\n        localStorage.setItem('__settings', JSON.stringify(\n            Object.assign({}, settings, nextSettings)\n        ));\n        console.log('Settings saved:', settings);\n        return this.setState(prevState => ({\n            settings: Object.assign({}, settings, nextSettings)\n        }));\n    }\n\n    toggleAllowGameRequests = (allow=null) => {\n        let {allowGameRequests} = this.state;\n        if (allow !== null && typeof allow !== 'object') {\n            allowGameRequests = !allow;\n        }\n        this.setState((state) => {\n            return {\n                allowGameRequests: !allowGameRequests\n            }\n        })\n    }\n\n    toggleOptionsMenu = () => {\n        this.setState((state) => {\n            return {\n                showOptionsMenu: !state.showOptionsMenu\n            }\n        })\n    }\n\n    toggleOptionsModal = () => {\n        this.setState((state) => {\n            return {\n                showOptionsModal: !state.showOptionsModal\n            }\n        })\n    }\n\n    togglePlayerSelect = () => {\n        this.setState((state) => {\n            return {\n                showPlayerSelect: !state.showPlayerSelect\n            }\n        })\n    }\n\n    routePlayRequest = (user, {sendConfirmationMsg = true, isPrioritySeat = false}) => {\n        const msg = this.state.showPlayerSelect\n            ? this.playerSelector?.handleNewPlayerRequest(user, {isPrioritySeat})\n            : 'sign-ups are currently closed; try again after this game wraps up!'\n\n        if (sendConfirmationMsg) {\n            this.messageHandler?.sendMessage(`/me @${user}, ${msg}`);\n        }\n    }\n\n    routeLeaveRequest = (user) => {\n        this.playerSelector?.removeUser(user);\n    }\n\n    routeOpenQueueRequest = () => {\n        this.setState((state) => {\n            return {\n                ...state,\n                showPlayerSelect: true\n            }\n        })\n        this.playerSelector?.openQueue();\n    }\n\n    routeCloseQueueRequest = () => {\n        this.playerSelector?.closeQueue();\n    }\n\n    routeClearQueueRequest = () => {\n        this.playerSelector?.clearQueue();\n    }\n\n    startGame = () => {\n        if (this.state.showPlayerSelect) {\n            this.togglePlayerSelect();\n            this.moveNextGameFwd();\n            return true;\n        }\n        return false;\n    }\n\n    setMessageHandlerRef = (ps) => {\n        this.messageHandler = ps;\n    };\n\n    setPlayerSelectRef = (mh) => {\n        this.playerSelector = mh;\n    };\n\n    renderGameChosenModal(gameObj) {\n        let confettiProps = {\n            force: 0.6,\n            duration: 3500,\n            particleCount: 100,\n            floorHeight: Math.max(window.outerWidth, window.outerHeight),\n            floorWidth: Math.max(window.outerWidth, window.outerHeight)\n        };\n        let requestedBy;\n        if (gameObj.username) {\n            requestedBy = (<h4>requested by @{gameObj.username}</h4>);\n        }\n        return (\n            <>\n                <div className=\"overlay fade-in-out\">\n                    <div className=\"confetti-wrapper\">\n                        <ConfettiExplosion {...confettiProps} />\n                    </div>\n                </div>\n                <div className=\"confetti-modal modal-game-chosen fade-in-out\" onClick={()=>this.removeGame(gameObj.longName)}>\n                    <h1>{gameObj.name}</h1>\n                    {requestedBy}\n                </div>\n            </>\n        );\n    }\n\n    renderOptionsModal() {\n        let {allowedGames, validGames} = this.messageHandler.state;\n        let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n            return Object.keys(packData[1]).map(gameData => {\n                let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n                return {\n                    id: gameId,\n                    game: gameData,\n                    pack: packData[0]\n                }\n            })\n        }))\n        // let gamesList = gamePackList.map(g => g.game);\n        console.log('gamePackList:', gamePackList, allowedGames);\n\n        return (\n            <Modal\n                show={this.state.showOptionsModal}\n                onHide={()=>this.toggleOptionsModal(false)}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Options\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Options</h4>\n                    <div className=\"options-list\">\n                        <ul>\n                            {gamePackList.map(({id, game, pack}, idx) => {\n                                // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n                                return (\n                                    <li key={id}>\n                                        <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n                                    </li>\n                                )}\n                            )}\n                        </ul>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button data-bs-dismiss=\"modal\">Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    render() {\n        const gameRequestArray = Object.keys(this.state.messages);\n\n\n        let gameSelectedModal;\n        if (this.state.showOptionsModal) {\n            gameSelectedModal = this.renderOptionsModal();\n        } else if (this.state.gameSelected) {\n            gameSelectedModal = this.renderGameChosenModal(this.state.gameSelected);\n        }\n\n        let mainClassName = this.state.showPlayerSelect ? 'player-select' : 'game-select';\n\n        let subheading = this.state.showPlayerSelect ? (\n            <span className=\"subheading-player fade-in-delay\">\n                Type <b>!new</b> in {this.props.channel}'s chat if you want to join the next game\n            </span>\n        ) : (\n            <span\n                className={`subheading-game ${(this.state.allowGameRequests === true ? 'fade-in-delay' : 'fade-out')}`} \n                title={`Click to ${this.state.allowGameRequests === true ? 'disable' : 'enable'} game requests.`} \n                onClick={this.toggleAllowGameRequests}>\n                Type e.g. <b>\"!request Blather Round\"</b> in {this.props.channel}'s chat to add\n            </span>\n        );\n\n        let innerContent;\n        let rightColumn;\n\n        if (this.state.showPlayerSelect) {\n            innerContent = (\n                <PlayerSelect\n                    game={this.state.history?.[this.state.nextGameIdx]}\n                    startGame={this.startGame}\n                    ref={this.setPlayerSelectRef}\n                />\n            );\n        } else {\n            innerContent = gameRequestArray.map((gameName, i) =>\n                <GameRequest\n                    key={i}\n                    gameName={gameName}\n                    metadata={this.state.messages[gameName]}\n                    onDelete={this.removeGame}\n                    toggleLock={this.toggleLock.bind(gameName)}\n                    getActivity={this.chatActivity.getStatusPromise}\n                />\n            );\n            // reduce spin time for large number of game requests\n            let upDuration = (gameRequestArray.length < 5) ? 100 : (500 / gameRequestArray.length);\n            let downDuration = (gameRequestArray.length < 5) ? 1000 : (5000 / gameRequestArray.length);\n\n            rightColumn = (\n                <div className=\"right-column\" width=\"50px\">\n                    <div className=\"wheel-wrapper fade-in\">\n                         <WheelComponent\n                            key={this.state.counter}\n                            segments={gameRequestArray}\n                            segColors={this.state.colors}\n                            onFinished={this.onWheelSpun}\n                            isOnlyOnce={false}\n                            size={250}\n                            upDuration={upDuration}\n                            downDuration={downDuration}\n                            primaryColor={\"white\"}\n                            contrastColor={\"black\"}\n                            fontFamily={\"Arial\"}\n                            multilineDelimiter={' ('}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        let gamesList = this.getGamesList();\n\n        return (\n            <div id=\"main-screen\" className={mainClassName}>\n                <nav className=\"main-screen-nav navbar-dark\">\n                    <button className=\"btn btn-toggle-options float-end navbar-toggler\" type=\"button\" onClick={this.toggleOptionsMenu}>\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                </nav>\n                <MessageHandler\n                    access_token={this.props.access_token}\n                    addGameRequest={this.addGameRequest}\n                    allowGameRequests={this.state.allowGameRequests}\n                    caniplayHandler={this.routePlayRequest}\n                    changeNextGameIdx={this.changeNextGameIdx}\n                    channel={this.props.channel}\n                    clearQueueHandler={this.routeClearQueueRequest}\n                    closeQueueHandler={this.routeCloseQueueRequest}\n                    messages={this.state.messages}\n                    modList={this.props.modList}\n                    onDelete={this.removeGame}\n                    onMessage={this.onMessage}\n                    openQueueHandler={this.routeOpenQueueRequest}\n                    playerExitHandler={this.routeLeaveRequest}\n                    previousGames={this.state.history.slice(0, this.state.nextGameIdx)}\n                    ref={this.setMessageHandlerRef}\n                    removeSelectedGameFromHistory={this.removeSelectedGameFromHistory}\n                    setNextGame={this.setNextGame}\n                    settings={this.state.settings}\n                    onSettingsUpdate={this.onSettingsUpdate}\n                    startGame={this.startGame}\n                    toggleAllowGameRequests={this.toggleAllowGameRequests}\n                    upcomingGames={this.state.history.slice(this.state.nextGameIdx)}\n                />\n                <div className=\"left-column fade-in\">\n\n                    <h1>{this.state.showPlayerSelect ? 'Seat Requests' : 'Game Requests'}</h1>\n                    <h4>{subheading}</h4>\n\n                    <div className=\"left-column-body\">\n                        <Sidebar\n                            changeGameOrder={this.changeGameOrder}\n                            parentState={this.state}\n                            history={this.state.history}\n                            nextGameIdx={this.state.nextGameIdx}\n                            changeNextGameIdx={this.changeNextGameIdx}\n                            moveNextGameFwd={this.moveNextGameFwd}\n                            moveNextGameBack={this.moveNextGameBack}\n                            togglePlayerSelect={this.togglePlayerSelect}\n                            requestMode={this.state.showPlayerSelect ? 'seat' : 'game'}\n                            removeSelectedGameFromHistory={this.removeSelectedGameFromHistory}\n                        />\n                        <div className=\"left-column-inner-body\">\n                            {innerContent}\n                        </div>\n                    </div>\n                </div>\n                {rightColumn}\n                {gameSelectedModal}\n                <OptionsMenu\n                    gamesList={gamesList}\n                    parentState={this.state}\n                    debugItems={this.getOptionsDebugMenu()}\n                    items={this.getOptionsMenu()}\n                    reloadGameList={this.messageHandler?.reloadGameList}\n                    onHide={this.toggleOptionsMenu}\n                    onLogout={this.props.onLogout}\n                    onSettingsUpdate={this.onSettingsUpdate}\n                    settings={this.state.settings}\n                    showOptionsMenu={this.state.showOptionsMenu} />\n            </div>\n        )\n    }\n}\n","import './load-spinner.css';\n\nfunction LoadSpinner(props) {\n    return <div className=\"lds-ripple\">\n        <div></div>\n        <div></div>\n    </div>;\n}\nexport default LoadSpinner;\n","import React, {Component} from 'react';\nimport MainScreen from './landing/MainScreen';\nimport LoadSpinner from './components/LoadSpinner';\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport queryString from 'query-string'\nconst fetch = require('node-fetch');\n\nclass AuthenticatedApp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: localStorage.getItem('__username'),\n            access_token: localStorage.getItem('__access_token'),\n            failed_login: false\n        }\n        this.getAuth = this.getAuth.bind(this);\n        this.getUsers = this.getUsers.bind(this);\n        this.logOut = this.logOut.bind(this);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (!this.state.access_token) {\n            return this.getAuth();\n        }\n        return this.getUsers(this.state.access_token).catch(e => {\n            console.error(e);\n            return this.getAuth(e);\n        });\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    async getAuth(e) {\n        if (e) {\n            console.error(e);\n        }\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__access_token');\n\n        const queryParams = queryString.parse(this.props.location.search);\n        const requestParams = new URLSearchParams({\n            grant_type: 'authorization_code',\n            code: queryParams.code,\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n        return await fetch(`https://id.twitch.tv/oauth2/token?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        })\n        .then(r => r.json())\n        .then((oauth) => {\n            //console.log(oauth);  access_token, refresh_token, expires_in, scope ['...']\n            if (this._isMounted) {\n                if (!oauth.access_token) {\n                    return this.setState({\n                        failed_login: true\n                    });\n                }\n\n                localStorage.setItem('__access_token', oauth.access_token);\n\n                this.setState({\n                    access_token: oauth.access_token\n                });\n\n                return this.getUsers(oauth.access_token);\n            }\n            return;\n        })\n        .catch(e => {\n            console.error(e);\n            if (this._isMounted) {\n                return this.setState({\n                    failed_login: true\n                });\n            }\n            return;\n        });\n    }\n\n    getUsers(access_token) {\n        return fetch('https://api.twitch.tv/helix/users', {\n            headers: {\n                'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                Authorization: `Bearer ${this.state.access_token}`\n            }\n        })\n        .then(r => r.json())\n        .then(userInfo => {\n            //console.log(userInfo); login [aka lowercase username?], display_name, profile_image_url, description\n            localStorage.setItem('__username', userInfo.data[0].login);\n            return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\n                headers: {\n                    'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                    Authorization: `Bearer ${this.state.access_token}`\n                }\n            })\n            .then(r => r.json())\n            .then(modInfo => {\n                const modList = (!modInfo.data)\n                    ? null\n                    : modInfo.data.map((modObj) => (!modObj.user_name) ? null : modObj.user_name.toLowerCase()).filter(user => user);\n                if (this._isMounted) {\n                    return this.setState({\n                        username: userInfo.data[0].login,\n                        modList\n                    });\n                }\n                return;\n            });\n        });\n    }\n\n    logOut() {\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__access_token');\n\n        const requestParams = new URLSearchParams({\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            token: this.state.access_token,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n\n        return fetch(`https://id.twitch.tv/oauth2/revoke?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        }).then(() => {\n            return window.location.reload();\n        });\n    }\n\n    render() {\n        if (this.state.failed_login) {\n            return (<Redirect to=\"/login\"/>);\n        }\n        let mainContent = (\n            <h2>\n                <LoadSpinner />\n                <br />\n                Loading...\n            </h2>\n        );\n        let classNames = ['authenticated-app'];\n        if (this.state.username && this.state.modList) {\n            mainContent = (\n                <MainScreen\n                    channel={this.state.username}\n                    modList={this.state.modList}\n                    access_token={this.state.access_token}\n                    onLogout={this.logOut}\n                />\n            );\n        }\n\n        return (\n            <div id={classNames.join(' ')}>\n                {mainContent}\n            </div>\n        );\n    }\n}\n\nexport {AuthenticatedApp};\n\nexport default withRouter(AuthenticatedApp);\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './JackboxGameList.css';\nconst fetch = require('node-fetch');\n\nconst PartyPackCard = function (props) {\n  const gameList = Object.keys(props.metadata);\n  return (\n    <div className=\"partyPackCard\">\n      <p className=\"partyPackName\">{props.partyPackName} </p>\n      {gameList.map((gameName, i) =>\n        <GameCard\n          key={i}\n          gameName={gameName}\n          possibleMatches={props.metadata?.[gameName]?.Variants}\n        />\n      )}\n    </div>\n  );\n}\n\n\n// <p> {props.gameName} <p>\n\nconst GameCard = function(props) {\n  return (\n    <div className=\"mt-2 lh-sm\">\n      <p className=\"gameName\">{props.gameName} </p>\n      {props.possibleMatches.map((possibleMatch, i) =>\n        <li className=\"possibleGameMatch\" key={`${props.gameName}-${i}`}>!request {possibleMatch}</li>\n      )}\n    </div>\n  );\n}\n\nexport default class JackboxGameList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validGames: []\n    };\n  }\n\n  componentDidMount(props) {\n    fetch(rawJackboxGameList)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            validGames: YAML.parse(text)\n          };\n        });\n      })\n    }\n\n\n\n    render() {\n      const partyPackList = Object.keys(this.state.validGames);\n      return (\n        <div className=\"partyPackList\">\n          {partyPackList.map((partyPackName, i) =>\n            <PartyPackCard\n              key={i}\n              partyPackName={partyPackName}\n              metadata={this.state.validGames[partyPackName]}\n            />\n          )}\n        </div>\n      );\n    }\n\n}\n","import React, {Component} from 'react';\nimport {version} from '../package.json';\n\nimport './LoginScreen.css';\n\nconst scopes = 'chat:read chat:edit moderation:read';\nconst loginUrl = 'https://id.twitch.tv/oauth2/authorize'\n    + `?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}`\n    + `&response_type=code&scope=${scopes}`\n    + `&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\n\nclass LoginScreen extends Component {\n\n    render() {\n        return (\n            <div id=\"login-screen\" className=\"fade-in\">\n                <a href={loginUrl} className=\"btn btn-sm fs-2\">\n                    Log In With <strong>Twitch</strong>\n                </a>\n                <br/>\n                <small>\n                    {`v${version}`}\n                </small>\n            </div>\n        );\n    }\n}\n\nexport default LoginScreen;\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './OptionsList.css';\nconst fetch = require('node-fetch');\n\nexport default class OptionsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowedGames: [],\n            validGames: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawJackboxGameList)\n            .then(r => r.text())\n            .then(text => {\n                let validGames = YAML.parse(text);\n                // this.setState({validGames});\n                this.setAllowedGames(validGames);\n            });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.allowedGames || this.state.validGames.length === 0 || this.state.allowedGames.length === 0) return;\n        localStorage.setItem('__allowedGames', JSON.stringify(this.state.allowedGames));\n    }\n\n    getAllowedGames = function(validGames) {\n        let __allowedGames = localStorage.getItem('__allowedGames');\n        let allowedGames = (__allowedGames) ? JSON.parse(__allowedGames) : {};\n\n\n        // let output = {};\n        //\n        // // return list of valid games merged with existing allowedGames\n        // Object.entries(validGames).forEach(([pack, packGames]) => {\n        //     // get valid games within each pack\n        //     Object.keys(packGames).forEach(game => {\n        //         let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n        //         output[gameId] = (allowedGames[gameId])\n        //             ? allowedGames[gameId]\n        //             : {\n        //                 id: gameId,\n        //                 game,\n        //                 pack,\n        //                 enabled: true\n        //             };\n        //         output[gameId] = allowedGames[gameId];\n        //     });\n        // });\n        // return output;\n\n        // return list of valid games merged with existing allowedGames\n        return Object.assign({},\n            ...[].concat(\n                ...Object.entries(validGames).map(([pack, packGames]) => {\n                    // get valid games within each pack\n                    return Object.assign({},\n                        ...Object.keys(packGames).map(game => {\n                            let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n                            if (gameId in allowedGames && allowedGames[gameId].id !== undefined) {\n                                return {\n                                    [gameId]: allowedGames[gameId]\n                                };\n                            }\n                            // add entry with default value\n                            // console.log(`Adding ${gameId}`);\n                            return {\n                                [gameId]: {\n                                    id: gameId,\n                                    game,\n                                    pack,\n                                    enabled: true\n                                }\n                            }\n                        })\n                    );\n                })\n            )\n        )\n    }\n\n    setAllowedGames = function(validGames) {\n        let allowedGames = this.getAllowedGames(validGames);\n        this.setState({\n            allowedGames,\n            validGames\n        });\n        localStorage.setItem('__allowedGames', JSON.stringify(allowedGames));\n    }\n\n    onCheckHandler = ({target}) => {\n        let {id, checked} = target;\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                [id]: {\n                    ...prevState.allowedGames[id],\n                    enabled: checked\n                }\n            }\n        }));\n    }\n\n    onGroupCheckHandler = ({target}) => {\n        let {value, checked} = target;\n        // console.log({value, checked});\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === value);\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                ...Object.assign(\n                    ...packGames.map(g => ({\n                        [g.id]: {\n                            ...g,\n                            enabled: checked\n                        }\n                    })\n                ))\n            }\n        }));\n    }\n\n    renderGameCard = function(props) {\n        let {id, game, pack} = props;\n        let {allowedGames} = this.state;\n        let checked = allowedGames[id]?.enabled || false;\n        return (\n            <li className=\"gameName\" key={id}>\n                <input type=\"checkbox\" id={id} name={id} value={id} checked={checked} onChange={this.onCheckHandler} />\n                {' '}\n                <label htmlFor={id} title={`${pack}: ${game}`}>\n                    {game}\n                </label>\n            </li>\n        );\n    }\n\n    renderPackCheckbox = function(pack) {\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === pack);\n        let isChecked = packGames.filter(g => g.enabled === true).length === packGames.length;\n        return (\n            <input type=\"checkbox\" id={pack} name={pack} value={pack} checked={isChecked} onChange={this.onGroupCheckHandler} />\n        );\n    }\n\n    renderPartyPack = function (props) {\n        const gameList = Object.keys(props.metadata);\n\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === props.partyPackName);\n        let gamesEnabled = packGames.filter(g => g.enabled === true)\n        let isChecked = gamesEnabled.length === packGames.length;\n        let isIndeterminate = (!isChecked && gamesEnabled.length !== 0)\n        return (\n            <div className=\"partyPackCard\" key={props.key}>\n                <p className=\"partyPackName\">\n                    {props.partyPackName} <input type=\"checkbox\" id={props.partyPackName} name={props.partyPackName} value={props.partyPackName} checked={isChecked} onChange={this.onGroupCheckHandler} ref={el => el && (el.indeterminate = isIndeterminate)} />\n                </p>\n                <ul className=\"partyPackGameList\">\n                    {gameList.map(\n                        (gameName, i) => this.renderGameCard({\n                            game: gameName,\n                            id: `${props.partyPackName} ${gameName}`.replace(/\\W/ig, '_'),\n                            pack: props.partyPackName\n                        })\n                    )}\n                </ul>\n            </div>\n        );\n    }\n\n    render() {\n        let {validGames} = this.state;\n        const partyPackList = Object.keys(validGames);\n\n        return (\n            <div className=\"partyPackList\">\n                {partyPackList.map(\n                    (partyPackName, i) => this.renderPartyPack({\n                        key: i,\n                        partyPackName,\n                        metadata: this.state.validGames[partyPackName]\n                    })\n                )}\n            </div>\n        );\n    }\n\n}\n","import AuthenticatedApp from './AuthenticatedApp';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport JackboxGameList from './JackboxGameList';\nimport LoginScreen from './LoginScreen';\nimport OptionsList from './OptionsList';\nimport React, {Component} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n\n        let classNames = ['App'];\n        if (window.location.hash.indexOf('legacy=true') !== -1) {\n            classNames.push('legacy');\n        }\n\n        return (\n            <HashRouter basename='/'>\n                <div className={classNames.join(' ')}>\n                    <Switch>\n                        <Route exact path=\"/login\" component={LoginScreen} />\n                        <Route exact path=\"/gamelist\" component={JackboxGameList}/>\n                        <Route exact path=\"/options\" component={OptionsList}/>\n                        <Route path=\"/\" component={AuthenticatedApp}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n\nexport {LoginScreen};\n","import { ReportHandler } from 'web-vitals';\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from 'react';\nimport {render} from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nrender(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}