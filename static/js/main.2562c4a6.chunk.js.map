{"version":3,"sources":["ChatActivity.js","images/lock.svg","components/GameRequest.js","JackboxGames.yaml","MessageHandler.js","landing/OptionsGameList.js","landing/OptionsMenu.js","example-states.js","images/dice.svg","images/star.svg","components/PlayerSelect.js","landing/Sidebar.js","WheelComponent.js","landing/MainScreen.js","AuthenticatedApp.js","JackboxGameList.js","LoginScreen.js","OptionsList.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","ActivityStatus","ChatActivity","channel","updateLastMessageTime","user","lastMessageTimes","Date","now","minsSinceLastChatMessage","Math","floor","getChatters","then","r","json","res","chatters","moderators","viewers","staff","admins","global_mods","catch","e","this","getStatusPromise","bind","a","includes","GameRequest","props","deleteRequest","onDelete","gameName","getFormattedTimeDiff","timestamp","unit","timeDiff","getTooltipContents","statusClass","state","activityStatus","className","metadata","username","toggleLock","updateStatus","getActivity","setState","time","lockClassName","locked","cardStatus","chosen","OverlayTrigger","placement","overlay","Tooltip","id","onEnter","src","lock","alt","onClick","type","Component","tmi","GAME_REQUEST_COMMAND","easterEggRequests","RequestName","Response","Variants","MessageHandler","componentDidMount","client","getTwitchClient","on","onMessage","connect","getGameList","rawJackboxGameList","componentWillUnmount","disconnect","console","log","yamlGameList","text","validGames","YAML","parse","warn","identity","password","access_token","channels","options","skipUpdatingEmotesets","updateEmotesetsTimer","isModOrBroadcaster","modList","toLowerCase","checkForMiscCommands","message","startsWith","sendMessage","process","requestedGame","replace","trim","gameObj","findGame","name","partyPack","requests","Object","values","messages","map","m","sort","join","toggleAllowGameRequests","changeNextGameIdx","upcomingGames","length","numGamesAhead","setNextGame","caniplayHandler","sendConfirmationMsg","redeemingUser","isPrioritySeat","exitingUser","playerExitHandler","clearQueueHandler","openQueueHandler","closeQueueHandler","startGame","requestEntry","partyPackName","partyPackObj","entries","formalGameName","longName","checkForGameCommand","target","tags","msg","self","cleanedMsg","requestedBy","allowGameRequests","prevRequestedGameName","allowedGames","filter","g","game","pack","enabled","addGameRequest","previousGames","previous","i","upcoming","say","setAllowedGames","reloadGameList","gameList","window","OptionsGameList","getAllowedGames","__allowedGames","localStorage","getItem","JSON","assign","concat","packGames","keys","gameId","undefined","setItem","stringify","onCheckHandler","checked","prevState","onGroupCheckHandler","value","renderGameCard","onChange","htmlFor","title","renderPackCheckbox","isChecked","renderPartyPack","gamesEnabled","isIndeterminate","Accordion","Item","eventKey","key","Header","Body","ref","el","indeterminate","partyPackList","flush","OptionsMenu","toggleGameList","showGameList","Offcanvas","onHide","show","showOptionsMenu","closeButton","closeVariant","Title","as","onLogout","Collapse","in","gamesList","version","PropTypes","object","func","bool","stateMainScreen","statePlayerSelect","PlayerSelect","updateColumnSizes","columnWidth","firstColumn","current","offsetWidth","handleNewPlayerRequest","column","isQueueOpen","updateColumnForUser","interested","uObj","playing","joined","userObj","newColumn","removeUser","iObj","pObj","jObj","clearQueue","openQueue","closeQueue","playerCount","streamerSeat","toggleStreamerSeat","canStartGame","randomizePlayers","randIdx","randUsername","numPlayersToAdd","min","randIdxArray","randUsernameArray","random","push","renderPlayerCard","curColumn","star","style","maxWidth","renderStreamerSeatToggle","for","role","defaultChecked","renderPlayerCount","React","createRef","location","hash","indexOf","fakeStates","addEventListener","removeEventListener","startGameClass","disabled","dice","Sidebar","getHistoryList","history","droppableId","provided","droppableProps","innerRef","index","draggableId","draggableProps","dragHandleProps","printGame","placeholder","getNextGameName","hasNextGame","nextGameIdx","getNextGamePartyPack","handleOnDragEnd","result","destination","_items","Array","from","fill","splice","source","_reorderedItem","newNextGameIdx","findIndex","items","reorderedItem","changeGameOrder","moveNextGameFwd","moveNextGameBack","idx","buttonPlayerSelect","nextGame","requestMode","togglePlayerSelect","onDragEnd","WheelComponent","segments","segColors","winningSegment","onStart","onSpinProgress","onFinished","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","wheelHeight","wheelWidth","enableScrollTop","multilineDelimiter","currentSegment","currentSegmentLabel","isStarted","useState","isFinished","setFinished","timerHandle","timerDelay","angleCurrent","angleDelta","canvasContext","maxSpeed","PI","upTime","downTime","spinStart","frames","centerX","round","centerY","useEffect","wheelInit","setTimeout","scrollTo","initCanvas","wheelDraw","canvas","document","getElementById","navigator","appVersion","createElement","setAttribute","appendChild","spin","getContext","event","getTime","setInterval","onTimerTick","draw","duration","progress","finished","sin","clearInterval","clear","drawWheel","drawNeedle","drawSegment","lastAngle","angle","ctx","save","beginPath","moveTo","arc","lineTo","closePath","fillStyle","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","fileStyle","change","clearRect","pointerEvents","position","width","height","randomColor","MainScreen","delta","counter","stateCopy","override","slice","max","addGameToQueue","gameSelected","clearModal","getGamesList","messageHandler","onWheelSpun","gameLongName","gameRequestObj","requester","removeGame","chatActivity","status","newMessageObj","allow","toggleOptionsMenu","toggleOptionsModal","showOptionsModal","showPlayerSelect","routePlayRequest","playerSelector","routeLeaveRequest","routeOpenQueueRequest","routeCloseQueueRequest","routeClearQueueRequest","setMessageHandlerRef","ps","setPlayerSelectRef","mh","colors","count","luminosity","hue","confettiProps","force","particleCount","floorHeight","outerWidth","outerHeight","floorWidth","gamePackList","packData","gameData","Modal","centered","Footer","Button","gameSelectedModal","gameRequestArray","renderOptionsModal","renderGameChosenModal","innerContent","rightColumn","mainClassName","subheading","AuthenticatedApp","failed_login","getAuth","getUsers","logOut","_isMounted","error","removeItem","queryParams","queryString","search","requestParams","URLSearchParams","grant_type","code","client_id","client_secret","redirect_uri","method","headers","Accept","oauth","Authorization","userInfo","data","login","modInfo","modObj","user_name","token","reload","to","mainContent","withRouter","PartyPackCard","possibleMatches","GameCard","possibleMatch","JackboxGameList","loginUrl","LoginScreen","href","OptionsList","App","classNames","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.2562c4a6.chunk.js","sourcesContent":["const fetch = require('node-fetch');\n\nexport const ActivityStatus = {\n    ACTIVE: 1,\n    IDLE: 2,\n    DISCONNECTED: 3\n};\n\nconst MAX_IDLE_TIME_MINUTES = 10;\n\nexport default class ChatActivity {\n    constructor(channel) {\n        this.channel = channel;\n        this.lastMessageTimes = {};\n        this.getStatusPromise = this.getStatusPromise.bind(this);\n    }\n\n    updateLastMessageTime = (user) => {\n        this.lastMessageTimes = {\n            ...this.lastMessageTimes,\n            [user]: Date.now()\n        };\n    }\n\n    minsSinceLastChatMessage = (user) => {\n        return Math.floor((Date.now() - this.lastMessageTimes[user]) / 60000);\n    }\n\n    // returns a PROMISE, don't just assign the value again like a dweeb. :/\n    //\n    // not just active chatters - anyone with an active connnection to twitch chat.\n    // (thank the lord almighty for free open proxy sites. CORB is annoying.)\n    // note that results are fairly heavily cached, and the API may break\n    // eventually (is undocumented), but this is what twitch themselves\n    // uses to display the list of people connected to chat - best we got.\n    getChatters = () => {\n        return fetch(`https://thingproxy.freeboard.io/fetch/https://tmi.twitch.tv/group/user/${this.channel}/chatters`)\n            .then(r => r.json())\n            .then(res => {\n                if (!res || !res.chatters) return null;\n                return [\n                  ...res.chatters.moderators,\n                  ...res.chatters.viewers,\n                  ...res.chatters.staff,\n                  ...res.chatters.admins,\n                  ...res.chatters.global_mods\n                ];\n            }).catch((e) => {\n                // don't normally like swallowing errors like this,\n                // but it's a noncritical feature built off an\n                // undocumented api, sooo....\n                return null;\n            });\n    }\n\n    async getStatusPromise(user) {\n        // broadcaster always counts as active\n        if (user === this.channel) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        // sent a chat message in the last X mins?\n        if (this.lastMessageTimes[user] && this.minsSinceLastChatMessage(user) < MAX_IDLE_TIME_MINUTES) {\n            return ActivityStatus.ACTIVE;\n        }\n\n        return this.getChatters().then((chatters) =>\n            !chatters || !chatters.includes(user)\n                ? ActivityStatus.DISCONNECTED\n                : ActivityStatus.IDLE\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/lock.6857c469.svg\";","import {ActivityStatus} from '../ChatActivity';\nimport React, {Component} from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap'\nimport lock from '../images/lock.svg';\n\nimport './GameRequest.css';\n\nclass GameRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeDiff: 0,\n            activityStatus: null\n        };\n\n        this.deleteRequest = this.deleteRequest.bind(this);\n        this.getFormattedTimeDiff = this.getFormattedTimeDiff.bind(this);\n        this.getTooltipContents = this.getTooltipContents.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.updateStatus = this.updateStatus.bind(this);\n    }\n\n    deleteRequest = (e) => {\n        this.props.onDelete(this.props.gameName)\n    }\n\n    getFormattedTimeDiff = (timestamp) => {\n        let unit = \"minute\";\n        let timeDiff = Math.floor((Date.now() - timestamp) / 60000);\n        if (timeDiff === 0) {\n            return \"just now\";\n        }\n        if (timeDiff >= 60) {\n            unit = \"hour\";\n            timeDiff = Math.floor(timeDiff / 60);\n\n            if (timeDiff >= 24) {\n                unit = \"day\";\n                timeDiff = Math.floor(timeDiff / 24);\n            }\n        }\n        return `${timeDiff} ${unit}${timeDiff === 1 ? \"\" : \"s\"} ago`;\n    }\n\n    getTooltipContents = () => {\n        let statusClass = \"\";\n        switch (this.state.activityStatus) {\n            case ActivityStatus.ACTIVE:\n                statusClass = \"active\";\n                break;\n            case ActivityStatus.IDLE:\n                statusClass = \"idle\";\n                break;\n            case ActivityStatus.DISCONNECTED:\n                statusClass = \"disconnected\";\n                break;\n            default:\n                // no data back yet; don't show an activity status indicator at all\n                break;\n        }\n\n        // return (`\n        //     <div class=\"tooltip\">\n        //         <p class=\"tooltipText\">\n        //             Requested ${this.state.timeDiff} by ${this.props.metadata.username}\n        //         </p>\n        //         <div class=\"status ${statusClass}\" />\n        //     </div>`\n        // );\n        return (\n            <div className=\"tooltip\">\n                <p className=\"tooltipText\">\n                    Requested {this.state.timeDiff} by {this.props.metadata.username}\n                </p>\n                <div className={`status ${statusClass}`} />\n            </div>\n        );\n    }\n\n    toggleLock = () => {\n        this.props.toggleLock(this.props.gameName)\n    }\n\n    updateStatus = async () => {\n        // return Date.now();\n        let activityStatus;\n        try {\n            activityStatus = await this.props.getActivity(this.props.metadata.username);\n            return this.setState({\n                timeDiff: this.getFormattedTimeDiff(this.props.metadata.time),\n                activityStatus\n            });\n        } catch(err) {\n            throw err;\n        }\n    }\n\n    render() {\n        const lockClassName = this.props.metadata.locked ? 'lock locked' : 'lock unlocked';\n        const cardStatus = this.props.metadata.chosen ? 'chosen' : 'pending';\n\n        const renderTooltip = (props) => (\n            <Tooltip id=\"game-request-tooltip\" {...props}>\n                <span className=\"tooltipText\">Requested {this.state.timeDiff} by {this.props.metadata.username}</span>\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                placement=\"left\"\n                overlay={renderTooltip}\n                onEnter={this.updateStatus}>\n                <div className=\"game-request-wrapper fade-in\">\n                \t<div id=\"baseDiv\" className={`game-request ${cardStatus}`}>\n                \t\t<div className=\"game-request-body\">\n                \t\t    {this.props.gameName}\n                \t\t\t<div className=\"options\">\n                \t\t\t\t<img src={lock} alt=\"lock\" className={lockClassName} onClick={this.toggleLock} />\n                \t\t\t\t<button type='button' className=\"deleteButton\" onClick={this.deleteRequest}>X</button>\n                \t\t\t</div>\n                \t\t</div>\n                \t</div>\n                </div>\n            </OverlayTrigger>\n        );\n    }\n}\nexport default GameRequest;\n","export default __webpack_public_path__ + \"static/media/JackboxGames.0a574a49.yaml\";","import {Component} from 'react';\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport YAML from 'yaml'\nconst fetch = require('node-fetch');\nconst tmi = require('tmi.js');\n\nconst GAME_REQUEST_COMMAND = \"!request\";\n\nconst easterEggRequests = [\n    {\n        RequestName: 'Affection',\n        Response: 'there there, it\\'s going to be okay. VirtualHug',\n        Variants: [\n            'a friend',\n            'a hug',\n            'a kiss',\n            'friend',\n            'hug',\n            'kiss',\n            'affection',\n            'a shoulder to cry on',\n            'shoulder to cry on'\n        ]\n    }, {\n        RequestName: 'Goose',\n        Response: 'please don\\'t taunt the wheel. Honk.',\n        Variants: [\n            'goose',\n            'honk',\n            'meow',\n            'mrow',\n            'woof',\n            'bark',\n            'nugs',\n            'chicken nugs'\n        ]\n    }, {\n        RequestName: 'Lewmon',\n        Response: 'please don\\'t taunt the wheel. sirfar3Lewmon sirfar3Lewmon sirfar3Lewmon',\n        Variants: [\n            'lewmon',\n            'sirfar3lewmon'\n        ]\n    }, {\n        RequestName: 'DoTheDew',\n        Response: 'dewinbDTD dewinbDance dewinbGIR dewinbDance dewinbGIR dewinbDance dewinbDTD',\n        Variants: [\n            'dothedew',\n            'dewinblack'\n        ]\n    }\n];\n\nexport default class MessageHandler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            client: null,\n            allowedGames: {},\n            validGames: []\n        };\n        this.getTwitchClient = this.getTwitchClient.bind(this);\n        this.isModOrBroadcaster = this.isModOrBroadcaster.bind(this);\n        this.checkForMiscCommands = this.checkForMiscCommands.bind(this);\n        this.findGame = this.findGame.bind(this);\n        this.checkForGameCommand = this.checkForGameCommand.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        window.getGameList = this.getGameList.bind(this);\n    }\n\n    componentDidMount = (props) => {\n        const client = this.getTwitchClient(this.props);\n        this.client = client;\n\n        client.on('message', this.onMessage);\n        client.connect();\n\n        return this.getGameList(rawJackboxGameList, client);\n    }\n\n    componentWillUnmount = (props) => {\n        try {\n            if (this.client) {\n                this.client.disconnect();\n            }\n        } catch(e) {\n            console.log('Error', e);\n        }\n    }\n\n\n    getGameList = async (yamlGameList, client) => {\n        console.log({yamlGameList});\n        return await fetch(yamlGameList)\n            .then(r => r.text())\n            .then(text => {\n                return this.setState({\n                    client,\n                    validGames: YAML.parse(text)\n                });\n            }).catch(e => {\n                console.warn(e);\n            });\n    }\n\n    getTwitchClient = (props) => {\n        return new tmi.client({\n            identity: {\n                username: props.channel,\n                password: props.access_token\n            },\n            channels: [\n                props.channel\n            ],\n            options: {\n                skipUpdatingEmotesets: true,\n                updateEmotesetsTimer: 0\n            }\n        });\n    }\n\n    isModOrBroadcaster = (username) => {\n        return (this.props.channel === username || this.props.modList.includes(username.toLowerCase()));\n    }\n\n    // returns true iff a known command was found & responded to\n    checkForMiscCommands = (message, username) => {\n        //========= general =========\n        if (message.startsWith(\"!gamelist\") || message.startsWith(\"!gameslist\")) {\n            this.sendMessage(`/me @${username}, click here for a list of valid Jackbox games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n            return true;\n        }\n\n        if (message === \"!wheelcommands\") {\n            this.sendMessage(`/me @${username}, click here to read about all supported commands: https://github.com/asukii314/twitch-request-wheel/blob/master/src/Commands.yaml`);\n            return true;\n        }\n\n        if (message.startsWith(\"!whichpack\")) {\n            const requestedGame = message.replace(\"!whichpack\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to look up the party pack for: e.g. !whichpack TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                this.sendMessage(`/me @${username}, ${gameObj.name} is a ${gameObj.partyPack} game.`);\n            }\n            return true;\n        }\n\n        //========= list requested games =========\n        if (message === \"!onthewheel\" || message === \"!gamesqueued\" || message === \"!listrequests\") {\n            let pipe = ' ⋆ '; // TODO: allow delimiter to be user configurable\n            let requests = Object.values(this.props.messages).map(m => m.name).sort();\n            try {\n                this.sendMessage(`/me @${username}, Requested: ${requests.join(pipe)}.`);\n            } catch(e) {\n                this.sendMessage(`/me @${username}, Sorry, there are waaaaaaaaay too many games to list and something went wrong. :p`);\n                console.log(e);\n            }\n\n            // TODO: handle if over character count\n            // TODO: determine if this is actually necessary\n            /* this.sendMessage(`/me @${username}, NOTE: There are a loooooot of games to list, but hopefully this next message won't break:`);\n            this.sendMessage(`/me @${username}, Requested: ${requests}.`);\n            requestsArr.reduce((list, str) => {\n                const last = list[list.length-1];\n                if (last && last.total + str.length <= 480) {\n                    last.total += str.length;\n                    last.words.push(str);\n                } else {\n                    list.push({\n                        total: str.length,\n                        words: [str]\n                    });\n                }\n                return list;\n            }, [])\n            .map(({ words }) => words.join(pipe));*/\n            return true;\n        }\n\n        //========= enable / disable requests =========\n        if ( message.startsWith(\"!enablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(true);\n            this.sendMessage(`/me @${username}, requests have now been enabled! Type \"!request\" followed by the game you want to play.`);\n            return true;\n        }\n        if ( message.startsWith(\"!disablerequests\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            this.props?.toggleAllowGameRequests(false);\n            this.sendMessage(`/me @${username}, requests have now been disabled.`);\n            return true;\n        }\n\n        //========= advance next game =========\n        if (message === \"!advancenextgame\" || message === \"!nextgamefwd\" || message === \"!nextgameforward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(1)) {\n                if (this.props.upcomingGames.length > 0) {\n                    // console.log(this.props.upcomingGames)\n                    this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n                } else {\n                    this.sendMessage(`/me @${username}, the next game has been marked as \"TBD\".`);\n                }\n            } else {\n                this.sendMessage(`/me @${username}, there are no more games in the queue to advance to!`);\n            }\n            return true;\n        }\n\n        //========= advance prev game =========\n        if (message === \"!nextgameback\" || message === \"!nextgamebackward\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.changeNextGameIdx(-1)) {\n                this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\n            } else {\n                this.sendMessage(`/me @${username}, there are no previous games in the queue to go back to!`);\n            }\n            return true;\n        }\n\n        //========= set next game =========\n        if (message.startsWith(\"!setnextgame\") || message.startsWith(\"!redeemgame\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use the ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} command.`);\n                return true;\n            }\n\n            const requestedGame = message.replace(\"!setnextgame\", \"\").replace(\"!redeemgame\", \"\").trim();\n            if (requestedGame === \"\") {\n                this.sendMessage(`/me @${username}, please specify the game you would like to insert in the queue: for example, ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} TMP 2`);\n                return true;\n            }\n\n            const gameObj = this.findGame(requestedGame, username);\n            if (gameObj) {\n                const numGamesAhead = this.props.setNextGame(gameObj);\n                if (numGamesAhead === 0) {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted as the next game in the queue.`);\n                } else {\n                    this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted in the queue following ${numGamesAhead} other manual game request${numGamesAhead > 1 ? 's' : ''}.`);\n                }\n\n            }\n            return true;\n        }\n\n        //========= player queue management =========\n        if (message === \"!caniplay\" || message === \"!new\" || (message === \"!dew\" && this.props?.channel?.toLowerCase() === 'dewinblack')) {\n            this.props?.caniplayHandler(username, {\n                sendConfirmationMsg: message === \"!caniplay\"\n            });\n            return true;\n        }\n\n        if (message.startsWith(\"!priorityseat\") || message.startsWith(\"!redeemseat\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const redeemingUser = message.replace(\"!priorityseat\", \"\").replace(\"!redeemseat\", \"\").replace(\"@\", \"\").trim();\n            if (redeemingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who has redeemed a priority seat in the next game: for example, ${message.startsWith(\"!p\") ? \"!priorityseat\" : \"!redeemseat\"} @asukii314`);\n                return true;\n            }\n            this.props?.caniplayHandler(redeemingUser, {\n                sendConfirmationMsg: true,\n                isPrioritySeat: true\n            });\n            return true;\n        }\n\n        if ( message.startsWith(\"!removeuser\")) {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            const exitingUser = message.replace(\"!removeuser\", \"\").replace(\"@\", \"\").trim();\n            if (exitingUser === \"\") {\n                this.sendMessage(`/me @${username}, please specify the user who will be removed in the next game: for example, !removeuser @dewinblack`);\n                return true;\n            }\n            this.props?.playerExitHandler(exitingUser);\n            return true;\n        }\n\n        if (message === \"!leave\" || message === \"!murd\") {\n            this.props?.playerExitHandler(username);\n            return true;\n        }\n\n        if (message === \"!clear\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!open\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!clearopen\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.clearQueueHandler();\n                this.props?.openQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!close\") {\n            if (this.isModOrBroadcaster(username)) {\n                this.props?.closeQueueHandler();\n            }\n            return true;\n        }\n\n        if (message === \"!startgame\") {\n            if (!this.isModOrBroadcaster(username)) {\n                this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\n                return true;\n            }\n            if (this.props.startGame()) {\n                this.sendMessage(`/me @${username}, the game has been started.`);\n            } else {\n                this.sendMessage(`/me @${username}, the game was already started.`);\n            }\n            return true;\n        }\n\n        if (message.startsWith(\"!redeem\")) {\n            this.sendMessage(`/me @${username}, this command is no longer supported: please specify either !redeemgame or !redeemseat.`);\n            return true;\n        }\n        return;\n    }\n\n    findGame = (requestedGame, username) => {\n        // easter egg responses\n        for (let requestEntry of easterEggRequests) {\n            if (requestEntry?.Variants?.includes(requestedGame)) {\n                this.sendMessage(`/me @${username} ${requestEntry.Response}`);\n                return null;\n            }\n        }\n        // check against games\n        for (let partyPackName in this.state.validGames) {\n            const partyPackObj = this.state.validGames[partyPackName]\n            for (const [formalGameName, metadata] of Object.entries(partyPackObj)) {\n                if (metadata?.Variants?.includes(requestedGame)) {\n                    return {\n                        name: formalGameName,\n                        longName: `${formalGameName} (${partyPackName})`,\n                        partyPack: partyPackName,\n                        ...metadata\n                    };\n                }\n            }\n        }\n        this.sendMessage(`/me @${username}, ${requestedGame} could not be found in the list of valid Jackbox games. Click here for a list of valid games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\n        return;\n    }\n\n    checkForGameCommand = (message, username) => {\n        if (!message.startsWith(GAME_REQUEST_COMMAND)) return;\n\n        const requestedGame = message.replace(GAME_REQUEST_COMMAND, \"\").trim();\n\n        if (requestedGame === \"\") {\n            this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\n            return null;\n        }\n\n        return this.findGame(requestedGame, username);\n    }\n\n    onMessage = (target, tags, msg, self) => {\n        if (self) return;\n        this.props.onMessage(msg, tags.username, tags)\n\n        if (msg.trim() === \"!nextgame\") {\n            if (this.props.upcomingGames && this.props.upcomingGames.length > 0) {\n                let upcoming = this.props.upcomingGames[0].name;\n                if (this.props.upcomingGames.length > 1) {\n                    upcoming += `, followed by ${this.props.upcomingGames[1].name}`\n                    for (let i = 2; i < this.props.upcomingGames.length; i++) {\n                        upcoming += `, and ${this.props.upcomingGames[i].name}`\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the next game up is ${upcoming}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, the next game hasn't been decided yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        if (msg.trim() === \"!lastgame\") {\n            if (this.props.previousGames && this.props.previousGames.length > 0) {\n                let previous = this.props.previousGames[0].name;\n                if (this.props.previousGames.length > 1) {\n                    previous += `, followed by ${this.props.previousGames[1].name}`\n                    for (let i = 2; i < this.props.previousGames.length; i++) {\n                        previous += `, and ${this.props.previousGames[i].name}`\n                    }\n                }\n                this.sendMessage(`/me @${tags.username}, the last game played was ${previous}!`)\n            } else {\n                this.sendMessage(`/me @${tags.username}, no games have been played yet - feel free to !request one :)`)\n            }\n\n            return;\n        }\n\n        const cleanedMsg = msg.trim().toLowerCase();\n        if (this.checkForMiscCommands(cleanedMsg, tags.username)) return;\n        const gameObj = this.checkForGameCommand(cleanedMsg, tags.username);\n        if (!gameObj) return;\n\n        if (this.props.messages[gameObj.longName]) {\n            let requestedBy = (this.props.messages[gameObj.longName].username === tags.username) ? 'yourself, silly' : this.props.messages[gameObj.longName].username;\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has already been requested by ${requestedBy}!`);\n            return;\n        }\n\n        if (this.props.allowGameRequests !== true) {\n            this.sendMessage(`/me @${tags.username}, game requests are currently paused at the moment, please try again later.`);\n            return;\n        }\n\n\n        let prevRequestedGameName = null;\n        for (const metadata of Object.values(this.props.messages)) {\n            if (metadata.username === tags.username) {\n                prevRequestedGameName = metadata.longName;\n                break;\n            }\n        }\n\n        if (prevRequestedGameName) {\n            if (this.props.channel === tags.username) {\n                this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue. Your previous game request(s) weren't deleted, since you have special broadcaster privilege :P`);\n            } else {\n                this.props.onDelete(prevRequestedGameName);\n                this.sendMessage(`/me @${tags.username}, your previous request of ${prevRequestedGameName} has been replaced with ${gameObj.name}.`);\n            }\n        } else if (Object.values(this.state.allowedGames).filter(g => g.game === gameObj.name && g.pack === gameObj.partyPack && g.enabled !== true).length === 1) {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} is not currently enabled and was not added to the queue.`);\n            return;\n        } else {\n            this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue.`);\n        }\n\n        this.props.addGameRequest(gameObj, tags.username);\n        return;\n    }\n\n    sendMessage = (msg) => {\n        this.state.client.say(this.props.channel, msg)\n    }\n\n    setAllowedGames = (allowedGames) => {\n        this.setState({\n            allowedGames\n        });\n    }\n    reloadGameList = () => {\n        let gameList = `${rawJackboxGameList}?${Date.now()}`;\n        return this.getGameList(gameList, this.client);\n    }\n\n    render() {\n        return null;\n    }\n}\n","import {Component} from 'react';\nimport {Accordion} from 'react-bootstrap';\nimport YAML from 'yaml'\nimport rawJackboxGameList from '../JackboxGames.yaml';\nimport './OptionsGameList.css';\nconst fetch = require('node-fetch');\n\nclass OptionsGameList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowedGames: [],\n            validGames: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawJackboxGameList)\n            .then(r => r.text())\n            .then(text => {\n                let validGames = YAML.parse(text);\n                // this.setState({validGames});\n                this.setAllowedGames(validGames);\n            });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.allowedGames || this.state.validGames.length === 0 || this.state.allowedGames.length === 0) return;\n        localStorage.setItem('__allowedGames', JSON.stringify(this.state.allowedGames));\n    }\n\n    getAllowedGames = function(validGames) {\n        let __allowedGames = localStorage.getItem('__allowedGames');\n        let allowedGames = (__allowedGames) ? JSON.parse(__allowedGames) : {};\n\n\n        // let output = {};\n        //\n        // // return list of valid games merged with existing allowedGames\n        // Object.entries(validGames).forEach(([pack, packGames]) => {\n        //     // get valid games within each pack\n        //     Object.keys(packGames).forEach(game => {\n        //         let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n        //         output[gameId] = (allowedGames[gameId])\n        //             ? allowedGames[gameId]\n        //             : {\n        //                 id: gameId,\n        //                 game,\n        //                 pack,\n        //                 enabled: true\n        //             };\n        //         output[gameId] = allowedGames[gameId];\n        //     });\n        // });\n        // return output;\n\n        // return list of valid games merged with existing allowedGames\n        return Object.assign({},\n            ...[].concat(\n                ...Object.entries(validGames).map(([pack, packGames]) => {\n                    // get valid games within each pack\n                    return Object.assign({},\n                        ...Object.keys(packGames).map(game => {\n                            let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n                            if (gameId in allowedGames && allowedGames[gameId].id !== undefined) {\n                                return {\n                                    [gameId]: allowedGames[gameId]\n                                };\n                            }\n                            // add entry with default value\n                            // console.log(`Adding ${gameId}`);\n                            return {\n                                [gameId]: {\n                                    id: gameId,\n                                    game,\n                                    pack,\n                                    enabled: true\n                                }\n                            }\n                        })\n                    );\n                })\n            )\n        )\n    }\n\n    setAllowedGames = function(validGames) {\n        let allowedGames = this.getAllowedGames(validGames);\n        this.setState({\n            allowedGames,\n            validGames\n        });\n        localStorage.setItem('__allowedGames', JSON.stringify(allowedGames));\n    }\n\n    onCheckHandler = ({target}) => {\n        let {id, checked} = target;\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                [id]: {\n                    ...prevState.allowedGames[id],\n                    enabled: checked\n                }\n            }\n        }));\n    }\n\n    onGroupCheckHandler = ({target}) => {\n        let {value, checked} = target;\n        // console.log({value, checked});\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === value);\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                ...Object.assign(\n                    ...packGames.map(g => ({\n                        [g.id]: {\n                            ...g,\n                            enabled: checked\n                        }\n                    })\n                ))\n            }\n        }));\n    }\n\n    renderGameCard = function(props) {\n        let {id, game, pack} = props;\n        let {allowedGames} = this.state;\n        let checked = allowedGames[id]?.enabled || false;\n        return (\n            <li className=\"gameName\" key={id}>\n                <input type=\"checkbox\" id={id} name={id} value={id} checked={checked} onChange={this.onCheckHandler} />\n                {' '}\n                <label htmlFor={id} title={`${pack}: ${game}`}>\n                    {game}\n                </label>\n            </li>\n        );\n    }\n\n    renderPackCheckbox = function(pack) {\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === pack);\n        let isChecked = packGames.filter(g => g.enabled === true).length === packGames.length;\n        return (\n            <input type=\"checkbox\" id={pack} name={pack} value={pack} checked={isChecked} onChange={this.onGroupCheckHandler} />\n        );\n    }\n\n    renderPartyPack = function (props) {\n        const gameList = Object.keys(props.metadata);\n\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === props.partyPackName);\n        let gamesEnabled = packGames.filter(g => g.enabled === true)\n        let isChecked = gamesEnabled.length === packGames.length;\n        let isIndeterminate = (!isChecked && gamesEnabled.length !== 0)\n        return (\n            <Accordion.Item eventKey={props.key} className=\"party-pack-card\" key={props.key}>\n                <Accordion.Header className=\"bg-darker text-white\">\n                    {props.partyPackName}\n                </Accordion.Header>\n                <Accordion.Body>\n                    <div className=\"float-end\">\n                        <small>Select All</small>\n                        {` `}\n                        <input type=\"checkbox\" id={props.partyPackName} name={props.partyPackName} value={props.partyPackName} checked={isChecked} onChange={this.onGroupCheckHandler} ref={el => el && (el.indeterminate = isIndeterminate)} />\n                    </div>\n                    <ul className=\"party-pack-game-list\">\n                        {gameList.map(\n                            (gameName, i) => this.renderGameCard({\n                                game: gameName,\n                                id: `${props.partyPackName} ${gameName}`.replace(/\\W/ig, '_'),\n                                pack: props.partyPackName\n                            })\n                        )}\n                    </ul>\n                </Accordion.Body>\n            </Accordion.Item>\n        );\n    }\n\n    render() {\n        let {validGames} = this.state;\n        const partyPackList = Object.keys(validGames);\n\n        return (\n            <Accordion id=\"options-game-list\" className=\"accordion-dark\" flush>\n                {partyPackList.map(\n                    (partyPackName, i) => this.renderPartyPack({\n                        key: i,\n                        partyPackName,\n                        metadata: this.state.validGames[partyPackName]\n                    })\n                )}\n            </Accordion>\n        );\n    }\n\n}\nexport default OptionsGameList;\n","import {Component} from 'react';\nimport {Collapse, Offcanvas} from 'react-bootstrap';\nimport OptionsGameList from './OptionsGameList';\nimport PropTypes from 'prop-types';\nimport {version} from '../../package.json';\n\nimport './OptionsMenu.css';\n\nexport default class OptionsMenu extends Component {\n    static get propTypes() {\n        return {\n            gamesList: PropTypes.object,\n            onHide: PropTypes.func,\n            onLogout: PropTypes.func,\n            showOptionsMenu: PropTypes.bool\n        };\n    }\n    static get defaultProps() {\n        return {\n            gamesList: {\n                allowedGames: null,\n                validGames: null\n            },\n            onHide: () => void 0,\n            onLogout: () => void 0,\n            showOptionsMenu: false\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showGameList: false\n        }\n        this.toggleGameList = this.toggleGameList.bind(this);\n    }\n\n    toggleGameList = () => {\n        this.setState((state) => {\n            return {\n                showGameList: !state.showGameList\n            }\n        })\n    }\n\n    // renderGameOptions() {\n    //     let {allowedGames, validGames} = this.props.gamesList;\n    //     let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n    //         return Object.keys(packData[1]).map(gameData => {\n    //             let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n    //             return {\n    //                 id: gameId,\n    //                 game: gameData,\n    //                 pack: packData[0]\n    //             }\n    //         })\n    //     }))\n    //\n    //\n    //\n    //     // let gamesList = gamePackList.map(g => g.game);\n    //     console.log('gamePackList:', gamePackList, allowedGames);\n    //\n    //     return (\n    //         <Modal\n    //             show={this.state.showOptionsModal}\n    //             onHide={()=>this.toggleOptionsModal(false)}\n    //             size=\"lg\"\n    //             aria-labelledby=\"contained-modal-title-vcenter\"\n    //             centered>\n    //             <Modal.Header closeButton>\n    //                 <Modal.Title id=\"contained-modal-title-vcenter\">\n    //                     Options\n    //                 </Modal.Title>\n    //             </Modal.Header>\n    //             <Modal.Body>\n    //                 <div className=\"options-list\">\n    //                     <ul>\n    //                         {gamePackList.map(({id, game, pack}, idx) => {\n    //                             // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n    //                             return (\n    //                                 <li key={id}>\n    //                                     <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n    //                                 </li>\n    //                             )}\n    //                         )}\n    //                     </ul>\n    //                 </div>\n    //             </Modal.Body>\n    //             <Modal.Footer>\n    //                 <Button data-bs-dismiss=\"modal\">Close</Button>\n    //             </Modal.Footer>\n    //         </Modal>\n    //     );\n    // }\n\n    render() {\n\n        return (\n            <Offcanvas\n                id=\"options-menu\"\n                onHide={this.props.onHide}\n                placement=\"end\"\n                show={this.props.showOptionsMenu}>\n                <Offcanvas.Header closeButton closeVariant=\"white\">\n                    <Offcanvas.Title as=\"h2\" className=\"fw-bold\">\n                        Options\n                    </Offcanvas.Title>\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                    <ul className=\"options-menu-items list-unstyled pb-3 px-4\">\n                        <li className=\"mb-1 fs-4 d-grid text-start\">\n                            <button className=\"btn logout\" onClick={this.props.onLogout}>\n                                Logout\n                            </button>\n                        </li>\n                        <hr />\n                        <li className=\"mb-1 fs-4 d-grid text-start\">\n                            <button className=\"btn reload-game-list\" onClick={this.props.reloadGameList}>\n                                Refresh Game List\n                            </button>\n                        </li>\n                        <li className=\"mb-1 fs-4 d-grid text-start d-none\">\n                            <button className=\"btn game-list\" onClick={this.toggleGameList}>\n                                Game List\n                            </button>\n                        </li>\n                        <Collapse in={this.state.showGameList}>\n                            <div>\n                                <OptionsGameList\n                                    allowedGames={this.props.gamesList?.allowedGames}\n                                    validGames={this.props.gamesList?.validGames} />\n                            </div>\n                        </Collapse>\n                    </ul>\n\n\n                    <div className=\"position-absolute bottom-0 start-50 translate-middle-x pb-3\">\n                        <small>{`version ${version}`}</small>\n                    </div>\n                </Offcanvas.Body>\n            </Offcanvas>\n        );\n    }\n}\n","const stateMainScreen = {\n    \"gameSelected\": null,\n    \"messages\": {\n        \"Survive The Internet (Party Pack 4)\": {\n            \"name\": \"Survive The Internet\",\n            \"longName\": \"Survive The Internet (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"survive\",\n                \"survive the internet\",\n                \"sti\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628112883959,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash (Any Version)\": {\n            \"name\": \"Quiplash\",\n            \"longName\": \"Quiplash (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"quiplash\",\n                \"quip\",\n                \"ql\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628113055677,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"You Don't Know Jack (Party Pack 5)\": {\n            \"name\": \"You Don't Know Jack\",\n            \"longName\": \"You Don't Know Jack (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ydkj 2\",\n                \"ydkj fs\",\n                \"ydkjfs\",\n                \"you dont know jack 2\",\n                \"you don't know jack 2\",\n                \"you don't know jack full stream\",\n                \"you don't know jack full steam\",\n                \"you don't know jack: full stream\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114634007,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Mad Verse City (Party Pack 5)\": {\n            \"name\": \"Mad Verse City\",\n            \"longName\": \"Mad Verse City (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"mvc\",\n                \"madverse\",\n                \"mad verse\",\n                \"madversecity\",\n                \"mad verse city\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114645263,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Monster Seeking Monster (Party Pack 4)\": {\n            \"name\": \"Monster Seeking Monster\",\n            \"longName\": \"Monster Seeking Monster (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 7,\n            \"Variants\": [\n                \"msm\",\n                \"monster seeking monster\",\n                \"monster seeking monsters\",\n                \"monsters seeking monsters\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114646991,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Blather 'Round (Party Pack 7)\": {\n            \"name\": \"Blather 'Round\",\n            \"longName\": \"Blather 'Round (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 2,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"blather\",\n                \"blather round\",\n                \"blather 'round\",\n                \"blatherround\",\n                \"blatheround\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114733155,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Talking Points (Party Pack 7)\": {\n            \"name\": \"Talking Points\",\n            \"longName\": \"Talking Points (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"talking points\",\n                \"talkingpoints\",\n                \"talk points\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114749438,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic Phone (Standalone)\": {\n            \"name\": \"Gartic Phone\",\n            \"longName\": \"Gartic Phone (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min players\": 4,\n            \"Max players\": 30,\n            \"Variants\": [\n                \"gartic phone\",\n                \"garticphone\",\n                \"garlic phone\",\n                \"garlicphone\",\n                \"gartic\",\n                \"garlic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114761558,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Drawful (Any Version)\": {\n            \"name\": \"Drawful\",\n            \"longName\": \"Drawful (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"drawful\",\n                \"drawfull\",\n                \"draw full\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114769626,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Words on Stream (Standalone)\": {\n            \"name\": \"Words on Stream\",\n            \"longName\": \"Words on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"words on stream\",\n                \"word on stream\",\n                \"words stream\",\n                \"word stream\",\n                \"words\",\n                \"wos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114772430,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Gartic on Stream (Standalone)\": {\n            \"name\": \"Gartic on Stream\",\n            \"longName\": \"Gartic on Stream (Standalone)\",\n            \"partyPack\": \"Standalone\",\n            \"Min Players\": 4,\n            \"Max Players\": 50,\n            \"Variants\": [\n                \"gartic on stream\",\n                \"garlic on stream\",\n                \"garlic stream\",\n                \"gartic stream\",\n                \"gos\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114776310,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"The Devils and the Details (Party Pack 7)\": {\n            \"name\": \"The Devils and the Details\",\n            \"longName\": \"The Devils and the Details (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"devils\",\n                \"devils in details\",\n                \"devils and details\",\n                \"devils & details\",\n                \"devil's in details\",\n                \"devil's and details\",\n                \"devil's & details\",\n                \"devils in the details\",\n                \"devils and the details\",\n                \"devils & the details\",\n                \"devil's in the details\",\n                \"devil's and the details\",\n                \"devil's & the details\",\n                \"the devils in the details\",\n                \"the devils and the details\",\n                \"the devils & the details\",\n                \"the devil's in the details\",\n                \"the devil's and the details\",\n                \"the devil's & the details\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114937776,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Fibbage: Enough About You (Party Pack 4)\": {\n            \"name\": \"Fibbage: Enough About You\",\n            \"longName\": \"Fibbage: Enough About You (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"eay\",\n                \"enough about you\",\n                \"feay\",\n                \"fibbage eay\",\n                \"fibbage: eay\",\n                \"fibbage enough about you\",\n                \"fibbage: enough about you\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114942915,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Champ'd Up (Party Pack 7)\": {\n            \"name\": \"Champ'd Up\",\n            \"longName\": \"Champ'd Up (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"champd\",\n                \"champed\",\n                \"champd up\",\n                \"champ'd\",\n                \"champ'd up\",\n                \"champed up\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114981572,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Civic Doodle (Party Pack 4)\": {\n            \"name\": \"Civic Doodle\",\n            \"longName\": \"Civic Doodle (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"civic doodle\",\n                \"civicdoodle\",\n                \"civic\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628115017116,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 2 (Party Pack 6)\": {\n            \"name\": \"Trivia Murder Party 2\",\n            \"longName\": \"Trivia Murder Party 2 (Party Pack 6)\",\n            \"partyPack\": \"Party Pack 6\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp2\",\n                \"tmp 2\",\n                \"trivia murder party 2\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628118545790,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Quiplash 3 (Party Pack 7)\": {\n            \"name\": \"Quiplash 3\",\n            \"longName\": \"Quiplash 3 (Party Pack 7)\",\n            \"partyPack\": \"Party Pack 7\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"ql3\",\n                \"ql 3\",\n                \"quip 3\",\n                \"quip3\",\n                \"quiplash 3\",\n                \"quiplash3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628121075780,\n            \"locked\": false,\n            \"chosen\": false\n        },\n        \"Trivia Murder Party 1 (Party Pack 3)\": {\n            \"name\": \"Trivia Murder Party 1\",\n            \"longName\": \"Trivia Murder Party 1 (Party Pack 3)\",\n            \"partyPack\": \"Party Pack 3\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp1\",\n                \"tmp 1\",\n                \"trivia murder party 1\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628122719930,\n            \"locked\": false,\n            \"chosen\": false\n        }\n    },\n    \"colors\": [\n        \"#75a5e5\",\n        \"#847cef\",\n        \"#74aee0\",\n        \"#86efed\",\n        \"#63bbd8\",\n        \"#c9d8ff\",\n        \"#97ecef\",\n        \"#bcefff\",\n        \"#9caff4\",\n        \"#b9a4f2\",\n        \"#9fbbfc\",\n        \"#affffc\",\n        \"#a1bef4\",\n        \"#7ee7fc\",\n        \"#97c1ef\",\n        \"#a4a4fc\",\n        \"#a4a5f4\",\n        \"#b7f1ff\",\n        \"#79bdfc\",\n        \"#6885dd\",\n        \"#98e1f2\",\n        \"#aac1ff\",\n        \"#a583fc\",\n        \"#8991e5\",\n        \"#6edddd\",\n        \"#a7b7ef\",\n        \"#74e2e8\",\n        \"#9c9af9\",\n        \"#9dd5f2\",\n        \"#6a73ed\",\n        \"#b19df9\",\n        \"#88eaea\",\n        \"#6b91ef\",\n        \"#9de1f9\",\n        \"#7691fc\",\n        \"#d0c4fc\",\n        \"#c9d7ff\",\n        \"#84a7ed\",\n        \"#809bfc\",\n        \"#63d0d8\",\n        \"#b8cbfc\",\n        \"#a3a0ff\",\n        \"#b4f4f7\",\n        \"#9c9efc\",\n        \"#8ae8f7\",\n        \"#7985ea\",\n        \"#7876e8\",\n        \"#cfc2fc\",\n        \"#bfcfff\",\n        \"#92a9f4\",\n        \"#d0c2fc\",\n        \"#adc9f7\",\n        \"#767ce0\",\n        \"#95a1f9\",\n        \"#a286f4\",\n        \"#8085ed\",\n        \"#c4c9fc\",\n        \"#7c8ff9\",\n        \"#7079f9\",\n        \"#aaa5ff\",\n        \"#8db7e8\",\n        \"#9e94e8\",\n        \"#a5ffff\",\n        \"#76ade8\",\n        \"#a9f5fc\",\n        \"#a0a5ff\",\n        \"#9cbffc\",\n        \"#8fa2e8\",\n        \"#8eeeff\",\n        \"#88ccf7\",\n        \"#b0f2f4\",\n        \"#8e7fef\",\n        \"#aef9f8\",\n        \"#8beef9\",\n        \"#7a8ef4\",\n        \"#c7c4fc\",\n        \"#7b87f2\",\n        \"#7b77ea\",\n        \"#859be5\",\n        \"#7191e8\",\n        \"#aadaef\",\n        \"#b1aaf7\",\n        \"#80bff7\",\n        \"#95e0f4\",\n        \"#a3e5ed\",\n        \"#91a1f2\",\n        \"#c0c4f9\",\n        \"#7a90f4\",\n        \"#85def2\",\n        \"#87f2ee\",\n        \"#cac6ff\",\n        \"#76c3f7\",\n        \"#c2dcfc\",\n        \"#a2a2f9\",\n        \"#ccd7ff\",\n        \"#978fef\",\n        \"#8d77e5\",\n        \"#bad0fc\",\n        \"#ccf7ff\"\n    ],\n    \"counter\": 26,\n    \"history\": [\n        {\n            \"name\": \"Zeeple Dome\",\n            \"longName\": \"Zeeple Dome (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 1,\n            \"Max players\": 6,\n            \"Variants\": [\n                \"zeeple\",\n                \"zeeple dome\",\n                \"zeepledome\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114757634,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Split the Room\",\n            \"longName\": \"Split the Room (Party Pack 5)\",\n            \"partyPack\": \"Party Pack 5\",\n            \"Min players\": 3,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"split the room\",\n                \"splittheroom\",\n                \"split room\",\n                \"room split\",\n                \"split\",\n                \"str\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114989864,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Fibbage 3\",\n            \"longName\": \"Fibbage 3 (Party Pack 4)\",\n            \"partyPack\": \"Party Pack 4\",\n            \"Min players\": 2,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"fibbage 3\",\n                \"fibbage3\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628114666823,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        },\n        {\n            \"name\": \"Trivia Murder Party\",\n            \"longName\": \"Trivia Murder Party (Any Version)\",\n            \"partyPack\": \"Any Version\",\n            \"Min players\": 1,\n            \"Max players\": 8,\n            \"Variants\": [\n                \"tmp\",\n                \"trivia murder party\"\n            ],\n            \"username\": \"dcpesses\",\n            \"time\": 1628106145996,\n            \"locked\": false,\n            \"chosen\": false,\n            \"override\": false\n        }\n    ],\n    \"nextGameIdx\": 0,\n    \"showPlayerSelect\": false\n};\n\nconst statePlayerSelect = {\n    \"interested\": [\n        {\n            \"username\": \"player6\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player3\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player9\"\n        },\n        {\n            \"username\": \"dcpesses\"\n        }\n    ],\n    \"playing\": [\n        {\n            \"username\": \"player1\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player7\",\n            \"isPrioritySeat\": false\n        },\n        {\n            \"username\": \"player8\"\n        },\n        {\n            \"username\": \"player5\",\n            \"isPrioritySeat\": true\n        },\n        {\n            \"username\": \"player2\",\n            \"isPrioritySeat\": true\n        }\n    ],\n    \"joined\": [],\n    \"streamerSeat\": true,\n    \"isQueueOpen\": true,\n    \"columnWidth\": 634\n}\n\nexport {\n    stateMainScreen as MainScreen,\n    statePlayerSelect as PlayerSelect\n};\n","export default __webpack_public_path__ + \"static/media/dice.021a7158.svg\";","export default __webpack_public_path__ + \"static/media/star.de82f684.svg\";","import React, { Component } from 'react';\r\nimport * as fakeStates from '../example-states';\r\n\r\nimport dice from '../images/dice.svg';\r\nimport star from '../images/star.svg';\r\n\r\nimport './PlayerSelect.css';\r\n\r\nexport default class PlayerSelect extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.firstColumn = React.createRef();\r\n        this.state = {\r\n            interested: [],\r\n            playing: [],\r\n            joined: [],\r\n            streamerSeat: false,\r\n            isQueueOpen: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\r\n            this.setState(fakeStates.PlayerSelect);\r\n        }\r\n        this.updateColumnSizes();\r\n        window.addEventListener(\"resize\", this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateColumnSizes);\r\n        return;\r\n    }\r\n\r\n    updateColumnSizes = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                columnWidth: this.firstColumn.current.offsetWidth\r\n            };\r\n        })\r\n    }\r\n\r\n    handleNewPlayerRequest = (username, {isPrioritySeat=false}) => {\r\n        if (isPrioritySeat) {\r\n            // even if the queue is closed, still add them to the interested column for consideration\r\n            const column = (this.state.isQueueOpen ? 'playing' : 'interested');\r\n\r\n            return this.updateColumnForUser({username, isPrioritySeat}, column)\r\n                ? 'you have been successfully added to the lobby.'\r\n                : 'there was an error adding you to the lobby.';\r\n        }\r\n\r\n        if (this.state?.interested?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.playing?.map((uObj) => uObj.username)?.includes(username)\r\n        || this.state?.joined?.map((uObj) => uObj.username)?.includes(username)) {\r\n            return 'you are already in the lobby.';\r\n        }\r\n\r\n        if (!this.state.isQueueOpen) {\r\n            return 'the queue is currently closed; users have already been selected for this game.';\r\n        }\r\n        return this.updateColumnForUser({username}, 'interested')\r\n            ? 'you have successfully joined the lobby.'\r\n            : 'there was an error adding you to the lobby.';\r\n    }\r\n\r\n    updateColumnForUser = (userObj, newColumn) => {\r\n        if (!this.state || !this.state[newColumn]) return false;\r\n\r\n        this.removeUser(userObj.username);\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                [newColumn]: [\r\n                    ...state[newColumn],\r\n                    userObj\r\n                ]\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n\r\n    removeUser = (username) => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: state.interested.filter((iObj) => iObj.username !== username),\r\n                playing: state.playing.filter((pObj) => pObj.username !== username),\r\n                joined:  state.joined.filter((jObj) => jObj.username !== username)\r\n            }\r\n        });\r\n    }\r\n\r\n    clearQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            }\r\n        })\r\n    }\r\n\r\n    openQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: true\r\n            }\r\n        })\r\n    }\r\n\r\n    closeQueue = () => {\r\n        return this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                isQueueOpen: false\r\n            }\r\n        })\r\n    }\r\n\r\n    playerCount = () => {\r\n        return this.state.playing.length + this.state.joined.length +\r\n                        (this.state.streamerSeat ? 1 : 0);\r\n    }\r\n\r\n    toggleStreamerSeat = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                ...state,\r\n                streamerSeat: !state.streamerSeat\r\n            }\r\n        });\r\n    }\r\n\r\n    canStartGame = () => {\r\n        return this.props.game?.['Max players'] >= this.playerCount() &&\r\n                     this.props.game?.['Min players'] <= this.playerCount();\r\n    }\r\n\r\n    startGame = () => {\r\n        // clear for now; eventually, save elsewhere to report on user play history for that session\r\n        this.setState ((state) => {\r\n            return {\r\n                ...state,\r\n                interested: [],\r\n                playing: [],\r\n                joined: []\r\n            };\r\n        })\r\n        this.props.startGame();\r\n    }\r\n\r\n    randomizePlayers = () => {\r\n        const numPlayersToAdd = Math.min(\r\n            this.props.game['Max players'] - this.playerCount(),\r\n            this.state.interested.length\r\n        );\r\n\r\n        let randIdx, randUsername;\r\n        let randIdxArray = [], randUsernameArray = [];\r\n        // let interested = this.state.interested;\r\n        let playing = this.state.playing;\r\n\r\n        while(randIdxArray.length < numPlayersToAdd) {\r\n            randIdx = Math.floor(Math.random() * this.state.interested.length);\r\n            if (!randIdxArray.includes(randIdx)) {\r\n                randIdxArray.push(randIdx);\r\n                randUsername = this.state.interested[randIdx].username;\r\n                randUsernameArray.push(randUsername);\r\n                playing = [\r\n                    ...playing,\r\n                    this.state.interested[randIdx]\r\n                ];\r\n            }\r\n        }\r\n        this.setState((state) => {\r\n            return {\r\n                interested: state.interested.filter((uObj) => !randUsernameArray.includes(uObj.username)),\r\n                playing\r\n            }\r\n        })\r\n    }\r\n\r\n    renderPlayerCard = (userObj, id, curColumn) => {\r\n        return (\r\n            <div key={id} className=\"player-card lh-sm fs-6\">\r\n                <div className=\"player-card-username\">\r\n                    {userObj.isPrioritySeat === true && <img src={star} alt=\"Priority seat redemption\"/>}\r\n                    <p className='player-name' style={{\r\n                        maxWidth: this.state.columnWidth - 25\r\n                    }}>{userObj.username}</p>\r\n                </div>\r\n                <div className=\"change-col-buttons-container\">\r\n                    {curColumn !== 'interested' && <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'interested')}>Interested</button>}\r\n                    {curColumn !== 'playing' && <button className=\"change-col\" onClick={this.updateColumnForUser.bind(this, userObj, 'playing')}>Playing</button>}\r\n                    {/*curColumn !== 'joined' && <button className='change-col' onClick={this.updateColumnForUser.bind(this, userObj, 'joined')}>Joined</button>*/}\r\n                    <button className=\"change-col\" onClick={this.removeUser.bind(this, userObj.username)}>X</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderStreamerSeatToggle = () => {\r\n        return (\r\n            <div className=\"toggle-streamer-seat\">\r\n                <label className=\"toggle-label form-check-label\" for=\"reserve-seat-for-streamer\">\r\n                    Reserve seat for streamer?\r\n                </label>\r\n                <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"reserve-seat-for-streamer\" defaultChecked={this.state.streamerSeat} onChange={this.toggleStreamerSeat} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderPlayerCount = () => {\r\n        let className = 'player-count';\r\n        if (this.props.game?.['Max players'] < this.playerCount()) {\r\n            className += ' overlimit';\r\n        }\r\n        return (\r\n            <div className={className}>\r\n                {this.playerCount()} of {this.props.game?.['Max players']} seats claimed\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let startGameClass = 'btn btn-sm start-game';\r\n        if (this.playerCount() < this.props.game?.['Min players']){\r\n            startGameClass += ' disabled';\r\n        }\r\n\r\n        return (\r\n            <div className=\"card player-select-container\">\r\n                <div className=\"card-header d-flex justify-content-between\">\r\n                    {this.renderStreamerSeatToggle()}\r\n                    <div className=\"fs-2 lh-sm game-name\">\r\n                        <b>{this.props.game?.name ?? \"TBD\"}</b>\r\n                        {this.renderPlayerCount()}\r\n                    </div>\r\n                    <button className={startGameClass} onClick={this.startGame} disabled={!this.canStartGame()}>Start Game</button>\r\n                </div>\r\n                <div className=\"card-body player-card-container\">\r\n                    <div ref={this.firstColumn} className='player-card-column interested'>\r\n                        <p className=\"player-card-column-header\">Interested</p>\r\n                        {this.state.interested.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                        {this.state.interested.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n                    </div>\r\n\r\n                    <div className='player-card-column playing'>\r\n                        <p className=\"player-card-column-header\">Playing\r\n                        <button className=\"dice\" onClick={this.randomizePlayers}>\r\n                            <img src={dice} alt=\"dice icon\"/>\r\n                        </button>\r\n                        </p>\r\n                        {this.state.playing.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                        {this.state.playing.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n                    </div>\r\n\r\n                    {/*<div className='player-card-column joined'>\r\n                        <p className=\"player-card-column-header\">Joined</p>\r\n                        {this.state.joined.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                        {this.state.joined.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n                    </div>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport './Sidebar.css';\n\nexport default class Sidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            index: 0\n        }\n\n        this.getHistoryList = this.getHistoryList.bind(this);\n        this.getNextGameName = this.getNextGameName.bind(this);\n        this.getNextGamePartyPack = this.getNextGamePartyPack.bind(this);\n        this.hasNextGame = this.hasNextGame.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.printGame = this.printGame.bind(this);\n    }\n\n    getHistoryList = (history) => {\n        if (history.length === 0) {\n            return (\n                <span className=\"history-placeholder\" key='placeholder'>No games yet</span>\n            );\n        }\n        return (\n            <Droppable droppableId=\"historyList\">\n                {(provided) => (\n                    <span className=\"historyList\" {...provided.droppableProps} ref={provided.innerRef}>\n                        {history.map(({name, time}, index) => {\n                            return (\n                                <Draggable key={`${time}`} draggableId={`${time}`} index={index}>\n                                    {(provided) => (\n                                        <li ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                                            {this.printGame(index)}\n                                        </li>\n                                    )}\n                                </Draggable>\n                            );\n                        })}\n                        {provided.placeholder}\n                    </span>\n                )}\n            </Droppable>\n        );\n    }\n\n    getNextGameName = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].name\n            : 'not yet decided';\n    }\n\n    getNextGamePartyPack = () => {\n        return this.hasNextGame()\n            ? this.props.history[this.props.nextGameIdx].partyPack\n            : null;\n    }\n\n    handleOnDragEnd = (result) => {\n        if (!result.destination) return;\n\n        const _items = Array.from(this.props.history).fill();\n        _items[this.props.nextGameIdx] = true;\n        const [_reorderedItem] = _items.splice(result.source.index, 1);\n        _items.splice(result.destination.index, 0, _reorderedItem);\n\n        const newNextGameIdx = _items.findIndex(i => i);\n\n        const items = Array.from(this.props.history);\n        const [reorderedItem] = items.splice(result.source.index, 1);\n        items.splice(result.destination.index, 0, reorderedItem);\n\n        this.props.changeGameOrder(items, newNextGameIdx);\n    }\n\n    hasNextGame = () => {\n        return this.props.history.length > this.props.nextGameIdx;\n    }\n\n    moveNextGameFwd = () => {\n        return this.props.changeNextGameIdx(1);\n    }\n\n    moveNextGameBack = () => {\n        return this.props.changeNextGameIdx(-1);\n    }\n\n    printGame = (idx) => {\n        if (idx === this.props.nextGameIdx) {\n            return (\n                <b>{this.props.history[idx].name}</b>\n            );\n        }\n        return this.props.history[idx].name;\n    }\n\n    render() {\n        let nextGame = this.hasNextGame();\n\n        let buttonPlayerSelect;\n        switch (this.props.requestMode) {\n            case 'game':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"open-seat-requests\" disabled={!nextGame} onClick={this.props.togglePlayerSelect}>\n                        OPEN SEAT REQUESTS\n                    </button>\n                )\n                break;\n            case 'seat':\n                buttonPlayerSelect = (\n                    <button id=\"sidebar-up-next\" className=\"return-to-wheel\" onClick={this.props.togglePlayerSelect}>\n                        RETURN TO WHEEL\n                    </button>\n                )\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <div id=\"sidebar\" className={this.props.requestMode}>\n                <div className=\"card sidebar-panel\">\n                    <div className=\"card-header fw-bolder\">\n                        Up Next\n                    </div>\n                    <div className=\"card-body sidebar-up-next-panel\">\n                        <h6 className=\"card-title mb-2 fw-bolder\">\n                            {this.getNextGameName()}\n                        </h6>\n                        <div className=\"card-subtitle mb-2 fs-7 fst-italic text-light\"\n                            style={{'--bs-text-opacity': '0.75'}}>\n                            {this.getNextGamePartyPack()}\n                        </div>\n\n                        {buttonPlayerSelect}\n                    </div>\n                </div>\n\n                <div className=\"nav-wrapper py-2\">\n                    <button className=\"btn-sm move-next-game-back\" onClick={this.moveNextGameBack}> &#8678; </button>\n                    <button className=\"btn-sm move-next-game-fwd\" onClick={this.moveNextGameFwd}> &#8680; </button>\n                </div>\n\n                <div className=\"card sidebar-panel\">\n                    <DragDropContext onDragEnd={this.handleOnDragEnd}>\n                        <div className=\"card-header fw-bolder\">\n                            History\n                        </div>\n                        <div className=\"card-body sidebar-history-list-panel\">\n                            {this.getHistoryList(this.props.history)}\n                        </div>\n                    </DragDropContext>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {useEffect, useState} from 'react';\n\nconst WheelComponent = ({\n    segments,\n    segColors,\n    winningSegment,\n    onStart = ()=>{},\n    onSpinProgress,\n    onFinished,\n    primaryColor,\n    contrastColor,\n    buttonText,\n    isOnlyOnce = true,\n    size = 290,\n    upDuration = 100,\n    downDuration = 1000,\n    fontFamily = 'proxima-nova',\n    wheelHeight = 720,\n    wheelWidth = 600,\n    enableScrollTop = true,\n    multilineDelimiter = null\n}) => {\n    let currentSegment = '';\n    let currentSegmentLabel = '';\n    let isStarted = false;\n    const [isFinished, setFinished] = useState(false);\n    let timerHandle = 0;\n    const timerDelay = segments.length;\n    let angleCurrent = 0;\n    let angleDelta = 0;\n    let canvasContext = null;\n    let maxSpeed = Math.PI / `${segments.length}`;\n    const upTime = segments.length * upDuration;\n    const downTime = segments.length * downDuration;\n    let spinStart = 0;\n    let frames = 0;\n    const centerX = Math.round(wheelWidth/2);\n    const centerY = Math.round(wheelHeight/2.5);\n\n    useEffect(() => {\n        wheelInit();\n        if (enableScrollTop) {\n            setTimeout(() => {\n                window.scrollTo(0, 1);\n            }, 0);\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    // const spinButton = new Path2D();\n    // TODO: fix scope issues with button\n    // canvasContext.beginPath();\n    // spinButton.arc(centerX, centerY, 50, 0, 2 * Math.PI, false);\n    // canvasContext.fill(rectangle);\n    // canvasContext.beginPath();\n    // canvasContext.arc(centerX, centerY, 50, 0, PI2, false);\n    // canvasContext.closePath();\n\n    const wheelInit = () => {\n        initCanvas();\n        wheelDraw();\n    };\n\n    const initCanvas = () => {\n        let canvas = document.getElementById('canvas');\n        if (navigator.appVersion.indexOf('MSIE') !== -1) {\n            canvas = document.createElement('canvas');\n            canvas.setAttribute('width', wheelWidth);\n            canvas.setAttribute('height', wheelHeight);\n            canvas.setAttribute('id', 'canvas');\n            document.getElementById('wheel').appendChild(canvas);\n        }\n        canvas.addEventListener('click', spin, false);\n        canvasContext = canvas.getContext('2d');\n    };\n    const spin = (event) => {\n        // if (!canvasContext.isPointInPath(spinButton, event.offsetX, event.offsetY)) {\n        //     return;\n        // }\n        isStarted = true;\n        if (timerHandle === 0) {\n            spinStart = new Date().getTime();\n            // maxSpeed = Math.PI / ((segments.length*2) + Math.random())\n            maxSpeed = Math.PI / segments.length;\n            frames = 0;\n            timerHandle = setInterval(onTimerTick, timerDelay);\n        }\n        console.log({maxSpeed});\n        onStart();\n    };\n    const onTimerTick = () => {\n        frames++;\n        draw();\n        const duration = new Date().getTime() - spinStart;\n        let progress = 0;\n        let finished = false;\n        if (duration < upTime) {\n            progress = duration / upTime;\n            angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2);\n        } else {\n            if (winningSegment) {\n                if (currentSegment === winningSegment && frames > segments.length) {\n                    progress = duration / upTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                    progress = 1;\n                } else {\n                    progress = duration / downTime;\n                    angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n                }\n            } else {\n                progress = duration / downTime;\n                angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n            }\n            if (progress >= 1) {\n                finished = true;\n            }\n        }\n\n        angleCurrent += angleDelta;\n        while (angleCurrent >= Math.PI * 2) {\n            angleCurrent -= Math.PI * 2;\n        }\n        if (finished) {\n            setFinished(true);\n            onFinished(currentSegment);\n            clearInterval(timerHandle);\n            timerHandle = 0;\n            angleDelta = 0;\n        }\n        onSpinProgress && onSpinProgress({finished, progress, frames})\n    };\n\n    const wheelDraw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const draw = () => {\n        clear();\n        drawWheel();\n        drawNeedle();\n    };\n\n    const drawSegment = (key, lastAngle, angle) => {\n        const ctx = canvasContext;\n        const value = segments[key];\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(centerX, centerY);\n        ctx.arc(centerX, centerY, size, lastAngle, angle, false);\n        ctx.lineTo(centerX, centerY);\n        ctx.closePath();\n        ctx.fillStyle = segColors[key];\n        ctx.fill();\n        ctx.stroke();\n        ctx.save();\n        ctx.translate(centerX, centerY);\n        ctx.rotate((lastAngle + angle) / 2);\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.font = 'bold 1em ' + fontFamily;\n        // ctx.fillText(value.substr(0, 21), size / 2 + 20, 0);\n        if (multilineDelimiter && value.indexOf(multilineDelimiter) !== -1) {\n            ctx.fillText(value.substr(0, value.indexOf(multilineDelimiter)), size / 2 + 25, -3);\n            ctx.font = '0.75em ' + fontFamily;\n            ctx.fillText(value.substr(value.indexOf(multilineDelimiter) + 1, 21), size / 2 + 25, 11);\n        } else {\n            ctx.fillText(value.substr(0, 21), size / 2 + 25, 0)\n        }\n        ctx.restore();\n    };\n\n    const drawWheel = () => {\n        const ctx = canvasContext;\n        let lastAngle = angleCurrent;\n        const len = segments.length;\n        const PI2 = Math.PI * 2;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        ctx.font = '1em ' + fontFamily;\n        for (let i = 1; i <= len; i++) {\n            const angle = PI2 * (i / len) + angleCurrent;\n            drawSegment(i - 1, lastAngle, angle);\n            lastAngle = angle;\n        }\n\n        // Draw a center circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, 50, 0, PI2, false);\n        ctx.closePath();\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fill();\n        ctx.font = 'bold 1em ' + fontFamily;\n        ctx.fillStyle = contrastColor || 'white';\n        ctx.textAlign = 'center';\n        ctx.fillText(buttonText || 'Spin', centerX, centerY + 3);\n        ctx.stroke();\n\n        // Draw outer circle\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, size, 0, PI2, false);\n        ctx.closePath();\n\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = primaryColor || 'black';\n        ctx.stroke();\n    };\n\n    const drawNeedle = () => {\n        const ctx = canvasContext;\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = contrastColor || 'white';\n        ctx.fileStyle = contrastColor || 'white';\n        ctx.beginPath();\n        ctx.moveTo(centerX + 20, centerY - 50);\n        ctx.lineTo(centerX - 20, centerY - 50);\n        ctx.lineTo(centerX, centerY - 70);\n        ctx.closePath();\n        ctx.fill();\n        const change = angleCurrent + Math.PI / 2;\n        let i = segments.length - Math.floor((change / (Math.PI * 2)) * segments.length) - 1;\n        if (i < 0) {\n            i = i + segments.length;\n        }\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = primaryColor || 'black';\n        ctx.font = 'bold 1.5em ' + fontFamily;\n        currentSegment = segments[i];\n\n        // prevent displaying 'undefined' as the selected label\n        currentSegmentLabel = currentSegment || '';\n        if (isStarted) {\n            ctx.fillText(currentSegmentLabel, centerX + 10, centerY + size + 50);\n        }\n    };\n    const clear = () => {\n        const ctx = canvasContext;\n        ctx.clearRect(0, 0, wheelWidth, wheelHeight);\n    };\n\n    let pointerEvents = 'auto';\n    if (isFinished && isOnlyOnce) {\n        pointerEvents = 'none'\n    }\n\n    return (\n        <div id=\"wheel\" style={{position: 'relative'}}>\n            <canvas id=\"canvas\" width={wheelWidth} height={wheelHeight} style={{pointerEvents}}/>\n        </div>\n    );\n};\nexport default WheelComponent;\n","import {Component} from 'react';\nimport {Button, Modal} from 'react-bootstrap';\nimport ChatActivity, { ActivityStatus } from '../ChatActivity';\nimport ConfettiExplosion from '@reonomy/react-confetti-explosion';\nimport GameRequest from '../components/GameRequest'\nimport MessageHandler from '../MessageHandler';\nimport OptionsMenu from './OptionsMenu';\nimport PlayerSelect from '../components/PlayerSelect';\nimport Sidebar from './Sidebar'\nimport WheelComponent from '../WheelComponent'; //'react-wheel-of-prizes'\nimport * as fakeStates from '../example-states';\n\nimport './MainScreen.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nconst randomColor = require('randomcolor');\n\n\nexport default class MainScreen extends Component {\n    constructor(props){\n        super(props);\n        this.chatActivity = new ChatActivity(this.props.channel)\n        this.state = {\n            allowGameRequests: true,\n            gameSelected: null,\n            messages: {},\n            colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\n            counter: 0,\n            history: [],\n            nextGameIdx: 0,\n            showOptionsMenu: false,\n            showOptionsModal: false,\n            showPlayerSelect: false\n        };\n\n        this.playerSelector = null;\n        this.messageHandler = null;\n\n        this.changeNextGameIdx = this.changeNextGameIdx.bind(this);\n        this.moveNextGameFwd = this.moveNextGameFwd.bind(this);\n        this.moveNextGameBack = this.moveNextGameBack.bind(this);\n        this.addGameRequest = this.addGameRequest.bind(this);\n        this.toggleLock = this.toggleLock.bind(this);\n        this.setNextGame = this.setNextGame.bind(this);\n        this.addGameToQueue = this.addGameToQueue.bind(this);\n        this.onWheelSpun = this.onWheelSpun.bind(this);\n        this.removeGame = this.removeGame.bind(this);\n        this.onMessage = this.onMessage.bind(this);\n        this.toggleAllowGameRequests = this.toggleAllowGameRequests.bind(this);\n        this.togglePlayerSelect = this.togglePlayerSelect.bind(this);\n        this.routePlayRequest = this.routePlayRequest.bind(this);\n        this.routeLeaveRequest = this.routeLeaveRequest.bind(this);\n        this.routeOpenQueueRequest = this.routeOpenQueueRequest.bind(this);\n        this.routeCloseQueueRequest = this.routeCloseQueueRequest.bind(this);\n        this.routeClearQueueRequest = this.routeClearQueueRequest.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.setMessageHandlerRef = this.setMessageHandlerRef.bind(this);\n        this.setPlayerSelectRef = this.setPlayerSelectRef.bind(this);\n    }\n\n    componentDidMount() {\n        if (window.location.hash.indexOf('fakestate=true') !== -1) {\n            if (window.location.hash.indexOf('playerselect=true') !== -1) {\n                this.setState(\n                    Object.assign({}, fakeStates.MainScreen, {\n                        showPlayerSelect: true\n                    })\n                );\n            } else {\n                this.setState(fakeStates.MainScreen);\n            }\n        }\n    }\n\n    changeNextGameIdx = (delta = 1) => {\n        if (this.state.nextGameIdx + delta > this.state.history.length) return false;\n        if (this.state.nextGameIdx + delta < 0) return false;\n        this.setState((state) => {\n            return {\n                nextGameIdx: state.nextGameIdx + delta\n            }\n        });\n        return true;\n    }\n\n    changeGameOrder = (history, nextGameIdx) => {\n        if (nextGameIdx > history.length) return false;\n        this.setState({\n            history,\n            nextGameIdx\n        });\n        return true;\n    }\n\n    moveNextGameFwd = () => {\n        return this.changeNextGameIdx();\n    }\n\n    moveNextGameBack = () => {\n        return this.changeNextGameIdx(-1);\n    }\n\n    addGameRequest = (gameObj, user) => {\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: {\n                    ...this.state.messages,\n                    [gameObj.longName]: {\n                        ...gameObj,\n                        username: user,\n                        time: Date.now(),\n                        locked: false,\n                        chosen: false\n                    }\n                },\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    toggleLock = (game) => {\n        const stateCopy = {...this.state.messages[game]};\n        stateCopy.locked = !stateCopy.locked\n\n        this.setState(() => {\n            return {\n                ...this.state,\n                messages: {\n                    ...this.state.messages,\n                    [game]: stateCopy\n                }\n            }\n        });\n    }\n\n    // @return: the number of games ahead of this one, after successfully inserting in queue\n    // (i.e. if it's the very next game, return 0; if there's one ahead, return 1; etc)\n    setNextGame = (gameObj) => {\n        let idx = this.state.nextGameIdx;\n\n        // insert next game at next up position by default, but\n        //      *after* any other manually inserted games\n        while (idx < this.state.history.length && this.state.history[idx]?.override) {\n            idx++;\n        }\n\n        this.setState((state) => {\n            return {\n                ...state,\n                history: [\n                    ...state.history.slice(0, Math.max(0, idx)),\n                    {\n                        ...gameObj,\n                        override: true,\n                        time: Date.now()\n                    },\n                    ...state.history.slice(idx)\n                ]\n            }\n        });\n\n        return idx - this.state.nextGameIdx;\n    }\n\n    addGameToQueue = (gameObj) => {\n        // update history + game card highlight color\n        this.setState((state) => {\n            return {\n                ...state,\n                gameSelected: gameObj,\n                history: [\n                    ...this.state.history,\n                    {\n                        ...gameObj,\n                        override: false\n                    }\n                ],\n                messages: {\n                    ...state.messages,\n                    [gameObj.longName]: {\n                        ...state.messages[gameObj.longName],\n                        chosen: true\n                    }\n                }\n            }\n        });\n    }\n\n    clearModal = () => {\n        this.setState({\n            gameSelected: null\n        });\n    }\n\n    getGamesList = () => {\n        return {\n            allowedGames: this.messageHandler?.state.allowedGames,\n            validGames: this.messageHandler?.state.validGames\n        }\n    }\n\n    onWheelSpun = (gameLongName) => {\n        const gameRequestObj = this.state.messages?.[gameLongName];\n        if (!gameRequestObj) return;\n\n        // send confirmation message in chat\n        const requester = gameRequestObj.username;\n\n        this.addGameToQueue(gameRequestObj);\n\n        // remove card unless it's locked\n        if (!this.state.messages[gameLongName].locked) {\n            setTimeout(() => {\n                this.removeGame(gameLongName);\n                this.clearModal();\n            }, 4000);\n        }\n\n        return this.chatActivity.getStatusPromise(requester).then((status) => {\n            let msg = \"\";\n            switch(status) {\n                case ActivityStatus.DISCONNECTED:\n                    msg = `/me ${gameRequestObj.name} just won the spin, but it doesn't seem like @${requester} is still around. Hope someone else wants to play!`\n                    break;\n\n                case ActivityStatus.ACTIVE:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin!`;\n                    break;\n\n                case ActivityStatus.IDLE:\n                default:\n                    msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin! (I hope you're still around!)`;\n            }\n            return this.messageHandler.sendMessage(msg);\n        })\n\n    }\n\n    removeGame = (gameLongName) => {\n        const newMessageObj = {...this.state.messages};\n        delete newMessageObj[gameLongName];\n        this.setState((state) => {\n            return {\n                ...state,\n                messages: newMessageObj,\n                counter: this.state.counter + 1\n            };\n        })\n    }\n\n    onMessage = (message, user, metadata) => {\n        this.chatActivity.updateLastMessageTime(user);\n    }\n\n    toggleAllowGameRequests = (allow=null) => {\n        let {allowGameRequests} = this.state;\n        if (allow !== null && typeof allow !== 'object') {\n            allowGameRequests = !allow;\n        }\n        this.setState((state) => {\n            return {\n                allowGameRequests: !allowGameRequests\n            }\n        })\n    }\n\n    toggleOptionsMenu = () => {\n        this.setState((state) => {\n            return {\n                showOptionsMenu: !state.showOptionsMenu\n            }\n        })\n    }\n\n    toggleOptionsModal = () => {\n        this.setState((state) => {\n            return {\n                showOptionsModal: !state.showOptionsModal\n            }\n        })\n    }\n\n    togglePlayerSelect = () => {\n        this.setState((state) => {\n            return {\n                showPlayerSelect: !state.showPlayerSelect\n            }\n        })\n    }\n\n    routePlayRequest = (user, {sendConfirmationMsg = true, isPrioritySeat = false}) => {\n        const msg = this.state.showPlayerSelect\n            ? this.playerSelector?.handleNewPlayerRequest(user, {isPrioritySeat})\n            : 'sign-ups are currently closed; try again after this game wraps up!'\n\n        if (sendConfirmationMsg) {\n            this.messageHandler?.sendMessage(`/me @${user}, ${msg}`);\n        }\n    }\n\n    routeLeaveRequest = (user) => {\n        this.playerSelector?.removeUser(user);\n    }\n\n    routeOpenQueueRequest = () => {\n        this.setState((state) => {\n            return {\n                ...state,\n                showPlayerSelect: true\n            }\n        })\n        this.playerSelector?.openQueue();\n    }\n\n    routeCloseQueueRequest = () => {\n        this.playerSelector?.closeQueue();\n    }\n\n    routeClearQueueRequest = () => {\n        this.playerSelector?.clearQueue();\n    }\n\n    startGame = () => {\n        if (this.state.showPlayerSelect) {\n            this.togglePlayerSelect();\n            this.moveNextGameFwd();\n            return true;\n        }\n        return false;\n    }\n\n    setMessageHandlerRef = (ps) => {\n        this.messageHandler = ps;\n    };\n\n    setPlayerSelectRef = (mh) => {\n        this.playerSelector = mh;\n    };\n\n    renderGameChosenModal(gameObj) {\n        let confettiProps = {\n            force: 0.6,\n            duration: 3500,\n            particleCount: 100,\n            floorHeight: Math.max(window.outerWidth, window.outerHeight),\n            floorWidth: Math.max(window.outerWidth, window.outerHeight)\n        };\n        let requestedBy;\n        if (gameObj.username) {\n            requestedBy = (<h4>requested by @{gameObj.username}</h4>);\n        }\n        return (\n            <>\n                <div className=\"overlay fade-in-out\">\n                    <div className=\"confetti-wrapper\">\n                        <ConfettiExplosion {...confettiProps} />\n                    </div>\n                </div>\n                <div className=\"confetti-modal modal-game-chosen fade-in-out\" onClick={()=>this.removeGame(gameObj.longName)}>\n                    <h1>{gameObj.name}</h1>\n                    {requestedBy}\n                </div>\n            </>\n        );\n    }\n\n    renderOptionsModal() {\n        let {allowedGames, validGames} = this.messageHandler.state;\n        let gamePackList = [].concat(...Object.entries(validGames).map((packData, idx) => {\n            return Object.keys(packData[1]).map(gameData => {\n                let gameId = `${packData[0]} ${gameData}`.replace(/\\W/ig, '_');\n                return {\n                    id: gameId,\n                    game: gameData,\n                    pack: packData[0]\n                }\n            })\n        }))\n        // let gamesList = gamePackList.map(g => g.game);\n        console.log('gamePackList:', gamePackList, allowedGames);\n\n        return (\n            <Modal\n                show={this.state.showOptionsModal}\n                onHide={()=>this.toggleOptionsModal(false)}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered>\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        Options\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h4>Options</h4>\n                    <div className=\"options-list\">\n                        <ul>\n                            {gamePackList.map(({id, game, pack}, idx) => {\n                                // let gameId = `${g.pack} ${g.game}`.replace(/\\W/ig, '_');\n                                return (\n                                    <li key={id}>\n                                        <input type=\"checkbox\" id={id} name={id} value={id} /> <label htmlFor={id}>{pack}: {game}</label>\n                                    </li>\n                                )}\n                            )}\n                        </ul>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button data-bs-dismiss=\"modal\">Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n\n    render() {\n        const gameRequestArray = Object.keys(this.state.messages);\n\n\n        let gameSelectedModal;\n        if (this.state.showOptionsModal) {\n            gameSelectedModal = this.renderOptionsModal();\n        } else if (this.state.gameSelected) {\n            gameSelectedModal = this.renderGameChosenModal(this.state.gameSelected);\n        }\n\n        let mainClassName = this.state.showPlayerSelect ? 'player-select' : 'game-select';\n\n        let subheading = this.state.showPlayerSelect ? (\n            <span className=\"subheading-player fade-in-delay\">\n                Type <b>!new</b> in {this.props.channel}'s chat if you want to join the next game\n            </span>\n        ) : (\n            <span\n                className={`subheading-game ${(this.state.allowGameRequests === true ? 'fade-in-delay' : 'fade-out')}`} \n                title={`Click to ${this.state.allowGameRequests === true ? 'disable' : 'enable'} game requests.`} \n                onClick={this.toggleAllowGameRequests}>\n                Type e.g. <b>\"!request Blather Round\"</b> in {this.props.channel}'s chat to add\n            </span>\n        );\n\n        let innerContent;\n        let rightColumn;\n\n        if (this.state.showPlayerSelect) {\n            innerContent = (\n                <PlayerSelect\n                    game={this.state.history?.[this.state.nextGameIdx]}\n                    startGame={this.startGame}\n                    ref={this.setPlayerSelectRef}\n                />\n            );\n        } else {\n            innerContent = gameRequestArray.map((gameName, i) =>\n                <GameRequest\n                    key={i}\n                    gameName={gameName}\n                    metadata={this.state.messages[gameName]}\n                    onDelete={this.removeGame}\n                    toggleLock={this.toggleLock.bind(gameName)}\n                    getActivity={this.chatActivity.getStatusPromise}\n                />\n            );\n            rightColumn = (\n                <div className=\"right-column\" width=\"50px\">\n                    <div className=\"wheel-wrapper fade-in\">\n                         <WheelComponent\n                            key={this.state.counter}\n                            segments={gameRequestArray}\n                            segColors={this.state.colors}\n                            onFinished={this.onWheelSpun}\n                            isOnlyOnce={false}\n                            size={250}\n                            upDuration={100}\n                            downDuration={1000}\n                            primaryColor={\"white\"}\n                            contrastColor={\"black\"}\n                            fontFamily={\"Arial\"}\n                            multilineDelimiter={' ('}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        let gamesList = this.getGamesList();\n\n        return (\n            <div id=\"main-screen\" className={mainClassName}>\n                <nav className=\"main-screen-nav navbar-dark\">\n                    <button className=\"btn btn-toggle-options float-end navbar-toggler\" type=\"button\" onClick={this.toggleOptionsMenu}>\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                </nav>\n                <MessageHandler\n                    addGameRequest={this.addGameRequest}\n                    allowGameRequests={this.state.allowGameRequests}\n                    setNextGame={this.setNextGame}\n                    changeNextGameIdx={this.changeNextGameIdx}\n                    startGame={this.startGame}\n                    messages={this.state.messages}\n                    channel={this.props.channel}\n                    modList={this.props.modList}\n                    access_token={this.props.access_token}\n                    onMessage={this.onMessage}\n                    onDelete={this.removeGame}\n                    previousGames={this.state.history.slice(0, this.state.nextGameIdx)}\n                    upcomingGames={this.state.history.slice(this.state.nextGameIdx)}\n                    caniplayHandler={this.routePlayRequest}\n                    playerExitHandler={this.routeLeaveRequest}\n                    openQueueHandler={this.routeOpenQueueRequest}\n                    closeQueueHandler={this.routeCloseQueueRequest}\n                    clearQueueHandler={this.routeClearQueueRequest}\n                    toggleAllowGameRequests={this.toggleAllowGameRequests}\n                    ref={this.setMessageHandlerRef}\n                />\n                <div className=\"left-column fade-in\">\n\n                    <h1>{this.state.showPlayerSelect ? 'Seat Requests' : 'Game Requests'}</h1>\n                    <h4>{subheading}</h4>\n\n                    <div className=\"left-column-body\">\n                        <Sidebar\n                            changeGameOrder={this.changeGameOrder}\n                            history={this.state.history}\n                            nextGameIdx={this.state.nextGameIdx}\n                            changeNextGameIdx={this.changeNextGameIdx}\n                            moveNextGameFwd={this.moveNextGameFwd}\n                            moveNextGameBack={this.moveNextGameBack}\n                            togglePlayerSelect={this.togglePlayerSelect}\n                            requestMode={this.state.showPlayerSelect ? 'seat' : 'game'}\n                        />\n                        <div className=\"left-column-inner-body\">\n                            {innerContent}\n                        </div>\n                    </div>\n                </div>\n                {rightColumn}\n                {gameSelectedModal}\n                <OptionsMenu\n                    gamesList={gamesList}\n                    reloadGameList={this.messageHandler?.reloadGameList}\n                    onHide={this.toggleOptionsMenu}\n                    onLogout={this.props.onLogout}\n                    showOptionsMenu={this.state.showOptionsMenu} />\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport MainScreen from './landing/MainScreen';\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport queryString from 'query-string'\nconst fetch = require('node-fetch');\n\nclass AuthenticatedApp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: localStorage.getItem('__username'),\n            access_token: localStorage.getItem('__access_token'),\n            failed_login: false\n        }\n        this.getAuth = this.getAuth.bind(this);\n        this.getUsers = this.getUsers.bind(this);\n        this.logOut = this.logOut.bind(this);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        if (!this.state.access_token) {\n            return this.getAuth();\n        }\n        return this.getUsers(this.state.access_token).catch(e => {\n            console.error(e);\n            return this.getAuth(e);\n        });\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    async getAuth(e) {\n        if (e) {\n            console.error(e);\n        }\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__access_token');\n\n        const queryParams = queryString.parse(this.props.location.search);\n        const requestParams = new URLSearchParams({\n            grant_type: 'authorization_code',\n            code: queryParams.code,\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n        return await fetch(`https://id.twitch.tv/oauth2/token?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        })\n        .then(r => r.json())\n        .then((oauth) => {\n            //console.log(oauth);  access_token, refresh_token, expires_in, scope ['...']\n            if (this._isMounted) {\n                if (!oauth.access_token) {\n                    return this.setState({\n                        failed_login: true\n                    });\n                }\n\n                localStorage.setItem('__access_token', oauth.access_token);\n\n                this.setState({\n                    access_token: oauth.access_token\n                });\n\n                return this.getUsers(oauth.access_token);\n            }\n            return;\n        })\n        .catch(e => {\n            console.error(e);\n            if (this._isMounted) {\n                return this.setState({\n                    failed_login: true\n                });\n            }\n            return;\n        });\n    }\n\n    getUsers(access_token) {\n        return fetch('https://api.twitch.tv/helix/users', {\n            headers: {\n                'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                Authorization: `Bearer ${this.state.access_token}`\n            }\n        })\n        .then(r => r.json())\n        .then(userInfo => {\n            //console.log(userInfo); login [aka lowercase username?], display_name, profile_image_url, description\n            localStorage.setItem('__username', userInfo.data[0].login);\n            return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\n                headers: {\n                    'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\n                    Authorization: `Bearer ${this.state.access_token}`\n                }\n            })\n            .then(r => r.json())\n            .then(modInfo => {\n                const modList = (!modInfo.data)\n                    ? null\n                    : modInfo.data.map((modObj) => (!modObj.user_name) ? null : modObj.user_name.toLowerCase()).filter(user => user);\n                if (this._isMounted) {\n                    return this.setState({\n                        username: userInfo.data[0].login,\n                        modList\n                    });\n                }\n                return;\n            });\n        });\n    }\n\n    logOut() {\n        localStorage.removeItem('__username');\n        localStorage.removeItem('__access_token');\n\n        const requestParams = new URLSearchParams({\n            client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\n            token: this.state.access_token,\n            redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\n        });\n\n        return fetch(`https://id.twitch.tv/oauth2/revoke?${requestParams}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/vnd.twitchtv.v5+json'\n            }\n        }).then(() => {\n            return window.location.reload();\n        });\n    }\n\n    render() {\n        if (this.state.failed_login) {\n            return (<Redirect to=\"/login\"/>);\n        }\n        let mainContent;\n        let classNames = ['authenticated-app'];\n        if (this.state.username) {\n            mainContent = (\n                <MainScreen\n                    channel={this.state.username}\n                    modList={this.state.modList}\n                    access_token={this.state.access_token}\n                    onLogout={this.logOut}\n                />\n            );\n        }\n\n        return (\n            <div id={classNames.join(' ')}>\n                {mainContent}\n            </div>\n        );\n    }\n}\n\nexport {AuthenticatedApp};\n\nexport default withRouter(AuthenticatedApp);\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './JackboxGameList.css';\nconst fetch = require('node-fetch');\n\nconst PartyPackCard = function (props) {\n  const gameList = Object.keys(props.metadata);\n  return (\n    <div className=\"partyPackCard\">\n      <p className=\"partyPackName\">{props.partyPackName} </p>\n      {gameList.map((gameName, i) =>\n        <GameCard\n          key={i}\n          gameName={gameName}\n          possibleMatches={props.metadata?.[gameName]?.Variants}\n        />\n      )}\n    </div>\n  );\n}\n\n\n// <p> {props.gameName} <p>\n\nconst GameCard = function(props) {\n  return (\n    <div className=\"mt-2 lh-sm\">\n      <p className=\"gameName\">{props.gameName} </p>\n      {props.possibleMatches.map((possibleMatch, i) =>\n        <li className=\"possibleGameMatch\" key={`${props.gameName}-${i}`}>!request {possibleMatch}</li>\n      )}\n    </div>\n  );\n}\n\nexport default class JackboxGameList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validGames: []\n    };\n  }\n\n  componentDidMount(props) {\n    fetch(rawJackboxGameList)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            validGames: YAML.parse(text)\n          };\n        });\n      })\n    }\n\n\n\n    render() {\n      const partyPackList = Object.keys(this.state.validGames);\n      return (\n        <div className=\"partyPackList\">\n          {partyPackList.map((partyPackName, i) =>\n            <PartyPackCard\n              key={i}\n              partyPackName={partyPackName}\n              metadata={this.state.validGames[partyPackName]}\n            />\n          )}\n        </div>\n      );\n    }\n\n}\n","import React, {Component} from 'react';\nimport {version} from '../package.json';\n\nimport './LoginScreen.css';\n\nconst scopes = 'chat:read chat:edit moderation:read';\nconst loginUrl = 'https://id.twitch.tv/oauth2/authorize'\n    + `?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}`\n    + `&response_type=code&scope=${scopes}`\n    + `&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`;\n\nclass LoginScreen extends Component {\n\n    render() {\n        return (\n            <div id=\"login-screen\" className=\"fade-in\">\n                <a href={loginUrl} className=\"btn btn-sm fs-2\">\n                    Log In With <strong>Twitch</strong>\n                </a>\n                <br/>\n                <small>\n                    {`v${version}`}\n                </small>\n            </div>\n        );\n    }\n}\n\nexport default LoginScreen;\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './OptionsList.css';\nconst fetch = require('node-fetch');\n\nexport default class OptionsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allowedGames: [],\n            validGames: []\n        };\n    }\n\n    componentDidMount(props) {\n        fetch(rawJackboxGameList)\n            .then(r => r.text())\n            .then(text => {\n                let validGames = YAML.parse(text);\n                // this.setState({validGames});\n                this.setAllowedGames(validGames);\n            });\n    }\n\n    componentDidUpdate() {\n        if (!this.state.allowedGames || this.state.validGames.length === 0 || this.state.allowedGames.length === 0) return;\n        localStorage.setItem('__allowedGames', JSON.stringify(this.state.allowedGames));\n    }\n\n    getAllowedGames = function(validGames) {\n        let __allowedGames = localStorage.getItem('__allowedGames');\n        let allowedGames = (__allowedGames) ? JSON.parse(__allowedGames) : {};\n\n\n        // let output = {};\n        //\n        // // return list of valid games merged with existing allowedGames\n        // Object.entries(validGames).forEach(([pack, packGames]) => {\n        //     // get valid games within each pack\n        //     Object.keys(packGames).forEach(game => {\n        //         let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n        //         output[gameId] = (allowedGames[gameId])\n        //             ? allowedGames[gameId]\n        //             : {\n        //                 id: gameId,\n        //                 game,\n        //                 pack,\n        //                 enabled: true\n        //             };\n        //         output[gameId] = allowedGames[gameId];\n        //     });\n        // });\n        // return output;\n\n        // return list of valid games merged with existing allowedGames\n        return Object.assign({},\n            ...[].concat(\n                ...Object.entries(validGames).map(([pack, packGames]) => {\n                    // get valid games within each pack\n                    return Object.assign({},\n                        ...Object.keys(packGames).map(game => {\n                            let gameId = `${pack} ${game}`.replace(/\\W/ig, '_');\n                            if (gameId in allowedGames && allowedGames[gameId].id !== undefined) {\n                                return {\n                                    [gameId]: allowedGames[gameId]\n                                };\n                            }\n                            // add entry with default value\n                            // console.log(`Adding ${gameId}`);\n                            return {\n                                [gameId]: {\n                                    id: gameId,\n                                    game,\n                                    pack,\n                                    enabled: true\n                                }\n                            }\n                        })\n                    );\n                })\n            )\n        )\n    }\n\n    setAllowedGames = function(validGames) {\n        let allowedGames = this.getAllowedGames(validGames);\n        this.setState({\n            allowedGames,\n            validGames\n        });\n        localStorage.setItem('__allowedGames', JSON.stringify(allowedGames));\n    }\n\n    onCheckHandler = ({target}) => {\n        let {id, checked} = target;\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                [id]: {\n                    ...prevState.allowedGames[id],\n                    enabled: checked\n                }\n            }\n        }));\n    }\n\n    onGroupCheckHandler = ({target}) => {\n        let {value, checked} = target;\n        // console.log({value, checked});\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === value);\n        this.setState((prevState) => ({\n            allowedGames: {\n                ...prevState.allowedGames,\n                ...Object.assign(\n                    ...packGames.map(g => ({\n                        [g.id]: {\n                            ...g,\n                            enabled: checked\n                        }\n                    })\n                ))\n            }\n        }));\n    }\n\n    renderGameCard = function(props) {\n        let {id, game, pack} = props;\n        let {allowedGames} = this.state;\n        let checked = allowedGames[id]?.enabled || false;\n        return (\n            <li className=\"gameName\" key={id}>\n                <input type=\"checkbox\" id={id} name={id} value={id} checked={checked} onChange={this.onCheckHandler} />\n                {' '}\n                <label htmlFor={id} title={`${pack}: ${game}`}>\n                    {game}\n                </label>\n            </li>\n        );\n    }\n\n    renderPackCheckbox = function(pack) {\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === pack);\n        let isChecked = packGames.filter(g => g.enabled === true).length === packGames.length;\n        return (\n            <input type=\"checkbox\" id={pack} name={pack} value={pack} checked={isChecked} onChange={this.onGroupCheckHandler} />\n        );\n    }\n\n    renderPartyPack = function (props) {\n        const gameList = Object.keys(props.metadata);\n\n        let packGames = Object.values(this.state.allowedGames).filter(game => game.pack === props.partyPackName);\n        let gamesEnabled = packGames.filter(g => g.enabled === true)\n        let isChecked = gamesEnabled.length === packGames.length;\n        let isIndeterminate = (!isChecked && gamesEnabled.length !== 0)\n        return (\n            <div className=\"partyPackCard\" key={props.key}>\n                <p className=\"partyPackName\">\n                    {props.partyPackName} <input type=\"checkbox\" id={props.partyPackName} name={props.partyPackName} value={props.partyPackName} checked={isChecked} onChange={this.onGroupCheckHandler} ref={el => el && (el.indeterminate = isIndeterminate)} />\n                </p>\n                <ul className=\"partyPackGameList\">\n                    {gameList.map(\n                        (gameName, i) => this.renderGameCard({\n                            game: gameName,\n                            id: `${props.partyPackName} ${gameName}`.replace(/\\W/ig, '_'),\n                            pack: props.partyPackName\n                        })\n                    )}\n                </ul>\n            </div>\n        );\n    }\n\n    render() {\n        let {validGames} = this.state;\n        const partyPackList = Object.keys(validGames);\n\n        return (\n            <div className=\"partyPackList\">\n                {partyPackList.map(\n                    (partyPackName, i) => this.renderPartyPack({\n                        key: i,\n                        partyPackName,\n                        metadata: this.state.validGames[partyPackName]\n                    })\n                )}\n            </div>\n        );\n    }\n\n}\n","import AuthenticatedApp from './AuthenticatedApp';\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport JackboxGameList from './JackboxGameList';\nimport LoginScreen from './LoginScreen';\nimport OptionsList from './OptionsList';\nimport React, {Component} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n\n        let classNames = ['App'];\n        if (window.location.hash.indexOf('legacy=true') !== -1) {\n            classNames.push('legacy');\n        }\n\n        return (\n            <HashRouter basename='/'>\n                <div className={classNames.join(' ')}>\n                    <Switch>\n                        <Route exact path=\"/login\" component={LoginScreen} />\n                        <Route exact path=\"/gamelist\" component={JackboxGameList}/>\n                        <Route exact path=\"/options\" component={OptionsList}/>\n                        <Route path=\"/\" component={AuthenticatedApp}/>\n                    </Switch>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n\nexport {LoginScreen};\n","import { ReportHandler } from 'web-vitals';\nimport { getCLS, getFID, getFCP, getLCP, getTTFB } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    getCLS(onPerfEntry);\n    getFID(onPerfEntry);\n    getFCP(onPerfEntry);\n    getLCP(onPerfEntry);\n    getTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport React from 'react';\nimport {render} from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nrender(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}